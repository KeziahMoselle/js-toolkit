{"version":3,"sources":["../src/index.js"],"names":["Base","defineComponent","options","config","methods","hooks","Error","name","Component","allowedHooks","filteredHooks","Object","entries","reduce","acc","fn","includes","join","forEach","prototype","createBase","elementOrSelector","element","document","querySelector"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,kBAAjB;AAYA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAAA,MAC/BC,MAD+B,GACDD,OADC,CAC/BC,MAD+B;AAAA,MACvBC,OADuB,GACDF,OADC,CACvBE,OADuB;AAAA,MACXC,KADW,4BACDH,OADC;;AAGvC,MAAI,CAACC,MAAL,EAAa;AACX,UAAM,IAAIG,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAED,MAAI,CAACH,MAAM,CAACI,IAAZ,EAAkB;AAChB,UAAM,IAAID,KAAJ,CAAU,yCAAV,CAAN;AACD;;AATsC,MAcjCE,SAdiC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,IAcfR,IAde;;AAAA,kBAcjCQ,SAdiC,YAkBrBL,MAlBqB;;AAqBvC,MAAMM,YAAY,GAAG,CACnB,SADmB,EAEnB,QAFmB,EAGnB,QAHmB,EAInB,SAJmB,EAKnB,OALmB,EAMnB,OANmB,EAOnB,UAPmB,EAQnB,WARmB,EASnB,YATmB,CAArB;AAYA,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAeP,KAAf,EAAsBQ,MAAtB,CAA6B,UAACC,GAAD,QAAqB;AAAA;AAAA,QAAdP,IAAc;AAAA,QAARQ,EAAQ;;AACtE,QAAIN,YAAY,CAACO,QAAb,CAAsBT,IAAtB,CAAJ,EAAiC;AAC/BO,MAAAA,GAAG,CAACP,IAAD,CAAH,GAAYQ,EAAZ;AACD,KAFD,MAEO;AACL,YAAM,IAAIT,KAAJ,6BAEKC,IAFL,8JAImCE,YAAY,CAACQ,IAAb,CAAkB,IAAlB,CAJnC,gBAAN;AAOD;;AAED,WAAOH,GAAP;AACD,GAdqB,EAcnB,EAdmB,CAAtB;AAgBA,+BAAIH,MAAM,CAACC,OAAP,CAAeR,OAAO,IAAI,EAA1B,CAAJ,sBAAsCO,MAAM,CAACC,OAAP,CAAeF,aAAf,CAAtC,GAAqEQ,OAArE,CAA6E,iBAAgB;AAAA;AAAA,QAAdX,IAAc;AAAA,QAARQ,EAAQ;;AAC3FP,IAAAA,SAAS,CAACW,SAAV,CAAoBZ,IAApB,IAA4BQ,EAA5B;AACD,GAFD;AAIA,SAAOP,SAAP;AACD;AAOD,OAAO,SAASY,UAAT,CAAoBC,iBAApB,EAAuCnB,OAAvC,EAAgD;AACrD,MAAMM,SAAS,GAAGP,eAAe,CAACC,OAAD,CAAjC;AAEA,MAAMoB,OAAO,GACX,OAAOD,iBAAP,KAA6B,QAA7B,GACIE,QAAQ,CAACC,aAAT,CAAuBH,iBAAvB,CADJ,GAEIA,iBAHN;AAIA,SAAO,IAAIb,SAAJ,CAAcc,OAAd,CAAP;AACD;AAED,eAAetB,IAAf","sourcesContent":["import Base from './abstracts/Base';\n\n/**\n * @typedef {import('./abstracts/Base').BaseComponent} BaseComponent\n */\n\n/**\n * Define a component without a class.\n *\n * @param  {Object} options The component's object\n * @return {BaseComponent}           A component's class.\n */\nexport function defineComponent(options) {\n  const { config, methods, ...hooks } = options;\n\n  if (!config) {\n    throw new Error('The `config` property is required.');\n  }\n\n  if (!config.name) {\n    throw new Error('The `config.name` property is required.');\n  }\n\n  /**\n   * Component class.\n   */\n  class Component extends Base {\n    /**\n     * Component config.\n     */\n    static config = config;\n  }\n\n  const allowedHooks = [\n    'mounted',\n    'loaded',\n    'ticked',\n    'resized',\n    'moved',\n    'keyed',\n    'scrolled',\n    'destroyed',\n    'terminated',\n  ];\n\n  const filteredHooks = Object.entries(hooks).reduce((acc, [name, fn]) => {\n    if (allowedHooks.includes(name)) {\n      acc[name] = fn;\n    } else {\n      throw new Error(\n        `\n          The \"${name}\" method is not a Base lifecycle hook,\n          it should be placed in the \"method\" property.\n          The following hooks are available: ${allowedHooks.join(', ')}\n        `\n      );\n    }\n\n    return acc;\n  }, {});\n\n  [...Object.entries(methods || {}), ...Object.entries(filteredHooks)].forEach(([name, fn]) => {\n    Component.prototype[name] = fn;\n  });\n\n  return Component;\n}\n\n/**\n * Create a Base instance with the given object configuration.\n * @param {HTMLElement|String} elementOrSelector The instance root HTML element.\n * @param {Object}             options           The Base class configuration.\n */\nexport function createBase(elementOrSelector, options) {\n  const Component = defineComponent(options);\n  /** @type {HTMLElement} */\n  const element =\n    typeof elementOrSelector === 'string'\n      ? document.querySelector(elementOrSelector)\n      : elementOrSelector;\n  return new Component(element);\n}\n\nexport default Base;\n"],"file":"index.js"}