{"version":3,"sources":["../../src/components/MediaQuery.js"],"names":["MediaQuery","test","child","isInBreakpoints","activeBreakpoints","includes","currentBreakpoint","$isMounted","$mount","$destroy","name","$el","firstElementChild","__base__","props","breakpoint","dataset","split","Base"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA;;;;;;;IAOqBA,U;;;;;;;;;;;;;AAYnB;;;8BAGU;AAAA;;AACR,WAAKC,IAAL;AACA,8BAAU;AAAA,eAAM,KAAI,CAACA,IAAL,EAAN;AAAA,OAAV;AACD;AAED;;;;;;8BAGU;AACR,WAAKA,IAAL;AACD;AAED;;;;;;;;;;AAoCA;;;;;;2BAMO;AACL,UAAI,CAAC,KAAKC,KAAV,EAAiB;AACf;AACD;;AAED,UAAMC,eAAe,GAAG,KAAKC,iBAAL,CAAuBC,QAAvB,CAAgC,KAAKC,iBAArC,CAAxB;;AAEA,UAAIH,eAAe,IAAI,CAAC,KAAKD,KAAL,CAAWK,UAAnC,EAA+C;AAC7C,aAAKL,KAAL,CAAWM,MAAX;AACA;AACD;;AAED,UAAI,CAACL,eAAD,IAAoB,KAAKD,KAAL,CAAWK,UAAnC,EAA+C;AAC7C,aAAKL,KAAL,CAAWO,QAAX;AACD;AACF;;;;AAnFD;;;;;wBAKa;AACX,aAAO;AACLC,QAAAA,IAAI,EAAE;AADD,OAAP;AAGD;;;wBAuBW;AACV,UAAI,KAAKC,GAAL,CAASC,iBAAT,IAA8B,KAAKD,GAAL,CAASC,iBAAT,CAA2BC,QAA7D,EAAuE;AACrE,eAAO,KAAKF,GAAL,CAASC,iBAAT,CAA2BC,QAAlC;AACD;;AAED,aAAO,KAAP;AACD;AAED;;;;;;;;wBAKwB;AACtB,aAAO,uBAAYC,KAAZ,GAAoBC,UAA3B;AACD;AAED;;;;;;;;wBAKwB;AACtB,UAAI,KAAKJ,GAAL,CAASK,OAAT,CAAiBZ,iBAArB,EAAwC;AACtC,eAAO,KAAKO,GAAL,CAASK,OAAT,CAAiBZ,iBAAjB,CAAmCa,KAAnC,CAAyC,GAAzC,CAAP;AACD;;AAED,aAAO,EAAP;AACD;;;EA7DqCC,c","sourcesContent":["import Base from '../abstracts/Base';\nimport useResize from '../services/resize';\nimport nextFrame from '../utils/nextFrame';\n\n/**\n * MediaQuery component.\n *\n * <div data-component=\"MediaQuery\" data-active-breakpoints=\"l xl\">\n *   <div data-component=\"Foo\"></div>\n * </div>\n */\nexport default class MediaQuery extends Base {\n  /**\n   * Component's configuration.\n   *\n   * @return {Object}\n   */\n  get config() {\n    return {\n      name: 'MediaQuery',\n    };\n  }\n\n  /**\n   * Mounted hook.\n   */\n  mounted() {\n    this.test();\n    nextFrame(() => this.test());\n  }\n\n  /**\n   * Resized hook.\n   */\n  resized() {\n    this.test();\n  }\n\n  /**\n   * Get the first element child of the component, as it must be another Base component that could\n   * be either $mounted or $destroyed.\n   *\n   * @return {Base|Boolean}\n   */\n  get child() {\n    if (this.$el.firstElementChild && this.$el.firstElementChild.__base__) {\n      return this.$el.firstElementChild.__base__;\n    }\n\n    return false;\n  }\n\n  /**\n   * Get the current active breakpoint from the `useResize` service.\n   *\n   * @return {String}\n   */\n  get currentBreakpoint() {\n    return useResize().props().breakpoint;\n  }\n\n  /**\n   * Get a list of breakpoints in which the child component should be $mounted.\n   *\n   * @return {Array}\n   */\n  get activeBreakpoints() {\n    if (this.$el.dataset.activeBreakpoints) {\n      return this.$el.dataset.activeBreakpoints.split(' ');\n    }\n\n    return [];\n  }\n\n  /**\n   * Test if the child component should be either $mounted or $destroyed based on the current active\n   * breakpoint and the given list of breakpoints.\n   *\n   * @return {void}\n   */\n  test() {\n    if (!this.child) {\n      return;\n    }\n\n    const isInBreakpoints = this.activeBreakpoints.includes(this.currentBreakpoint);\n\n    if (isInBreakpoints && !this.child.$isMounted) {\n      this.child.$mount();\n      return;\n    }\n\n    if (!isInBreakpoints && this.child.$isMounted) {\n      this.child.$destroy();\n    }\n  }\n}\n"],"file":"MediaQuery.js"}