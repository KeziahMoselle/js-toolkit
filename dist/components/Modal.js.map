{"version":3,"sources":["../../src/components/Modal.js"],"names":["trap","untrap","saveActiveElement","Modal","isOpen","close","$options","move","target","document","querySelector","body","refsBackup","$refs","refModalPlaceholder","createComment","refModalParentBackup","modal","parentElement","$el","insertBefore","refModalUnbindGetRefFilter","$on","refs","Object","entries","forEach","key","ref","appendChild","remove","event","isUp","isDown","ESC","setAttribute","documentElement","style","overflow","openClass","classNames","classes","add","openStyle","styleProps","styles","closedClass","closedStyle","autofocus","focus","$emit","name","opacity","pointerEvents","visibility","open","Base"],"mappings":"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","sourcesContent":["import Base from '../abstracts/Base';\nimport * as classes from '../utils/css/classes';\nimport * as styles from '../utils/css/styles';\nimport focusTrap from '../utils/focusTrap';\n\nconst { trap, untrap, saveActiveElement } = focusTrap();\n\n/**\n * Modal class.\n */\nexport default class Modal extends Base {\n  /**\n   * Modal options.\n   */\n  get config() {\n    return {\n      name: 'Modal',\n      move: false,\n      autofocus: '[autofocus]',\n      openClass: {},\n      openStyle: {},\n      closedClass: {},\n      closedStyle: {\n        modal: {\n          opacity: 0,\n          pointerEvents: 'none',\n          visibility: 'hidden',\n        },\n      },\n    };\n  }\n\n  /**\n   * Open the modal on click on the `open` ref.\n   *\n   * @return {Function} The component's `open` method.\n   */\n  get onOpenClick() {\n    return this.open;\n  }\n\n  /**\n   * Close the modal on click on the `close` ref.\n   *\n   * @return {Function} The component's `close` method.\n   */\n  get onCloseClick() {\n    return this.close;\n  }\n\n  /**\n   * Close the modal on click on the `overlay` ref.\n   *\n   * @return {Function} The component's `close` method.\n   */\n  get onOverlayClick() {\n    return this.close;\n  }\n\n  /**\n   * Initialize the component's behaviours.\n   *\n   * @return {Modal} The current instance.\n   */\n  mounted() {\n    this.isOpen = false;\n    this.close();\n\n    if (this.$options.move) {\n      const target = document.querySelector(this.$options.move) || document.body;\n      const refsBackup = this.$refs;\n\n      this.refModalPlaceholder = document.createComment('');\n      this.refModalParentBackup = this.$refs.modal.parentElement || this.$el;\n      this.refModalParentBackup.insertBefore(this.refModalPlaceholder, this.$refs.modal);\n\n      this.refModalUnbindGetRefFilter = this.$on('get:refs', refs => {\n        Object.entries(refsBackup).forEach(([key, ref]) => {\n          if (!refs[key]) {\n            refs[key] = ref;\n          }\n        });\n      });\n      target.appendChild(this.$refs.modal);\n    }\n\n    return this;\n  }\n\n  /**\n   * Unbind all events on destroy.\n   *\n   * @return {Modal} The Modal instance.\n   */\n  destroyed() {\n    this.close();\n\n    if (this.$options.move) {\n      this.refModalParentBackup.insertBefore(this.$refs.modal, this.refModalPlaceholder);\n      this.refModalUnbindGetRefFilter();\n      this.refModalPlaceholder.remove();\n      delete this.refModalPlaceholder;\n      delete this.refModalParentBackup;\n      delete this.refModalUnbindGetRefFilter;\n    }\n\n    return this;\n  }\n\n  /**\n   * Close the modal on `ESC` and trap the tabulation.\n   *\n   * @param  {KeyboardEvent} options.event  The original keyboard event\n   * @param  {Boolean}       options.isUp   Is it a keyup event?\n   * @param  {Boolean}       options.isDown Is it a keydown event?\n   * @param  {Boolean}       options.ESC    Is it the ESC key?\n   * @return {void}\n   */\n  keyed({ event, isUp, isDown, ESC }) {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (isDown) {\n      trap(this.$refs.modal, event);\n    }\n\n    if (ESC && isUp) {\n      this.close();\n    }\n  }\n\n  /**\n   * Open the modal.\n   *\n   * @return {Modal} The Modal instance.\n   */\n  open() {\n    this.$refs.modal.setAttribute('aria-hidden', 'false');\n    document.documentElement.style.overflow = 'hidden';\n\n    // Add \"open\" classes to refs\n    Object.entries(this.$options.openClass).forEach(([ref, classNames]) => {\n      classes.add(this.$refs[ref], classNames);\n    });\n\n    // Add \"open\" styles to refs\n    Object.entries(this.$options.openStyle).forEach(([ref, styleProps]) => {\n      styles.add(this.$refs[ref], styleProps);\n    });\n\n    // Remove \"closed\" classes from refs\n    Object.entries(this.$options.closedClass).forEach(([ref, classNames]) => {\n      classes.remove(this.$refs[ref], classNames);\n    });\n\n    // Remove \"closed\" styles from refs\n    Object.entries(this.$options.closedStyle).forEach(([ref, styleProps]) => {\n      styles.remove(this.$refs[ref], styleProps);\n    });\n\n    if (this.$options.autofocus && this.$refs.modal.querySelector(this.$options.autofocus)) {\n      saveActiveElement();\n      this.$refs.modal.querySelector(this.$options.autofocus).focus();\n    }\n\n    this.isOpen = true;\n    this.$emit('open');\n  }\n\n  /**\n   * Close the modal.\n   *\n   * @return {Modal} The Modal instance.\n   */\n  close() {\n    this.$refs.modal.setAttribute('aria-hidden', 'true');\n    document.documentElement.style.overflow = '';\n\n    // Add \"closed\" classes to refs\n    Object.entries(this.$options.closedClass).forEach(([ref, classNames]) => {\n      classes.add(this.$refs[ref], classNames);\n    });\n\n    // Add \"closed\" styles to refs\n    Object.entries(this.$options.closedStyle).forEach(([ref, styleProps]) => {\n      styles.add(this.$refs[ref], styleProps);\n    });\n\n    // Remove \"open\" classes from refs\n    Object.entries(this.$options.openClass).forEach(([ref, classNames]) => {\n      classes.remove(this.$refs[ref], classNames);\n    });\n\n    // Remove \"open\" styles from refs\n    Object.entries(this.$options.openStyle).forEach(([ref, styleProps]) => {\n      styles.remove(this.$refs[ref], styleProps);\n    });\n\n    this.isOpen = false;\n    untrap();\n    this.$emit('close');\n  }\n}\n"],"file":"Modal.js"}