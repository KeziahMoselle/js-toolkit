{"version":3,"sources":["../../src/components/Modal.js"],"names":["Base","transition","trap","untrap","saveActiveElement","Modal","isOpen","close","$options","move","target","document","querySelector","body","refsBackup","$refs","refModalPlaceholder","createComment","refModalParentBackup","modal","parentElement","$el","insertBefore","refModalUnbindGetRefFilter","$on","refs","Object","entries","forEach","key","ref","appendChild","remove","event","isUp","isDown","ESC","Promise","resolve","setAttribute","documentElement","style","overflow","$emit","all","styles","map","refName","open","active","closed","from","to","then","autofocus","autofocusElement","focus","name","options","String","type","default","opacity","pointerEvents","visibility"],"mappings":"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","sourcesContent":["import Base from '../abstracts/Base';\nimport transition from '../utils/css/transition';\nimport { trap, untrap, saveActiveElement } from '../utils/focusTrap';\n\n/**\n * @typedef {Object} ModalRefs\n * @property {HTMLElement} close\n * @property {HTMLElement} container\n * @property {HTMLElement} content\n * @property {HTMLElement} modal\n * @property {HTMLElement} open\n * @property {HTMLElement} overlay\n */\n\n/**\n * @typedef {Object} ModalOptions\n * @property {String} move      A selector where to move the modal to.\n * @property {String} autofocus A selector for the element to set the focus to when the modal opens.\n * @property {Object} styles    The styles for the different state of the modal.\n */\n\n/**\n * @typedef {Object} ModalInterface\n * @property {ModalRefs} $refs\n * @property {ModalOptions} $options\n * @property {Boolean} isOpen\n * @property {Comment} refModalPlaceholder\n * @property {HTMLElement} refModalParentBackup\n * @property {Function} refModalUnbindGetRefFilter\n */\n\n/**\n * Modal class.\n */\nexport default class Modal extends Base {\n  /**\n   * Modal options.\n   */\n  static config = {\n    name: 'Modal',\n    refs: ['close', 'container', 'content', 'modal', 'open', 'overlay'],\n    options: {\n      move: String,\n      autofocus: { type: String, default: '[autofocus]' },\n      styles: {\n        type: Object,\n        default: () => ({\n          modal: {\n            closed: {\n              opacity: 0,\n              pointerEvents: 'none',\n              visibility: 'hidden',\n            },\n          },\n        }),\n      },\n    },\n  };\n\n  /**\n   * Open the modal on click on the `open` ref.\n   *\n   * @return {Function} The component's `open` method.\n   */\n  get onOpenClick() {\n    return this.open;\n  }\n\n  /**\n   * Close the modal on click on the `close` ref.\n   *\n   * @return {Function} The component's `close` method.\n   */\n  get onCloseClick() {\n    return this.close;\n  }\n\n  /**\n   * Close the modal on click on the `overlay` ref.\n   *\n   * @return {Function} The component's `close` method.\n   */\n  get onOverlayClick() {\n    return this.close;\n  }\n\n  /**\n   * Initialize the component's behaviours.\n   *\n   * @this {Modal & ModalInterface}\n   */\n  mounted() {\n    this.isOpen = false;\n    this.close();\n\n    if (this.$options.move) {\n      const target = document.querySelector(this.$options.move) || document.body;\n      const refsBackup = this.$refs;\n\n      this.refModalPlaceholder = document.createComment('');\n      this.refModalParentBackup = this.$refs.modal.parentElement || this.$el;\n      this.refModalParentBackup.insertBefore(this.refModalPlaceholder, this.$refs.modal);\n\n      this.refModalUnbindGetRefFilter = this.$on(\n        'get:refs',\n        /**\n         * @param {ModalRefs} refs\n         */\n        (refs) => {\n          Object.entries(refsBackup).forEach(([key, ref]) => {\n            if (!refs[key]) {\n              refs[key] = ref;\n            }\n          });\n        }\n      );\n      target.appendChild(this.$refs.modal);\n    }\n\n    return this;\n  }\n\n  /**\n   * Unbind all events on destroy.\n   *\n   * @this {Modal & ModalInterface}\n   * @return {Modal} The Modal instance.\n   */\n  destroyed() {\n    this.close();\n\n    if (this.$options.move && this.refModalParentBackup) {\n      this.refModalParentBackup.insertBefore(this.$refs.modal, this.refModalPlaceholder);\n      this.refModalUnbindGetRefFilter();\n      this.refModalPlaceholder.remove();\n      delete this.refModalPlaceholder;\n      delete this.refModalParentBackup;\n      delete this.refModalUnbindGetRefFilter;\n    }\n\n    return this;\n  }\n\n  /**\n   * Close the modal on `ESC` and trap the tabulation.\n   *\n   * @this {Modal & ModalInterface}\n   * @param  {Object}        options\n   * @param  {KeyboardEvent} options.event  The original keyboard event\n   * @param  {Boolean}       options.isUp   Is it a keyup event?\n   * @param  {Boolean}       options.isDown Is it a keydown event?\n   * @param  {Boolean}       options.ESC    Is it the ESC key?\n   */\n  keyed({ event, isUp, isDown, ESC }) {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (isDown) {\n      trap(this.$refs.modal, event);\n    }\n\n    if (ESC && isUp) {\n      this.close();\n    }\n  }\n\n  /**\n   * Open the modal.\n   *\n   * @this {Modal & ModalInterface}\n   * @return {Promise<Modal>} The Modal instance.\n   */\n  async open() {\n    if (this.isOpen) {\n      return Promise.resolve(this);\n    }\n\n    this.$refs.modal.setAttribute('aria-hidden', 'false');\n    document.documentElement.style.overflow = 'hidden';\n\n    this.isOpen = true;\n    this.$emit('open');\n\n    /** @type {ModalRefs} */\n    const refs = this.$refs;\n\n    return Promise.all(\n      Object.entries(this.$options.styles).map(\n        ([refName, { open, active, closed } = { open: '', active: '', closed: '' }]) =>\n          transition(\n            refs[refName],\n            {\n              from: closed,\n              active,\n              to: open,\n            },\n            'keep'\n          )\n      )\n    ).then(() => {\n      if (this.$options.autofocus && this.$refs.modal.querySelector(this.$options.autofocus)) {\n        saveActiveElement();\n        /** @type {HTMLElement} */\n        const autofocusElement = this.$refs.modal.querySelector(this.$options.autofocus);\n        autofocusElement.focus();\n      }\n      return Promise.resolve(this);\n    });\n  }\n\n  /**\n   * Close the modal.\n   *\n   * @this {Modal & ModalInterface}\n   * @return {Promise<Modal>} The Modal instance.\n   */\n  async close() {\n    if (!this.isOpen) {\n      return Promise.resolve(this);\n    }\n\n    this.$refs.modal.setAttribute('aria-hidden', 'true');\n    document.documentElement.style.overflow = '';\n\n    this.isOpen = false;\n    untrap();\n    this.$emit('close');\n\n    /** @type {ModalRefs} */\n    const refs = this.$refs;\n\n    return Promise.all(\n      Object.entries(this.$options.styles).map(\n        ([refName, { open, active, closed } = { open: '', active: '', closed: '' }]) =>\n          transition(\n            refs[refName],\n            {\n              from: open,\n              active,\n              to: closed,\n            },\n            'keep'\n          )\n      )\n    ).then(() => Promise.resolve(this));\n  }\n}\n"],"file":"Modal.js"}