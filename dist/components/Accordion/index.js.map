{"version":3,"sources":["../../../src/components/Accordion/index.js"],"names":["Accordion","unbindMethods","$children","AccordionItem","map","item","index","unbindOpen","$on","$emit","$options","autoclose","filter","el","i","forEach","it","close","unbindClose","unbind","name","components","Base"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA;;;IAGqBA,S;;;;;;;;;;;;;AAgBnB;;;;8BAIU;AAAA;;AACR,WAAKC,aAAL,GAAqB,KAAKC,SAAL,CAAeC,aAAf,CAA6BC,GAA7B,CAAiC,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACrE,YAAMC,UAAU,GAAGF,IAAI,CAACG,GAAL,CAAS,MAAT,EAAiB,YAAM;AACxC,UAAA,KAAI,CAACC,KAAL,CAAW,MAAX,EAAmBJ,IAAnB,EAAyBC,KAAzB;;AACA,cAAI,KAAI,CAACI,QAAL,CAAcC,SAAlB,EAA6B;AAC3B,YAAA,KAAI,CAACT,SAAL,CAAeC,aAAf,CAA6BS,MAA7B,CAAoC,UAACC,EAAD,EAAKC,CAAL;AAAA,qBAAWR,KAAK,KAAKQ,CAArB;AAAA,aAApC,EAA4DC,OAA5D,CAAoE,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAACC,KAAH,EAAJ;AAAA,aAAtE;AACD;AACF,SALkB,CAAnB;AAMA,YAAMC,WAAW,GAAGb,IAAI,CAACG,GAAL,CAAS,OAAT,EAAkB,YAAM;AAC1C,UAAA,KAAI,CAACC,KAAL,CAAW,OAAX,EAAoBJ,IAApB,EAA0BC,KAA1B;AACD,SAFmB,CAApB;AAIA,eAAO,YAAM;AACXC,UAAAA,UAAU;AACVW,UAAAA,WAAW;AACZ,SAHD;AAID,OAfoB,CAArB;AAgBD;AAED;;;;;;;gCAIY;AACV,WAAKjB,aAAL,CAAmBc,OAAnB,CAA2B,UAAAI,MAAM;AAAA,eAAIA,MAAM,EAAV;AAAA,OAAjC;AACD;;;;AA5CD;;;;wBAIa;AACX,aAAO;AACLC,QAAAA,IAAI,EAAE,WADD;AAELT,QAAAA,SAAS,EAAE,IAFN;AAGLN,QAAAA,IAAI,EAAE,IAHD;AAILgB,QAAAA,UAAU,EAAE;AACVlB,UAAAA,aAAa,EAAbA;AADU;AAJP,OAAP;AAQD;;;EAdoCmB,c","sourcesContent":["import Base from '../../abstracts/Base';\nimport AccordionItem from './AccordionItem';\n\n/**\n * Accordion class.\n */\nexport default class Accordion extends Base {\n  /**\n   * Accordion config.\n   * @return {Object}\n   */\n  get config() {\n    return {\n      name: 'Accordion',\n      autoclose: true,\n      item: null,\n      components: {\n        AccordionItem,\n      },\n    };\n  }\n\n  /**\n   * Init autoclose behavior on mounted.\n   * @return {void}\n   */\n  mounted() {\n    this.unbindMethods = this.$children.AccordionItem.map((item, index) => {\n      const unbindOpen = item.$on('open', () => {\n        this.$emit('open', item, index);\n        if (this.$options.autoclose) {\n          this.$children.AccordionItem.filter((el, i) => index !== i).forEach(it => it.close());\n        }\n      });\n      const unbindClose = item.$on('close', () => {\n        this.$emit('close', item, index);\n      });\n\n      return () => {\n        unbindOpen();\n        unbindClose();\n      };\n    });\n  }\n\n  /**\n   * Destroy autoclose behavior on destroyed.\n   * @return {void}\n   */\n  destroyed() {\n    this.unbindMethods.forEach(unbind => unbind());\n  }\n}\n"],"file":"index.js"}