{"version":3,"sources":["../../../src/components/Accordion/AccordionItem.js"],"names":["AccordionItem","$parent","$options","item","$refs","btn","setAttribute","$id","contentId","content","isOpen","updateAttributes","styles","add","container","visibility","height","otherStyles","Object","entries","filter","refName","forEach","open","closed","to","close","$log","$emit","remove","Promise","all","from","active","offsetHeight","then","position","resolve","map","name","Base"],"mappings":"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","sourcesContent":["import Base from '../../abstracts/Base';\nimport * as styles from '../../utils/css/styles';\nimport transition from '../../utils/css/transition';\n\n/**\n * AccordionItem class.\n */\nexport default class AccordionItem extends Base {\n  /**\n   * AccordionItem config\n   * @return {Object}\n   */\n  get config() {\n    return {\n      name: 'AccordionItem',\n      isOpen: false,\n      styles: {\n        container: {\n          open: '',\n          active: '',\n          closed: '',\n        },\n      },\n    };\n  }\n\n  /**\n   * Add aria-attributes on mounted.\n   * @return {void}\n   */\n  mounted() {\n    if (this.$parent && this.$parent.$options.item) {\n      this.$options = this.$parent.$options.item;\n    }\n\n    this.$refs.btn.setAttribute('id', this.$id);\n    this.$refs.btn.setAttribute('aria-controls', this.contentId);\n    this.$refs.content.setAttribute('aria-labelledby', this.$id);\n    this.$refs.content.setAttribute('id', this.contentId);\n\n    this.isOpen = this.$options.isOpen;\n    this.updateAttributes(this.isOpen);\n\n    if (!this.isOpen) {\n      styles.add(this.$refs.container, { visibility: 'invisible', height: 0 });\n    }\n\n    // Update refs styles on mount\n    const { container, ...otherStyles } = this.$options.styles;\n    Object.entries(otherStyles)\n      .filter(([refName]) => this.$refs[refName])\n      .forEach(([refName, { open, closed } = {}]) => {\n        transition(this.$refs[refName], { to: this.isOpen ? open : closed }, 'keep');\n      });\n  }\n\n  /**\n   * Handler for the click event on the `btn` ref.\n   * @return {void}\n   */\n  onBtnClick() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Get the content ID.\n   * @return {String}\n   */\n  get contentId() {\n    return `content-${this.$id}`;\n  }\n\n  /**\n   * Update the refs' attributes according to the given type.\n   *\n   * @param  {Boolean} isOpen The state of the item.\n   * @return {void}\n   */\n  updateAttributes(isOpen) {\n    this.$refs.content.setAttribute('aria-hidden', isOpen ? 'false' : 'true');\n    this.$refs.btn.setAttribute('aria-expanded', isOpen ? 'true' : 'false');\n  }\n\n  /**\n   * Open an item.\n   * @return {void}\n   */\n  async open() {\n    if (this.isOpen) {\n      return;\n    }\n\n    this.$log('open');\n    this.$emit('open');\n\n    this.isOpen = true;\n    this.updateAttributes(this.isOpen);\n\n    styles.remove(this.$refs.container, { visibility: 'invisible' });\n    const { container, ...otherStyles } = this.$options.styles;\n\n    await Promise.all([\n      transition(this.$refs.container, {\n        from: { height: 0 },\n        active: container.active,\n        to: { height: `${this.$refs.content.offsetHeight}px` },\n      }).then(() => {\n        // Remove style only if the item has not been closed before the end\n        if (this.isOpen) {\n          styles.remove(this.$refs.content, { position: 'absolute' });\n        }\n\n        return Promise.resolve();\n      }),\n      ...Object.entries(otherStyles)\n        .filter(([refName]) => this.$refs[refName])\n        .map(([refName, { open, active, closed } = {}]) =>\n          transition(\n            this.$refs[refName],\n            {\n              from: closed,\n              active,\n              to: open,\n            },\n            'keep'\n          )\n        ),\n    ]);\n  }\n\n  /**\n   * Close an item.\n   * @return {void}\n   */\n  async close() {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.$log('close');\n    this.$emit('close');\n\n    this.isOpen = false;\n\n    const height = this.$refs.container.offsetHeight;\n    styles.add(this.$refs.content, { position: 'absolute' });\n    const { container, ...otherStyles } = this.$options.styles;\n\n    await Promise.all([\n      transition(this.$refs.container, {\n        from: { height: `${height}px` },\n        active: container.active,\n        to: { height: 0 },\n      }).then(() => {\n        // Add end styles only if the item has not been re-opened before the end\n        if (!this.isOpen) {\n          styles.add(this.$refs.container, { height: 0, visibility: 'invisible' });\n          this.updateAttributes(this.isOpen);\n        }\n        return Promise.resolve();\n      }),\n      ...Object.entries(otherStyles)\n        .filter(([refName]) => this.$refs[refName])\n        .map(([refName, { open, active, closed } = {}]) =>\n          transition(\n            this.$refs[refName],\n            {\n              from: open,\n              active,\n              to: closed,\n            },\n            'keep'\n          )\n        ),\n    ]);\n  }\n}\n"],"file":"AccordionItem.js"}