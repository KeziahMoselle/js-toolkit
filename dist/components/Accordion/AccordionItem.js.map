{"version":3,"sources":["../../../src/components/Accordion/AccordionItem.js"],"names":["AccordionItem","$refs","btn","setAttribute","$id","content","isOpen","$options","styles","add","container","visibility","height","close","open","$log","$emit","remove","otherStyles","Promise","all","from","active","to","offsetHeight","then","position","resolve","Object","entries","filter","refName","map","closed","name","Base"],"mappings":"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","sourcesContent":["import Base from '../../abstracts/Base';\nimport * as styles from '../../utils/css/styles';\nimport transition from '../../utils/css/transition';\n\n/**\n * AccordionItem class.\n */\nexport default class AccordionItem extends Base {\n  /**\n   * AccordionItem config\n   * @return {Object}\n   */\n  get config() {\n    return {\n      name: 'AccordionItem',\n      isOpen: false,\n      styles: {\n        container: {\n          open: '',\n          active: '',\n          closed: '',\n        },\n      },\n    };\n  }\n\n  /**\n   * Add aria-attributes on mounted.\n   * @return {void}\n   */\n  mounted() {\n    this.$refs.btn.setAttribute('id', this.$id);\n    this.$refs.content.setAttribute('aria-labelledby', this.$id);\n    this.isOpen = this.$options.isOpen;\n    if (!this.isOpen) {\n      styles.add(this.$refs.container, { visibility: 'invisible', height: 0 });\n    }\n  }\n\n  /**\n   * Handler for the click event on the `btn` ref.\n   * @return {void}\n   */\n  onBtnClick() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Open an item.\n   * @return {void}\n   */\n  async open() {\n    if (this.isOpen) {\n      return;\n    }\n\n    this.$log('open');\n    this.$emit('open');\n\n    this.isOpen = true;\n    this.$refs.container.setAttribute('aria-hidden', 'false');\n\n    styles.remove(this.$refs.container, { visibility: 'invisible' });\n    const { container, ...otherStyles } = this.$options.styles;\n\n    await Promise.all([\n      transition(this.$refs.container, {\n        from: { height: 0 },\n        active: container.active,\n        to: { height: `${this.$refs.content.offsetHeight}px` },\n      }).then(() => {\n        // Remove style only if the item has not been closed before the end\n        if (this.isOpen) {\n          styles.remove(this.$refs.content, { position: 'absolute' });\n        }\n\n        return Promise.resolve();\n      }),\n      ...Object.entries(otherStyles)\n        .filter(([refName]) => this.$refs[refName])\n        .map(([refName, { open, active, closed } = {}]) =>\n          transition(\n            this.$refs[refName],\n            {\n              from: closed,\n              active,\n              to: open,\n            },\n            'keep'\n          )\n        ),\n    ]);\n  }\n\n  /**\n   * Close an item.\n   * @return {void}\n   */\n  async close() {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.$log('close');\n    this.$emit('close');\n\n    this.isOpen = false;\n\n    const height = this.$refs.container.offsetHeight;\n    styles.add(this.$refs.content, { position: 'absolute' });\n    const { container, ...otherStyles } = this.$options.styles;\n\n    await Promise.all([\n      transition(this.$refs.container, {\n        from: { height: `${height}px` },\n        active: container.active,\n        to: { height: 0 },\n      }).then(() => {\n        // Add end styles only if the item has not been re-opened before the end\n        if (!this.isOpen) {\n          styles.add(this.$refs.container, { height: 0, visibility: 'invisible' });\n          this.$refs.container.setAttribute('aria-hidden', 'true');\n        }\n        return Promise.resolve();\n      }),\n      ...Object.entries(otherStyles)\n        .filter(([refName]) => this.$refs[refName])\n        .map(([refName, { open, active, closed } = {}]) =>\n          transition(\n            this.$refs[refName],\n            {\n              from: open,\n              active,\n              to: closed,\n            },\n            'keep'\n          )\n        ),\n    ]);\n  }\n}\n"],"file":"AccordionItem.js"}