{"version":3,"sources":["../../../src/components/Accordion/AccordionItem.js"],"names":["deepmerge","Base","Accordion","styles","transition","AccordionItem","$parent","$options","item","Object","entries","forEach","key","value","type","config","options","Array","$refs","btn","setAttribute","$id","contentId","content","isOpen","updateAttributes","add","container","visibility","height","otherStyles","refs","filter","refName","open","closed","to","close","$log","$emit","remove","Promise","all","from","active","offsetHeight","then","position","resolve","map","name","Boolean","default"],"mappings":"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","sourcesContent":["import deepmerge from 'deepmerge'\nimport Base from '../../abstracts/Base';\n// eslint-disable-next-line import/no-cycle\nimport Accordion from './index';\nimport * as styles from '../../utils/css/styles';\nimport transition from '../../utils/css/transition';\n\n/**\n * @typedef {import('../../abstracts/Base').BaseOptions} BaseOptions\n * @typedef {import('../../utils/css/styles').CssStyleObject} CssStyleObject\n * @typedef {import('./index').AccordionInterface} AccordionInterface\n */\n\n/**\n * @typedef {Object} AccordionItemRefs\n * @property {HTMLElement} btn\n * @property {HTMLElement} content\n * @property {HTMLElement} container\n */\n\n/**\n * @typedef {Object} StylesOption\n * @property {String|CssStyleObject} open\n * @property {String|CssStyleObject} active\n * @property {String|CssStyleObject} closed\n */\n\n/**\n * @typedef {Object} AccordionItemOptions\n * @property {Boolean} isOpen\n * @property {{ [refName: string]: StylesOption }} styles\n */\n\n/**\n * @typedef {Object} AccordionItemInterface\n * @property {AccordionItemOptions} $options\n * @property {AccordionItemRefs} $refs\n * @property {Accordion & AccordionInterface} $parent\n */\n\n/**\n * AccordionItem class.\n */\nexport default class AccordionItem extends Base {\n  /**\n   * AccordionItem config\n   * @return {Object}\n   */\n  static config = {\n    name: 'AccordionItem',\n    refs: ['btn', 'content', 'container'],\n    options: {\n      isOpen: Boolean,\n      styles: {\n        type: Object,\n        default: () => ({\n          container: {\n            open: '',\n            active: '',\n            closed: '',\n          },\n        }),\n      },\n    },\n  };\n\n  /**\n   * Add aria-attributes on mounted.\n   * @this {AccordionItem & AccordionItemInterface}\n   */\n  mounted() {\n    if (this.$parent && this.$parent instanceof Accordion && this.$parent.$options.item) {\n      Object.entries(this.$parent.$options.item).forEach(([key, value]) => {\n        if (key in this.$options) {\n          const type = AccordionItem.config.options[key].type || AccordionItem.config.options[key];\n          if (type === Array || type === Object) {\n            this.$options[key] = deepmerge(this.$options[key], value);\n          } else {\n            this.$options[key] = value;\n          }\n        }\n      });\n    }\n\n    this.$refs.btn.setAttribute('id', this.$id);\n    this.$refs.btn.setAttribute('aria-controls', this.contentId);\n    this.$refs.content.setAttribute('aria-labelledby', this.$id);\n    this.$refs.content.setAttribute('id', this.contentId);\n\n    const { isOpen } = this.$options;\n    this.updateAttributes(isOpen);\n\n    if (!isOpen) {\n      styles.add(this.$refs.container, { visibility: 'invisible', height: '0' });\n    }\n\n    // Update refs styles on mount\n    const { container, ...otherStyles } = this.$options.styles;\n    /** @type {AccordionItemRefs} */\n    const refs = this.$refs;\n    Object.entries(otherStyles)\n      .filter(([refName]) => refs[refName])\n      .forEach(([refName, { open, closed } = { open: '', closed: '' }]) => {\n        transition(refs[refName], { to: isOpen ? open : closed }, 'keep');\n      });\n  }\n\n  /**\n   * Handler for the click event on the `btn` ref.\n   * @this {AccordionItem & AccordionItemInterface}\n   */\n  onBtnClick() {\n    if (this.$options.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Get the content ID.\n   * @return {String}\n   */\n  get contentId() {\n    return `content-${this.$id}`;\n  }\n\n  /**\n   * Update the refs' attributes according to the given type.\n   *\n   * @this {AccordionItem & AccordionItemInterface}\n   * @param  {Boolean} isOpen The state of the item.\n   */\n  updateAttributes(isOpen) {\n    this.$refs.content.setAttribute('aria-hidden', isOpen ? 'false' : 'true');\n    this.$refs.btn.setAttribute('aria-expanded', isOpen ? 'true' : 'false');\n  }\n\n  /**\n   * Open an item.\n   * @this {AccordionItem & AccordionItemInterface}\n   */\n  async open() {\n    if (this.$options.isOpen) {\n      return;\n    }\n\n    this.$log('open');\n    this.$emit('open');\n\n    this.$options.isOpen = true;\n    this.updateAttributes(this.$options.isOpen);\n\n    styles.remove(this.$refs.container, { visibility: 'invisible' });\n    const { container, ...otherStyles } = this.$options.styles;\n\n    /** @type {AccordionItemRefs} */\n    const refs = this.$refs;\n\n    await Promise.all([\n      transition(refs.container, {\n        from: { height: 0 },\n        active: container.active,\n        to: { height: `${refs.content.offsetHeight}px` },\n      }).then(() => {\n        // Remove style only if the item has not been closed before the end\n        if (this.$options.isOpen) {\n          styles.remove(refs.content, { position: 'absolute' });\n        }\n\n        return Promise.resolve();\n      }),\n      ...Object.entries(otherStyles)\n        .filter(([refName]) => refs[refName])\n        .map(([refName, { open, active, closed } = { open: '', active: '', closed: '' }]) =>\n          transition(\n            refs[refName],\n            {\n              from: closed,\n              active,\n              to: open,\n            },\n            'keep'\n          )\n        ),\n    ]);\n  }\n\n  /**\n   * Close an item.\n   * @this {AccordionItem & AccordionItemInterface}\n   */\n  async close() {\n    if (!this.$options.isOpen) {\n      return;\n    }\n\n    this.$log('close');\n    this.$emit('close');\n\n    this.$options.isOpen = false;\n\n    const height = this.$refs.container.offsetHeight;\n    styles.add(this.$refs.content, { position: 'absolute' });\n    const { container, ...otherStyles } = this.$options.styles;\n\n    /** @type {AccordionItemRefs} */\n    const refs = this.$refs;\n\n    await Promise.all([\n      transition(refs.container, {\n        from: { height: `${height}px` },\n        active: container.active,\n        to: { height: '0' },\n      }).then(() => {\n        // Add end styles only if the item has not been re-opened before the end\n        if (!this.$options.isOpen) {\n          styles.add(refs.container, { height: '0', visibility: 'invisible' });\n          this.updateAttributes(this.$options.isOpen);\n        }\n        return Promise.resolve();\n      }),\n      ...Object.entries(otherStyles)\n        .filter(([refName]) => refs[refName])\n        .map(([refName, { open, active, closed } = { open: '', active: '', closed: '' }]) =>\n          transition(\n            refs[refName],\n            {\n              from: open,\n              active,\n              to: closed,\n            },\n            'keep'\n          )\n        ),\n    ]);\n  }\n}\n"],"file":"AccordionItem.js"}