{"version":3,"sources":["../../../src/components/Accordion/AccordionItem.js"],"names":["AccordionItem","$refs","btn","setAttribute","$id","content","styles","add","container","visibility","height","isOpen","close","open","$log","$emit","remove","$options","otherStyles","Promise","all","from","active","to","offsetHeight","then","position","resolve","Object","entries","filter","refName","map","closed","name","Base"],"mappings":"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","sourcesContent":["import Base from '../../abstracts/Base';\nimport * as styles from '../../utils/css/styles';\nimport transition, { setClassesOrStyles } from '../../utils/css/transition';\n\n/**\n * AccordionItem class.\n */\nexport default class AccordionItem extends Base {\n  /**\n   * AccordionItem config\n   * @return {Object}\n   */\n  get config() {\n    return {\n      name: 'AccordionItem',\n      styles: {\n        container: {\n          open: '',\n          active: '',\n          closed: '',\n        },\n      },\n    };\n  }\n\n  /**\n   * Add aria-attributes on mounted.\n   * @return {void}\n   */\n  mounted() {\n    this.$refs.btn.setAttribute('id', this.$id);\n    this.$refs.content.setAttribute('aria-labelledby', this.$id);\n    styles.add(this.$refs.container, { visibility: 'invisible', height: 0 });\n  }\n\n  /**\n   * Handler for the click event on the `btn` ref.\n   * @return {void}\n   */\n  onBtnClick() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Open an item.\n   * @return {void}\n   */\n  async open() {\n    if (this.isOpen) {\n      return;\n    }\n\n    this.$log('open');\n    this.$emit('open');\n\n    this.isOpen = true;\n    this.$refs.container.setAttribute('aria-hidden', 'false');\n\n    styles.remove(this.$refs.container, { visibility: 'invisible' });\n    const { container, ...otherStyles } = this.$options.styles;\n\n    await Promise.all([\n      transition(this.$refs.container, {\n        from: { height: 0 },\n        active: container.active,\n        to: { height: `${this.$refs.content.offsetHeight}px` },\n      }).then(() => {\n        // Remove style only if the item has not been closed before the end\n        if (this.isOpen) {\n          styles.remove(this.$refs.content, { position: 'absolute' });\n        }\n\n        return Promise.resolve();\n      }),\n      ...Object.entries(otherStyles)\n        .filter(([refName]) => this.$refs[refName])\n        .map(([refName, { open, active, closed } = {}]) =>\n          transition(this.$refs[refName], {\n            from: closed,\n            active,\n            to: open,\n          }).then(() => {\n            // Set style only if the item has not been closed before the end\n            // Do nothing if the item has been closed before the end\n            if (this.isOpen) {\n              setClassesOrStyles(this.$refs[refName], open);\n            }\n\n            return Promise.resolve();\n          })\n        ),\n    ]);\n  }\n\n  /**\n   * Close an item.\n   * @return {void}\n   */\n  async close() {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.$log('close');\n    this.$emit('close');\n\n    this.isOpen = false;\n\n    const height = this.$refs.container.offsetHeight;\n    styles.add(this.$refs.content, { position: 'absolute' });\n    const { container, ...otherStyles } = this.$options.styles;\n\n    await Promise.all([\n      transition(this.$refs.container, {\n        from: { height: `${height}px` },\n        active: container.active,\n        to: { height: 0 },\n      }).then(() => {\n        // Add end styles only if the item has not been re-opened before the end\n        if (!this.isOpen) {\n          styles.add(this.$refs.container, { height: 0, visibility: 'invisible' });\n          this.$refs.container.setAttribute('aria-hidden', 'true');\n        }\n        return Promise.resolve();\n      }),\n      ...Object.entries(otherStyles)\n        .filter(([refName]) => this.$refs[refName])\n        .map(([refName, { open, active, closed } = {}]) =>\n          transition(this.$refs[refName], {\n            from: open,\n            active,\n            to: closed,\n          }).then(() => {\n            // Add end styles only if the item has not been re-opened before the end\n            if (!this.isOpen) {\n              setClassesOrStyles(this.$refs[refName], closed);\n            }\n\n            return Promise.resolve();\n          })\n        ),\n    ]);\n  }\n}\n"],"file":"AccordionItem.js"}