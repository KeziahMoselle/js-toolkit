{"version":3,"sources":["../../src/components/Tooltip.js"],"names":["Base","styles","transition","findBestPosition","element","offset","contentSizes","getBoundingClientRect","isOverflowingTop","top","isOverflowingRight","right","window","innerWidth","isOverflowingLeft","left","x","y","Math","abs","Tooltip","$refs","container","content","trigger","setAttribute","$id","close","$options","isOpen","open","isUp","ESC","position","allowed","includes","list","map","pos","join","Error","Promise","all","Object","entries","refName","value","resolve","from","to","then","$emit","add","marginLeft","setPosition","active","closed","name","opacity","pointerEvents","bottom","transform"],"mappings":"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","sourcesContent":["import Base from '../abstracts/Base';\nimport * as styles from '../utils/css/styles';\nimport transition from '../utils/css/transition';\n\n/**\n * Find the best position for an element to be displayed.\n *\n * @param  {HTMLElement} element Element to search best position.\n * @param  {Number}      offset  Offset to keep from window\n *\n * @return {Object} X, Y positions\n */\nfunction findBestPosition(element, offset) {\n  const contentSizes = element.getBoundingClientRect();\n  const isOverflowingTop = contentSizes.top < offset;\n  const isOverflowingRight = contentSizes.right > window.innerWidth - offset;\n  const isOverflowingLeft = contentSizes.left < offset;\n\n  let x = null;\n  const y = isOverflowingTop ? 'bottom' : 'top';\n\n  if (isOverflowingLeft) {\n    x = Math.abs(contentSizes.left) + offset;\n  }\n\n  if (isOverflowingRight) {\n    x = window.innerWidth - offset - Math.abs(contentSizes.right);\n  }\n\n  return {\n    x,\n    y,\n  };\n}\n\n/**\n * Tooltip class.\n */\nexport default class Tooltip extends Base {\n  /**\n   * Tooltip options.\n   */\n  get config() {\n    return {\n      name: 'Tooltip',\n      offset: 0,\n      isOpen: false,\n      styles: {\n        container: {\n          closed: {\n            opacity: 0,\n            pointerEvents: 'none',\n          },\n          top: {\n            bottom: '100%',\n            left: '50%',\n          },\n          bottom: {\n            top: '100%',\n            bottom: 'auto',\n            left: '50%',\n          }\n        },\n        content: {\n          top: {\n            top: 'auto',\n            bottom: 0,\n            left: '50%',\n            transform: 'translateX(-50%)',\n          },\n          bottom: {\n            top: 0,\n            bottom: 'auto',\n            left: '50%',\n            transform: 'translateX(-50%)',\n          }\n        },\n      },\n    };\n  }\n\n  /**\n   * Switch tooltip on trigger focus.\n   *\n   * @return {Function}\n   */\n  get onTriggerFocus() {\n    return this.open;\n  }\n\n  /**\n   * Switch tooltip on trigger blur.\n   *\n   * @return {Function}\n   */\n  get onTriggerBlur() {\n    return this.close;\n  }\n\n  /**\n   * Switch tooltip on mouseenter.\n   *\n   * @return {Function}\n   */\n  get onMouseenter() {\n    return this.open;\n  }\n\n  /**\n   * Switch tooltip on mouseleave.\n   *\n   * @return {Function}\n   */\n  get onMouseleave() {\n    return this.close;\n  }\n\n  /**\n   * Initialize the component's behaviours.\n   *\n   * @return {Tooltip} The current instance.\n   */\n  async mounted() {\n    const { container, content, trigger } = this.$refs;\n\n    content.setAttribute('aria-labelledby', this.$id);\n    trigger.setAttribute('id', this.$id);\n\n    await this.close();\n\n    if (this.$options.isOpen) {\n      await this.open();\n    }\n\n    return this;\n  }\n\n  /**\n   * Unbind all events on destroy.\n   *\n   * @return {Tooltip} The Tooltip instance.\n   */\n  async destroyed() {\n    await this.close();\n\n    return this;\n  }\n\n  /**\n   * Close the tooltip on `ESC`.\n   *\n   * @param  {Boolean}       options.isUp   Is it a keyup event?\n   * @param  {Boolean}       options.ESC    Is it the ESC key?\n   * @return {void}\n   */\n  async keyed({ isUp, ESC }) {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (ESC && isUp) {\n      await this.close();\n    }\n  }\n\n  /**\n   * Set the position of the tooltip\n   *\n   * @return {void}\n   */\n  async setPosition(position) {\n    const allowed = ['top', 'bottom'];\n\n    if (!allowed.includes(position)) {\n      const list = allowed.map(pos => `- ${pos}`).join('\\n');\n      throw new Error(\n        `\"${position}\" is not an authorized position. Choose one in the list below:\\n\\n${list}\\n`\n      );\n    }\n\n    return Promise.all(\n      Object.entries(this.$options.styles).map(([refName, value = {}]) => {\n        if (!value[position]) {\n          return Promise.resolve(this);\n        }\n\n        return transition(\n          this.$refs[refName],\n          {\n            from: value[this.position],\n            to: value[position],\n          },\n          'keep'\n        );\n      })\n    ).then(() => {\n      this.position = position;\n      return Promise.resolve(this);\n    });\n  }\n\n  /**\n   * Open the tooltip.\n   *\n   * @return {Tooltip} The Tooltip instance.\n   */\n  async open() {\n    if (this.isOpen) {\n      return Promise.resolve(this);\n    }\n\n    this.$refs.container.setAttribute('aria-hidden', 'false');\n    this.isOpen = true;\n    this.$emit('open');\n\n    const { x, y: position } = findBestPosition(this.$refs.content, this.$options.offset);\n\n    if (x !== null) {\n      styles.add(\n        this.$refs.content,\n        {\n          marginLeft: `${x}px`,\n        }\n      );\n    }\n\n    await this.setPosition(position);\n\n    return Promise.all(\n      Object.entries(this.$options.styles).map(([refName, { open, active, closed } = {}]) =>\n        transition(\n          this.$refs[refName],\n          {\n            from: closed,\n            active,\n            to: open,\n          },\n          'keep'\n        )\n      )\n    ).then(() => Promise.resolve(this));\n  }\n\n  /**\n   * Close the tooltip.\n   *\n   * @return {Tooltip} The Tooltip instance.\n   */\n  async close() {\n    if (this.isOpen === false || (this.isOpen === true && this.$options.isOpen) ) {\n      return Promise.resolve(this);\n    }\n\n    this.isOpen = false;\n\n    return Promise.all(\n      Object.entries(this.$options.styles).map(([refName, { open, active, closed } = {}]) =>\n        transition(\n          this.$refs[refName],\n          {\n            from: open,\n            active,\n            to: closed,\n          },\n          'keep'\n        )\n      )\n    ).then(async () => {\n      await this.setPosition('top');\n      this.$emit('close');\n      this.$refs.container.setAttribute('aria-hidden', 'true');\n\n      return Promise.resolve(this)\n    });\n  }\n}\n"],"file":"Tooltip.js"}