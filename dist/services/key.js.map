{"version":3,"sources":["../../src/services/key.js"],"names":["Key","handler","event","trigger","props","document","addEventListener","passive","removeEventListener","keys","Object","entries","keyCodes","reduce","acc","name","code","keyCode","type","previousEvent","triggered","direction","isUp","isDown","Service","key","add","bind","remove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;AAEA;;;;;;;;;;;IAWMA,G;;;;;;;;;;;;;;;wFAEI,E;4FAMI,C;gGAGI,E;;;;;;;AAEhB;;;;;2BAKO;AAAA;;AACL,WAAKC,OAAL,GAAe,UAAAC,KAAK,EAAI;AACtB,QAAA,MAAI,CAACA,KAAL,GAAaA,KAAb;;AACA,QAAA,MAAI,CAACC,OAAL,CAAa,MAAI,CAACC,KAAlB;AACD,OAHD;;AAIAC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKL,OAA1C,EAAmD;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAAnD;AACAF,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKL,OAAxC,EAAiD;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAAjD;AACD;AAED;;;;;;;;2BAKO;AACLF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,SAA7B,EAAwC,KAAKP,OAA7C;AACAI,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsC,KAAKP,OAA3C;AACD;AAED;;;;;;;;wBAKY;AAAA;;AACV,UAAMQ,IAAI,GAAGC,MAAM,CAACC,OAAP,CAAeC,iBAAf,EAAyBC,MAAzB,CAAgC,UAACC,GAAD,QAAuB;AAAA;AAAA,YAAhBC,IAAgB;AAAA,YAAVC,IAAU;;AAClEF,QAAAA,GAAG,CAACC,IAAD,CAAH,GAAYC,IAAI,KAAK,MAAI,CAACd,KAAL,CAAWe,OAAhC;AACA,eAAOH,GAAP;AACD,OAHY,EAGV,EAHU,CAAb;;AAKA,UACG,KAAKZ,KAAL,CAAWgB,IAAX,KAAoB,SAApB,IAAiC,KAAKC,aAAL,CAAmBD,IAAnB,KAA4B,SAA9D,IACA,CAAC,KAAKC,aAAL,CAAmBD,IAFtB,EAGE;AACA,YAAI,CAAC,KAAKC,aAAL,CAAmBD,IAAxB,EAA8B;AAC5B,eAAKE,SAAL,GAAiB,CAAjB;AACD;;AACD,aAAKA,SAAL,IAAkB,CAAlB;AACD,OARD,MAQO;AACL,aAAKA,SAAL,GAAiB,CAAjB;AACD;;AAED,WAAKD,aAAL,GAAqB,KAAKjB,KAA1B;AAEA;AACEA,QAAAA,KAAK,EAAE,KAAKA,KADd;AAEEkB,QAAAA,SAAS,EAAE,KAAKA,SAFlB;AAGEC,QAAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWgB,IAAX,KAAoB,SAApB,GAAgC,MAAhC,GAAwC,IAHrD;AAIEI,QAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWgB,IAAX,KAAoB,OAJ5B;AAKEK,QAAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWgB,IAAX,KAAoB;AAL9B,SAMKT,IANL;AAQD;;;EAtEee,iB;;AAyElB,IAAIC,GAAG,GAAG,IAAV;;eAEe,oBAAM;AACnB,MAAI,CAACA,GAAL,EAAU;AACRA,IAAAA,GAAG,GAAG,IAAIzB,GAAJ,EAAN;AACD;;AAED,MAAM0B,GAAG,GAAGD,GAAG,CAACC,GAAJ,CAAQC,IAAR,CAAaF,GAAb,CAAZ;AACA,MAAMG,MAAM,GAAGH,GAAG,CAACG,MAAJ,CAAWD,IAAX,CAAgBF,GAAhB,CAAf;;AACA,MAAMrB,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMqB,GAAG,CAACrB,KAAV;AAAA,GAAd;;AAEA,SAAO;AACLsB,IAAAA,GAAG,EAAHA,GADK;AAELE,IAAAA,MAAM,EAANA,MAFK;AAGLxB,IAAAA,KAAK,EAALA;AAHK,GAAP;AAKD,C","sourcesContent":["import Service from '../abstracts/Service';\nimport keyCodes from '../utils/keyCodes';\n\n/**\n * Scroll service\n *\n * ```\n * import { useKey } from '@studiometa/js-toolkit/services';\n * const { add, remove, props } = useKey();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Key extends Service {\n  /** @type {Object} The event object. */\n  event = {};\n\n  /**\n   * Used to accumulate the number of times the `keydown` event has been triggered.\n   * @type {Number}\n   */\n  triggered = 0;\n\n  /** @type {Object} The previous event object. */\n  previousEvent = {};\n\n  /**\n   * Bind the handler to the scroll event.\n   *\n   * @return {void}\n   */\n  init() {\n    this.handler = event => {\n      this.event = event;\n      this.trigger(this.props);\n    };\n    document.addEventListener('keydown', this.handler, { passive: false });\n    document.addEventListener('keyup', this.handler, { passive: false });\n  }\n\n  /**\n   * Unbind the handler from the scroll event.\n   *\n   * @return {void}\n   */\n  kill() {\n    document.removeEventListener('keydown', this.handler);\n    document.removeEventListener('keyup', this.handler);\n  }\n\n  /**\n   * Get scroll props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    const keys = Object.entries(keyCodes).reduce((acc, [name, code]) => {\n      acc[name] = code === this.event.keyCode;\n      return acc;\n    }, {});\n\n    if (\n      (this.event.type === 'keydown' && this.previousEvent.type === 'keydown') ||\n      !this.previousEvent.type\n    ) {\n      if (!this.previousEvent.type) {\n        this.triggered = 0;\n      }\n      this.triggered += 1;\n    } else {\n      this.triggered = 1;\n    }\n\n    this.previousEvent = this.event;\n\n    return {\n      event: this.event,\n      triggered: this.triggered,\n      direction: this.event.type === 'keydown' ? 'down': 'up',\n      isUp: this.event.type === 'keyup',\n      isDown: this.event.type === 'keydown',\n      ...keys,\n    };\n  }\n}\n\nlet key = null;\n\nexport default () => {\n  if (!key) {\n    key = new Key();\n  }\n\n  const add = key.add.bind(key);\n  const remove = key.remove.bind(key);\n  const props = () => key.props;\n\n  return {\n    add,\n    remove,\n    props,\n  };\n};\n"],"file":"key.js"}