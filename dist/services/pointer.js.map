{"version":3,"sources":["../../src/services/pointer.js"],"names":["Pointer","window","innerHeight","innerWidth","add","remove","hasRaf","debounced","event","updateValues","trigger","props","handler","bind","downHandler","upHandler","document","documentElement","addEventListener","once","passive","removeEventListener","isDown","yLast","y","xLast","x","touches","clientY","clientX","changed","last","delta","progress","max","Service","pointer"],"mappings":"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","sourcesContent":["import Service from '../abstracts/Service';\nimport throttle from '../utils/throttle';\nimport debounce from '../utils/debounce';\nimport useRaf from './raf';\n\n/**\n * Pointer service\n *\n * ```\n * import { usePointer } from '@studiometa/js/services';\n * const { add, remove, props } = usePointer();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Pointer extends Service {\n  /** @type {Boolean} State of the pointer. */\n  isDown = false;\n\n  /** @type {Number} The y pointer position. */\n  y = window.innerHeight / 2;\n\n  /** @type {Number} The y previous pointer position. */\n  yLast = window.innerHeight / 2;\n\n  /** @type {Number} The x pointer position. */\n  x = window.innerWidth / 2;\n\n  /** @type {Number} The x previous pointer position. */\n  xLast = window.innerWidth / 2;\n\n  /**\n   * Bind the handler to the mousemove and touchmove events.\n   * Bind the up and down handler to the mousedown, mouseup, touchstart and touchend events.\n   *\n   * @return {void}\n   */\n  init() {\n    const { add, remove } = useRaf();\n    this.hasRaf = false;\n\n    const debounced = debounce(event => {\n      this.updateValues(event);\n      remove('usePointer');\n      this.trigger(this.props);\n      this.hasRaf = false;\n    }, 50);\n\n    this.handler = throttle(event => {\n      this.updateValues(event);\n      if (!this.hasRaf) {\n        add('usePointer', () => {\n          this.trigger(this.props);\n        });\n        this.hasRaf = true;\n      }\n      // Reset changed flags at the end of the mousemove or touchmove event\n      debounced(event);\n    }, 32).bind(this);\n\n    this.downHandler = this.downHandler.bind(this);\n    this.upHandler = this.upHandler.bind(this);\n\n    document.documentElement.addEventListener('mouseenter', this.handler, { once: true });\n    document.addEventListener('mousemove', this.handler, { passive: true });\n    document.addEventListener('touchmove', this.handler, { passive: true });\n    document.addEventListener('mousedown', this.downHandler, { passive: true });\n    document.addEventListener('touchstart', this.downHandler, { passive: true });\n    document.addEventListener('mouseup', this.upHandler, { passive: true });\n    document.addEventListener('touchend', this.upHandler, { passive: true });\n  }\n\n  /**\n   * Unbind all handlers from their bounded event.\n   *\n   * @return {void}\n   */\n  kill() {\n    document.removeEventListener('mousemove', this.handler);\n    document.removeEventListener('touchmove', this.handler);\n    document.removeEventListener('mousedown', this.downHandler);\n    document.removeEventListener('touchstart', this.downHandler);\n    document.removeEventListener('mouseup', this.upHandler);\n    document.removeEventListener('touchend', this.upHandler);\n  }\n\n  /**\n   * Handler for the pointer's down action.\n   *\n   * @return {void}\n   */\n  downHandler() {\n    this.isDown = true;\n    this.trigger(this.props);\n  }\n\n  /**\n   * Handler for the pointer's up action.\n   *\n   * @return {void}\n   */\n  upHandler() {\n    this.isDown = false;\n    this.trigger(this.props);\n  }\n\n  /**\n   * Update the pointer positions.\n   *\n   * @param  {Event} event The event object.\n   * @return {void}\n   */\n  updateValues(event) {\n    this.yLast = this.y;\n    this.xLast = this.x;\n\n    // Check pointer Y\n    // We either get data from a touch event `event.touches[0].clientY` or from\n    // a mouse event `event.clientY`.\n    if (((event.touches || [])[0] || event || {}).clientY !== this.y) {\n      this.y = ((event.touches || [])[0] || event || {}).clientY;\n    }\n\n    // Check pointer X\n    // We either get data from a touch event `event.touches[0].clientX` or from\n    // a mouse event `event.clientX`.\n    if (((event.touches || [])[0] || event || {}).clientX !== this.x) {\n      this.x = ((event.touches || [])[0] || event || {}).clientX;\n    }\n  }\n\n  /**\n   * Get the pointer props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    return {\n      isDown: this.isDown,\n      x: this.x,\n      y: this.y,\n      changed: {\n        x: this.x !== this.xLast,\n        y: this.y !== this.yLast,\n      },\n      last: {\n        x: this.xLast,\n        y: this.yLast,\n      },\n      delta: {\n        x: this.x - this.xLast,\n        y: this.y - this.yLast,\n      },\n      progress: {\n        x: this.x / window.innerWidth,\n        y: this.y / window.innerHeight,\n      },\n      max: {\n        x: window.innerWidth,\n        y: window.innerHeight,\n      },\n    };\n  }\n}\n\nlet pointer = null;\n\n/**\n * Use the pointer.\n *\n * ```js\n * import usePointer from '@studiometa/js-toolkit/services';\n * const { add, remove, props } = usePointer();\n * add('id', () => {});\n * remove('id');\n * props();\n * ```\n */\nexport default () => {\n  if (!pointer) {\n    pointer = new Pointer();\n  }\n\n  const add = pointer.add.bind(pointer);\n  const remove = pointer.remove.bind(pointer);\n  const props = () => pointer.props;\n\n  return {\n    add,\n    remove,\n    props,\n  };\n};\n"],"file":"pointer.js"}