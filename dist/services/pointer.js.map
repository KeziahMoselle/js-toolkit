{"version":3,"sources":["../../src/services/pointer.js"],"names":["Service","throttle","debounce","useRaf","isTouchEvent","event","TouchEvent","Pointer","window","innerHeight","innerWidth","add","remove","hasRaf","debounced","updateValues","trigger","props","handler","bind","downHandler","upHandler","document","documentElement","addEventListener","once","passive","removeEventListener","isDown","yLast","y","xLast","x","touches","clientY","clientX","changed","last","delta","progress","max","pointer","usePointer","has"],"mappings":"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","sourcesContent":["import Service from '../abstracts/Service';\nimport throttle from '../utils/throttle';\nimport debounce from '../utils/debounce';\nimport useRaf from './raf';\n\n/**\n * @typedef {import('./index').ServiceInterface} ServiceInterface\n */\n\n/**\n * @typedef {Object} PointerServiceProps\n * @property {MouseEvent | TouchEvent} event\n * @property {Boolean} isDown\n * @property {Number} x\n * @property {Number} y\n * @property {{ x: Boolean, y: Boolean }} changed\n * @property {{ x: Number, y: Number }} last\n * @property {{ x: Number, y: Number }} delta\n * @property {{ x: Number, y: Number }} progress\n * @property {{ x: Number, y: Number }} max\n */\n\n/**\n * @typedef {Object} PointerService\n * @property {(key:String, callback:(props:PointerServiceProps) => void) => void} add\n *   Add a function to the resize service. The key must be uniq.\n * @property {() => PointerServiceProps} props\n *   Get the current values of the resize service props.\n */\n\n/**\n * Test if an event is an instance of TouchEvent.\n *\n * @param {TouchEvent|MouseEvent} event The event instance to test.\n * @return {Boolean}                    Is it a TouchEvent?\n */\nfunction isTouchEvent(event) {\n  return typeof TouchEvent !== 'undefined' && event instanceof TouchEvent;\n}\n\n/**\n * Pointer service\n */\nclass Pointer extends Service {\n  /** @type {Boolean} State of the pointer. */\n  isDown = false;\n\n  /** @type {Number} The y pointer position. */\n  y = window.innerHeight / 2;\n\n  /** @type {Number} The y previous pointer position. */\n  yLast = window.innerHeight / 2;\n\n  /** @type {Number} The x pointer position. */\n  x = window.innerWidth / 2;\n\n  /** @type {Number} The x previous pointer position. */\n  xLast = window.innerWidth / 2;\n\n  /** @type {MouseEvent|TouchEvent} The latest event emitted from the pointer. */\n  event;\n\n  /**\n   * Bind the handler to the mousemove and touchmove events.\n   * Bind the up and down handler to the mousedown, mouseup, touchstart and touchend events.\n   *\n   * @return {Pointer}\n   */\n  init() {\n    const { add, remove } = useRaf();\n    this.hasRaf = false;\n\n    const debounced = debounce((event) => {\n      this.updateValues(event);\n      remove('usePointer');\n      this.trigger(this.props);\n      this.hasRaf = false;\n    }, 50);\n\n    this.handler = throttle((event) => {\n      this.updateValues(event);\n      if (!this.hasRaf) {\n        add('usePointer', (props) => {\n          this.trigger(this.props);\n        });\n        this.hasRaf = true;\n      }\n      // Reset changed flags at the end of the mousemove or touchmove event\n      debounced(event);\n    }, 32).bind(this);\n\n    this.downHandler = this.downHandler.bind(this);\n    this.upHandler = this.upHandler.bind(this);\n\n    document.documentElement.addEventListener('mouseenter', this.handler, { once: true });\n    document.addEventListener('mousemove', this.handler, { passive: true });\n    document.addEventListener('touchmove', this.handler, { passive: true });\n    document.addEventListener('mousedown', this.downHandler, { passive: true });\n    document.addEventListener('touchstart', this.downHandler, { passive: true });\n    document.addEventListener('mouseup', this.upHandler, { passive: true });\n    document.addEventListener('touchend', this.upHandler, { passive: true });\n    return this;\n  }\n\n  /**\n   * Unbind all handlers from their bounded event.\n   *\n   * @return {Pointer}\n   */\n  kill() {\n    document.removeEventListener('mousemove', this.handler);\n    document.removeEventListener('touchmove', this.handler);\n    document.removeEventListener('mousedown', this.downHandler);\n    document.removeEventListener('touchstart', this.downHandler);\n    document.removeEventListener('mouseup', this.upHandler);\n    document.removeEventListener('touchend', this.upHandler);\n    return this;\n  }\n\n  /**\n   * Handler for the pointer's down action.\n   *\n   * @return {void}\n   */\n  downHandler() {\n    this.isDown = true;\n    this.trigger(this.props);\n  }\n\n  /**\n   * Handler for the pointer's up action.\n   *\n   * @return {void}\n   */\n  upHandler() {\n    this.isDown = false;\n    this.trigger(this.props);\n  }\n\n  /**\n   * Update the pointer positions.\n   *\n   * @param  {MouseEvent|TouchEvent} event The event object.\n   * @return {void}\n   */\n  updateValues(event) {\n    this.event = event;\n    this.yLast = this.y;\n    this.xLast = this.x;\n\n    // Check pointer Y\n    // We either get data from a touch event `event.touches[0].clientY` or from\n    // a mouse event `event.clientY`.\n    const y = isTouchEvent(event)\n      ? /** @type {TouchEvent} */ (event).touches[0]?.clientY\n      : /** @type {MouseEvent} */ (event).clientY;\n    if (y !== this.y) {\n      this.y = y;\n    }\n\n    // Check pointer X\n    // We either get data from a touch event `event.touches[0].clientX` or from\n    // a mouse event `event.clientX`.\n    const x = isTouchEvent(event)\n      ? /** @type {TouchEvent} */ (event).touches[0]?.clientX\n      : /** @type {MouseEvent} */ (event).clientX;\n    if (x !== this.x) {\n      this.x = x;\n    }\n  }\n\n  /**\n   * Get the pointer props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    return {\n      event: this.event,\n      isDown: this.isDown,\n      x: this.x,\n      y: this.y,\n      changed: {\n        x: this.x !== this.xLast,\n        y: this.y !== this.yLast,\n      },\n      last: {\n        x: this.xLast,\n        y: this.yLast,\n      },\n      delta: {\n        x: this.x - this.xLast,\n        y: this.y - this.yLast,\n      },\n      progress: {\n        x: this.x / window.innerWidth,\n        y: this.y / window.innerHeight,\n      },\n      max: {\n        x: window.innerWidth,\n        y: window.innerHeight,\n      },\n    };\n  }\n}\n\nlet pointer = null;\n\n/**\n * Use the pointer.\n *\n * ```js\n * import usePointer from '@studiometa/js-toolkit/services';\n * const { add, remove, props } = usePointer();\n * add('id', () => {});\n * remove('id');\n * props();\n * ```\n *\n * @return {ServiceInterface & PointerService}\n */\nexport default function usePointer() {\n  if (!pointer) {\n    pointer = new Pointer();\n  }\n\n  const add = pointer.add.bind(pointer);\n  const remove = pointer.remove.bind(pointer);\n  const has = pointer.has.bind(pointer);\n  const props = () => pointer.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n}\n"],"file":"pointer.js"}