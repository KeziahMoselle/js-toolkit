{"version":3,"sources":["../../src/services/raf.js"],"names":["Raf","loop","trigger","props","isTicking","requestAnimationFrame","Service","raf","add","bind","remove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA;;;;;;;;;;;IAWMA,G;;;;;;;;;;;;;;;kGAEQ,K;;;;;;;AAEZ;;;;;2BAKO;AAAA;;AACL,UAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB;AACA,QAAA,MAAI,CAACC,OAAL,CAAa,MAAI,CAACC,KAAlB;;AAEA,YAAI,CAAC,MAAI,CAACC,SAAV,EAAqB;AACnB;AACD;;AAEDC,QAAAA,qBAAqB,CAACJ,IAAD,CAArB;AACD,OATD;;AAWA,WAAKG,SAAL,GAAiB,IAAjB;AACAH,MAAAA,IAAI;AACL;AAED;;;;;;;;2BAKO;AACL,WAAKG,SAAL,GAAiB,KAAjB;AACD;AAED;;;;;;;;;wBAMY;AACV,aAAO,EAAP;AACD;;;EA1CeE,oB;;AA6ClB,IAAMC,GAAG,GAAG,IAAIP,GAAJ,EAAZ;AACA,IAAMQ,GAAG,GAAGD,GAAG,CAACC,GAAJ,CAAQC,IAAR,CAAaF,GAAb,CAAZ;AACA,IAAMG,MAAM,GAAGH,GAAG,CAACG,MAAJ,CAAWD,IAAX,CAAgBF,GAAhB,CAAf;;AACA,IAAMJ,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMI,GAAG,CAACJ,KAAV;AAAA,CAAd;;eAEe;AAAA,SAAO;AACpBK,IAAAA,GAAG,EAAHA,GADoB;AAEpBE,IAAAA,MAAM,EAANA,MAFoB;AAGpBP,IAAAA,KAAK,EAALA;AAHoB,GAAP;AAAA,C","sourcesContent":["import Service from '../abstracts/Service';\n\n/**\n * Tick service\n *\n * ```\n * import { useRaf } from '@studiometa/js/services';\n * const { add, remove, props } = useRag();\n * add(id, (props) => {});\n * remove(id);\n * props();\n * ```\n */\nclass Raf extends Service {\n  /** @type {Boolean} Whether the loop is running or not. */\n  isTicking = false;\n\n  /**\n   * Start the requestAnimationFrame loop.\n   *\n   * @return {void}\n   */\n  init() {\n    const loop = () => {\n      // todo: add params to the trigger\n      this.trigger(this.props);\n\n      if (!this.isTicking) {\n        return;\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    this.isTicking = true;\n    loop();\n  }\n\n  /**\n   * Stop the requestAnimationFrame loop.\n   *\n   * @return {void}\n   */\n  kill() {\n    this.isTicking = false;\n  }\n\n  /**\n   * Get raf props.\n   *\n   * @todo Return elapsed time / index?\n   * @type {Object}\n   */\n  get props() {\n    return {};\n  }\n}\n\nconst raf = new Raf();\nconst add = raf.add.bind(raf);\nconst remove = raf.remove.bind(raf);\nconst props = () => raf.props;\n\nexport default () => ({\n  add,\n  remove,\n  props,\n});\n"],"file":"raf.js"}