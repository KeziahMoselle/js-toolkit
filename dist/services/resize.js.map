{"version":3,"sources":["../../src/services/resize.js"],"names":["Resize","handler","trigger","props","bind","window","addEventListener","removeEventListener","width","innerWidth","height","innerHeight","ratio","orientation","Service","resize","add","remove"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;IAUMA,M;;;;;;;;;;;;;AACJ;;;;;2BAKO;AAAA;;AACL,WAAKC,OAAL,GAAe,0BAAS,YAAM;AAC5B,QAAA,KAAI,CAACC,OAAL,CAAa,KAAI,CAACC,KAAlB;AACD,OAFc,EAEZC,IAFY,CAEP,IAFO,CAAf;AAGAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKL,OAAvC;AACD;AAED;;;;;;;;2BAKO;AACLI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqC,KAAKN,OAA1C;AACD;AAED;;;;;;;;wBAKY;AACV,UAAME,KAAK,GAAG;AACZK,QAAAA,KAAK,EAAEH,MAAM,CAACI,UADF;AAEZC,QAAAA,MAAM,EAAEL,MAAM,CAACM,WAFH;AAGZC,QAAAA,KAAK,EAAEP,MAAM,CAACI,UAAP,GAAoBJ,MAAM,CAACM,WAHtB;AAIZE,QAAAA,WAAW,EAAE;AAJD,OAAd;;AAOA,UAAIV,KAAK,CAACS,KAAN,GAAc,CAAlB,EAAqB;AACnBT,QAAAA,KAAK,CAACU,WAAN,GAAoB,WAApB;AACD;;AAED,UAAIV,KAAK,CAACS,KAAN,GAAc,CAAlB,EAAqB;AACnBT,QAAAA,KAAK,CAACU,WAAN,GAAoB,UAApB;AACD;;AAED,aAAOV,KAAP;AACD;;;EA5CkBW,oB;;AA+CrB,IAAMC,MAAM,GAAG,IAAIf,MAAJ,EAAf;AACA,IAAMgB,GAAG,GAAGD,MAAM,CAACC,GAAP,CAAWZ,IAAX,CAAgBW,MAAhB,CAAZ;AACA,IAAME,MAAM,GAAGF,MAAM,CAACE,MAAP,CAAcb,IAAd,CAAmBW,MAAnB,CAAf;;AACA,IAAMZ,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMY,MAAM,CAACZ,KAAb;AAAA,CAAd;;eAEe;AAAA,SAAO;AACpBa,IAAAA,GAAG,EAAHA,GADoB;AAEpBC,IAAAA,MAAM,EAANA,MAFoB;AAGpBd,IAAAA,KAAK,EAALA;AAHoB,GAAP;AAAA,C","sourcesContent":["import Service from '../abstracts/Service';\nimport debounce from '../utils/debounce';\n\n/**\n * Resize service\n *\n * ```\n * import resize from '@studiometa/js/services/resize';\n * resize.add(id, handler);\n * resize.remove(id);\n * resize.props;\n * ```\n */\nclass Resize extends Service {\n  /**\n   * Bind the handler to the resize event.\n   *\n   * @return {void}\n   */\n  init() {\n    this.handler = debounce(() => {\n      this.trigger(this.props);\n    }).bind(this);\n    window.addEventListener('resize', this.handler);\n  }\n\n  /**\n   * Unbind the handler from the resize event.\n   *\n   * @return {void}\n   */\n  kill() {\n    window.removeEventListener('resize', this.handler);\n  }\n\n  /**\n   * Get resize props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    const props = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      ratio: window.innerWidth / window.innerHeight,\n      orientation: 'square',\n    };\n\n    if (props.ratio > 1) {\n      props.orientation = 'landscape';\n    }\n\n    if (props.ratio < 1) {\n      props.orientation = 'portrait';\n    }\n\n    return props;\n  }\n}\n\nconst resize = new Resize();\nconst add = resize.add.bind(resize);\nconst remove = resize.remove.bind(resize);\nconst props = () => resize.props;\n\nexport default () => ({\n  add,\n  remove,\n  props,\n});\n"],"file":"resize.js"}