{"version":3,"file":"js-toolkit.js","sources":["../node_modules/nanoid/non-secure/index.js","../src/utils/object/getAllProperties.js","../src/abstracts/EventManager.js","../src/abstracts/Base/utils.js","../node_modules/deepmerge/dist/cjs.js","../src/abstracts/Base/components.js","../src/abstracts/Service.js","../src/utils/throttle.js","../src/utils/debounce.js","../src/utils/nextFrame.js","../src/services/raf.js","../src/services/pointer.js","../src/services/resize.js","../src/services/scroll.js","../src/utils/keyCodes.js","../src/services/key.js","../src/abstracts/Base/services.js","../src/abstracts/Base/events.js","../src/abstracts/Base/index.js","../src/utils/object/autoBind.js","../src/abstracts/Base/refs.js","../src/abstracts/Base/children.js","../src/abstracts/Base/options.js"],"sourcesContent":["// This alphabet uses a-z A-Z 0-9 _- symbols.\n// Symbols are generated for smaller size.\n// -_zyxwvutsrqponmlkjihgfedcba9876543210ZYXWVUTSRQPONMLKJIHGFEDCBA\nvar url = '-_'\n// Loop from 36 to 0 (from z to a and 9 to 0 in Base36).\nvar i = 36\nwhile (i--) {\n  // 36 is radix. Number.prototype.toString(36) returns number\n  // in Base36 representation. Base36 is like hex, but it uses 0â€“9 and a-z.\n  url += i.toString(36)\n}\n// Loop from 36 to 10 (from Z to A in Base36).\ni = 36\nwhile (i-- - 10) {\n  url += i.toString(36).toUpperCase()\n}\n\n/**\n * Generate URL-friendly unique ID. This method use non-secure predictable\n * random generator with bigger collision probability.\n *\n * @param {number} [size=21] The number of symbols in ID.\n *\n * @return {string} Random string.\n *\n * @example\n * const nanoid = require('nanoid/non-secure')\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n *\n * @name nonSecure\n * @function\n */\nmodule.exports = function (size) {\n  var id = ''\n  i = size || 21\n  // Compact alternative for `for (var i = 0; i < size; i++)`\n  while (i--) {\n    // `| 0` is compact and faster alternative for `Math.floor()`\n    id += url[Math.random() * 64 | 0]\n  }\n  return id\n}\n","/**\n * Gets all non-builtin properties up the prototype chain.\n *\n * @param  {Object} object The object to get the propeties from.\n * @param  {Array}  props  The already existing properties.\n * @return {Array}         An array of properties and their value.\n */\nexport default function getAllProperties(object, props = []) {\n  const proto = Object.getPrototypeOf(object);\n\n  if (proto === Object.prototype) {\n    return props;\n  }\n\n  return getAllProperties(\n    proto,\n    Object.getOwnPropertyNames(proto)\n      .map((name) => [name, proto])\n      .reduce((acc, val) => [...acc, val], props)\n  );\n}\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_events\"] }] */\n/**\n * Event management class.\n *\n * @method $on    Bind a given function to the given event.\n * @method $off   Unbind the given function from the given event.\n * @method $once  Bind a given function to the given event once.\n * @method $emit  Emit an event with custom props.\n */\nexport default class EventManager {\n  /** @type {Object} An object to store the events */\n  _events = {};\n\n  /**\n   * Bind a listener function to an event.\n   *\n   * @param  {String}   event    Name of the event.\n   * @param  {String}   listener Function to be called.\n   * @return {Function}          A function to unbind the listener.\n   */\n  $on(event, listener) {\n    if (!Array.isArray(this._events[event])) {\n      this._events[event] = [];\n    }\n    this._events[event].push(listener);\n\n    return () => {\n      this.$off(event, listener);\n    };\n  }\n\n  /**\n   * Unbind a listener function from an event.\n   *\n   * @param  {String}       event    Name of the event.\n   * @param  {String}       listener Function to be removed.\n   * @return {EventManager}          The current instance.\n   */\n  $off(event, listener) {\n    // If no event specified, we remove them all.\n    if (!event) {\n      this._events = {};\n      return this;\n    }\n    // If no listener have been specified, we remove all\n    // the listeners for the given event.\n    if (!listener) {\n      this._events[event] = [];\n      return this;\n    }\n\n    const index = this._events[event].indexOf(listener);\n\n    if (index > -1) {\n      this._events[event].splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Emits an event.\n   *\n   * @param  {String}       event Name of the event.\n   * @param  {Array}        args  The arguments to apply to the functions bound to this event.\n   * @return {EventManager}       The current instance.\n   */\n  $emit(event, ...args) {\n    if (!Array.isArray(this._events[event])) {\n      return this;\n    }\n\n    this._events[event].forEach((listener) => {\n      listener.apply(this, args);\n    });\n    return this;\n  }\n\n  /**\n   * Bind a listener function to an event for one execution only.\n   *\n   * @param  {String}       event    Name of the event.\n   * @param  {String}       listener Function to be called.\n   * @return {EventManager}          The current instance.\n   */\n  $once(event, listener) {\n    const instance = this;\n    this.$on(event, function handler(...args) {\n      instance.$off(event, handler);\n      listener.apply(instance, args);\n    });\n    return this;\n  }\n}\n","/**\n * Verbose debug for the component.\n *\n * @param  {...any} args The arguments passed to the method\n * @return {void}\n */\nexport function debug(instance, ...args) {\n  return instance.$options.debug\n    ? window.console.log.apply(window, [instance.config.name, ...args])\n    : () => {};\n}\n\n/**\n * Test if an object has a method.\n *\n * @param  {Object}  obj The object to test\n * @param  {String}  fn  The method's name\n * @return {Boolean}\n */\nexport function hasMethod(obj, name) {\n  return typeof obj[name] === 'function';\n}\n\n/**\n * Call the given method while applying the given arguments.\n *\n * @param {String} method The method to call\n * @param {...any} args   The arguments to pass to the method\n */\nexport function callMethod(instance, method, ...args) {\n  debug(instance, 'callMethod', method, ...args);\n\n  // Prevent duplicate call of `mounted` and `destroyed`\n  // methods based on the component status\n  if (\n    (method === 'destroyed' && !instance.$isMounted) ||\n    (method === 'mounted' && instance.$isMounted)\n  ) {\n    debug(instance, 'not', method, 'because the method has already been triggered once.');\n    return instance;\n  }\n\n  instance.$emit(method, ...args);\n\n  // We always emit an event, but we do not call the method if it does not exist\n  if (!hasMethod(instance, method)) {\n    return instance;\n  }\n\n  instance[method].call(instance, ...args);\n  debug(instance, method, instance, ...args);\n\n  return instance;\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import { debug } from './utils';\n\n/**\n * Mount a given component which might be async.\n *\n * @param  {Base|Promise} component The component to mount.\n * @return {void}\n */\nfunction mountComponent(component) {\n  if (component.__isAsync__) {\n    component.then((instance) => instance.$mount());\n  } else {\n    component.$mount();\n  }\n}\n\n/**\n * Mount children components of a given instance.\n *\n * @param  {Base} instance The parent component's instance.\n * @return {void}\n */\nexport function mountComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n\n  debug(instance, 'mountComponents', instance.$children);\n\n  Object.values(instance.$children).forEach(($child) => {\n    $child.forEach(mountComponent);\n  });\n}\n\n/**\n * Destroy a given component which might be async.\n *\n * @param  {Base|Promise} component The component to destroy.\n * @return {void}\n */\nfunction destroyComponent(component) {\n  if (component.__isAsync__) {\n    component.then((instance) => instance.$destroy());\n  } else {\n    component.$destroy();\n  }\n}\n\n/**\n * Destroy children components of a given instance.\n *\n * @param  {Base} instance The parent component's instance.\n * @return {void}\n */\nexport function destroyComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n  debug(instance, 'destroyComponents', instance.$children);\n\n  Object.values(instance.$children).forEach(($child) => {\n    $child.forEach(destroyComponent);\n  });\n}\n","/**\n * Service abstract class\n */\nexport default class Service {\n  /**\n   * Class constructor, used to test the abstract class implementation.\n   *\n   * @return {Service} The current instance\n   */\n  constructor() {\n    this.callbacks = new Map();\n    this.isInit = false;\n  }\n\n  /**\n   * Getter to get the services properties.\n   * This getter MUST be implementer by the service extending this class.\n   * @return {Object}\n   */\n  get props() {\n    throw new Error('The `props` getter must be implemented.');\n  }\n\n  /**\n   * Method to initialize the service behaviors.\n   * This method MUST be implemented by the service extending this class.\n   *\n   * @return {Service} The current instance\n   */\n  init() {\n    throw new Error('The `init` method must be implemented.');\n  }\n\n  /**\n   * Method to kill the service behaviors.\n   * This method MUST be implemented by the service extending this class.\n   *\n   * @return {Service} The current instance\n   */\n  kill() {\n    throw new Error('The `kill` method must be implemented.');\n  }\n\n  /**\n   * Add a callback.\n   *\n   * @param  {String}   key      The callback's identifier\n   * @param  {Function} callback The callback function\n   * @return {Service}           The current instance\n   */\n  add(key, callback) {\n    if (this.has(key)) {\n      throw new Error(`A callback with the key \\`${key}\\` has already been registered.`);\n    }\n\n    // Initialize the service when we add the first callback\n    if (this.callbacks.size === 0 && !this.isInit) {\n      this.init();\n      this.isInit = true;\n    }\n\n    this.callbacks.set(key, callback);\n    return this;\n  }\n\n  /**\n   * Test if a callback with the given key has already been added.\n   *\n   * @param  {String}  key The identifier to test\n   * @return {Boolean}     Whether or not the identifier already exists\n   */\n  has(key) {\n    return this.callbacks.has(key);\n  }\n\n  /**\n   * Get the callback tied to the given key.\n   *\n   * @param  {String}   key The identifier to get\n   * @return {Function}     The callback function\n   */\n  get(key) {\n    return this.callbacks.get(key);\n  }\n\n  /**\n   * Remove the callback tied to the given key.\n   *\n   * @param  {String} key The identifier to remove\n   * @return {Service}    The current instance\n   */\n  remove(key) {\n    this.callbacks.delete(key);\n\n    // Kill the service when we remove the last callback\n    if (this.callbacks.size === 0 && this.isInit) {\n      this.kill();\n      this.isInit = false;\n    }\n\n    return this;\n  }\n\n  /**\n   * Trigger each added callback with the given arguments.\n   *\n   * @param  {Array}   args All the arguments to apply to the callback\n   * @return {Service}      The current instance\n   */\n  trigger(...args) {\n    this.callbacks.forEach((callback) => {\n      callback(...args);\n    });\n\n    return this;\n  }\n}\n","/**\n * Simple throttling helper that limits a\n * function to only run once every {delay}ms\n *\n * @param {Function} fn    The function to throttle\n * @param {Number}   delay The delay in ms\n */\nexport default function throttle(fn, delay = 16) {\n  let lastCall = 0;\n  return (...args) => {\n    const now = new Date().getTime();\n    if (now - lastCall < delay) {\n      return false;\n    }\n    lastCall = now;\n    return fn(...args);\n  };\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked,\n * will not be triggered. The function will be called after it stops\n * being called for N milliseconds.\n *\n * @param {Function} fn    The function to call\n * @param {Number}   delay The delay in ms to wait before calling the function\n */\nexport default function debounce(fn, delay = 300) {\n  let timeout;\n  return (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n}\n","/**\n * RequestAnimation frame polyfill.\n * @see  https://github.com/vuejs/vue/blob/ec78fc8b6d03e59da669be1adf4b4b5abf670a34/dist/vue.runtime.esm.js#L7355\n * @type {Function}\n */\nexport const getRaf = () =>\n  typeof window !== 'undefined' && window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout;\n\n/**\n * Execute a callback in the next frame.\n * @param  {Function} fn The callback function to execute.\n * @return {Promise}\n */\nexport default function nextFrame(fn = () => {}) {\n  const raf = getRaf();\n  return new Promise((resolve) => {\n    raf(() => raf(() => resolve(fn())));\n  });\n}\n","import Service from '../abstracts/Service';\nimport { getRaf } from '../utils/nextFrame';\n\n/**\n * Tick service\n *\n * ```\n * import { useRaf } from '@studiometa/js/services';\n * const { add, remove, props } = useRag();\n * add(id, (props) => {});\n * remove(id);\n * props();\n * ```\n */\nclass Raf extends Service {\n  /** @type {Boolean} Whether the loop is running or not. */\n  isTicking = false;\n\n  /**\n   * Start the requestAnimationFrame loop.\n   *\n   * @return {void}\n   */\n  init() {\n    const raf = getRaf();\n\n    const loop = () => {\n      this.trigger(this.props);\n\n      if (!this.isTicking) {\n        return;\n      }\n\n      raf(loop);\n    };\n\n    this.isTicking = true;\n    loop();\n  }\n\n  /**\n   * Stop the requestAnimationFrame loop.\n   *\n   * @return {void}\n   */\n  kill() {\n    this.isTicking = false;\n  }\n\n  /**\n   * Get raf props.\n   *\n   * @todo Return elapsed time / index?\n   * @type {Object}\n   */\n  get props() {\n    return {\n      time: window.performance.now(),\n    };\n  }\n}\n\nlet instance = null;\n\nexport default () => {\n  if (!instance) {\n    instance = new Raf();\n  }\n\n  const add = instance.add.bind(instance);\n  const remove = instance.remove.bind(instance);\n  const has = instance.has.bind(instance);\n  const props = () => instance.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","import Service from '../abstracts/Service';\nimport throttle from '../utils/throttle';\nimport debounce from '../utils/debounce';\nimport useRaf from './raf';\n\n/**\n * Pointer service\n *\n * ```\n * import { usePointer } from '@studiometa/js/services';\n * const { add, remove, props } = usePointer();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Pointer extends Service {\n  /** @type {Boolean} State of the pointer. */\n  isDown = false;\n\n  /** @type {Number} The y pointer position. */\n  y = window.innerHeight / 2;\n\n  /** @type {Number} The y previous pointer position. */\n  yLast = window.innerHeight / 2;\n\n  /** @type {Number} The x pointer position. */\n  x = window.innerWidth / 2;\n\n  /** @type {Number} The x previous pointer position. */\n  xLast = window.innerWidth / 2;\n\n  /**\n   * Bind the handler to the mousemove and touchmove events.\n   * Bind the up and down handler to the mousedown, mouseup, touchstart and touchend events.\n   *\n   * @return {void}\n   */\n  init() {\n    const { add, remove } = useRaf();\n    this.hasRaf = false;\n\n    const debounced = debounce((event) => {\n      this.updateValues(event);\n      remove('usePointer');\n      this.trigger(this.props);\n      this.hasRaf = false;\n    }, 50);\n\n    this.handler = throttle((event) => {\n      this.updateValues(event);\n      if (!this.hasRaf) {\n        add('usePointer', () => {\n          this.trigger(this.props);\n        });\n        this.hasRaf = true;\n      }\n      // Reset changed flags at the end of the mousemove or touchmove event\n      debounced(event);\n    }, 32).bind(this);\n\n    this.downHandler = this.downHandler.bind(this);\n    this.upHandler = this.upHandler.bind(this);\n\n    document.documentElement.addEventListener('mouseenter', this.handler, { once: true });\n    document.addEventListener('mousemove', this.handler, { passive: true });\n    document.addEventListener('touchmove', this.handler, { passive: true });\n    document.addEventListener('mousedown', this.downHandler, { passive: true });\n    document.addEventListener('touchstart', this.downHandler, { passive: true });\n    document.addEventListener('mouseup', this.upHandler, { passive: true });\n    document.addEventListener('touchend', this.upHandler, { passive: true });\n  }\n\n  /**\n   * Unbind all handlers from their bounded event.\n   *\n   * @return {void}\n   */\n  kill() {\n    document.removeEventListener('mousemove', this.handler);\n    document.removeEventListener('touchmove', this.handler);\n    document.removeEventListener('mousedown', this.downHandler);\n    document.removeEventListener('touchstart', this.downHandler);\n    document.removeEventListener('mouseup', this.upHandler);\n    document.removeEventListener('touchend', this.upHandler);\n  }\n\n  /**\n   * Handler for the pointer's down action.\n   *\n   * @return {void}\n   */\n  downHandler() {\n    this.isDown = true;\n    this.trigger(this.props);\n  }\n\n  /**\n   * Handler for the pointer's up action.\n   *\n   * @return {void}\n   */\n  upHandler() {\n    this.isDown = false;\n    this.trigger(this.props);\n  }\n\n  /**\n   * Update the pointer positions.\n   *\n   * @param  {Event} event The event object.\n   * @return {void}\n   */\n  updateValues(event) {\n    this.yLast = this.y;\n    this.xLast = this.x;\n\n    // Check pointer Y\n    // We either get data from a touch event `event.touches[0].clientY` or from\n    // a mouse event `event.clientY`.\n    if (((event.touches || [])[0] || event || {}).clientY !== this.y) {\n      this.y = ((event.touches || [])[0] || event || {}).clientY;\n    }\n\n    // Check pointer X\n    // We either get data from a touch event `event.touches[0].clientX` or from\n    // a mouse event `event.clientX`.\n    if (((event.touches || [])[0] || event || {}).clientX !== this.x) {\n      this.x = ((event.touches || [])[0] || event || {}).clientX;\n    }\n  }\n\n  /**\n   * Get the pointer props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    return {\n      isDown: this.isDown,\n      x: this.x,\n      y: this.y,\n      changed: {\n        x: this.x !== this.xLast,\n        y: this.y !== this.yLast,\n      },\n      last: {\n        x: this.xLast,\n        y: this.yLast,\n      },\n      delta: {\n        x: this.x - this.xLast,\n        y: this.y - this.yLast,\n      },\n      progress: {\n        x: this.x / window.innerWidth,\n        y: this.y / window.innerHeight,\n      },\n      max: {\n        x: window.innerWidth,\n        y: window.innerHeight,\n      },\n    };\n  }\n}\n\nlet pointer = null;\n\n/**\n * Use the pointer.\n *\n * ```js\n * import usePointer from '@studiometa/js-toolkit/services';\n * const { add, remove, props } = usePointer();\n * add('id', () => {});\n * remove('id');\n * props();\n * ```\n */\nexport default () => {\n  if (!pointer) {\n    pointer = new Pointer();\n  }\n\n  const add = pointer.add.bind(pointer);\n  const remove = pointer.remove.bind(pointer);\n  const has = pointer.has.bind(pointer);\n  const props = () => pointer.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","import Service from '../abstracts/Service';\nimport debounce from '../utils/debounce';\n\n/**\n * Resize service\n *\n * ```\n * import { useResize } from '@studiometa/js/services';\n * const { add, remove, props } = useResize();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Resize extends Service {\n  /**\n   * Bind the handler to the resize event.\n   *\n   * @return {void}\n   */\n  init() {\n    this.handler = debounce(() => {\n      this.trigger(this.props);\n    }).bind(this);\n\n    if (this.canUseResizeObserver) {\n      this.resizeObserver = new ResizeObserver(this.handler);\n      this.resizeObserver.observe(document.documentElement);\n    } else {\n      window.addEventListener('resize', this.handler);\n    }\n  }\n\n  /**\n   * Unbind the handler from the resize event.\n   *\n   * @return {void}\n   */\n  kill() {\n    if (this.canUseResizeObserver) {\n      this.resizeObserver.disconnect();\n    } else {\n      window.removeEventListener('resize', this.handler);\n    }\n    delete this.resizeObserver;\n  }\n\n  /**\n   * Get resize props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    const props = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      ratio: window.innerWidth / window.innerHeight,\n      orientation: 'square',\n    };\n\n    if (props.ratio > 1) {\n      props.orientation = 'landscape';\n    }\n\n    if (props.ratio < 1) {\n      props.orientation = 'portrait';\n    }\n\n    if (this.breakpointElement) {\n      props.breakpoint = this.breakpoint;\n      props.breakpoints = this.breakpoints;\n    }\n\n    return props;\n  }\n\n  /**\n   * The element holding the breakpoints data.\n   * @return {HTMLElement}\n   */\n  get breakpointElement() {\n    return document.querySelector('[data-breakpoint]') || null;\n  }\n\n  /**\n   * Get the current breakpoint.\n   * @return {String}\n   */\n  get breakpoint() {\n    return window\n      .getComputedStyle(this.breakpointElement, '::before')\n      .getPropertyValue('content')\n      .replace(/\"/g, '');\n  }\n\n  /**\n   * Get all breakpoints.\n   * @return {Array}\n   */\n  get breakpoints() {\n    const breakpoints = window\n      .getComputedStyle(this.breakpointElement, '::after')\n      .getPropertyValue('content')\n      .replace(/\"/g, '');\n\n    return breakpoints.split(',');\n  }\n\n  /**\n   * Test if we can use the `ResizeObserver` API.\n   * @return {Boolean}\n   */\n  get canUseResizeObserver() {\n    return typeof window.ResizeObserver !== 'undefined';\n  }\n}\n\nlet resize = null;\n\nexport default () => {\n  if (!resize) {\n    resize = new Resize();\n  }\n\n  const add = resize.add.bind(resize);\n  const remove = resize.remove.bind(resize);\n  const has = resize.has.bind(resize);\n  const props = () => resize.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","import Service from '../abstracts/Service';\nimport throttle from '../utils/throttle';\nimport debounce from '../utils/debounce';\nimport nextFrame from '../utils/nextFrame';\n\n/**\n * Scroll service\n *\n * ```\n * import { useScroll } from '@studiometa/js-toolkit/services';\n * const { add, remove, props } = useScroll();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Scroll extends Service {\n  /** @type {Number} The y scroll position. */\n  y = window.pageYOffset;\n\n  /** @type {Number} The y previous scroll position. */\n  yLast = window.pageYOffset;\n\n  /** @type {Number} The x scroll position. */\n  x = window.pageXOffset;\n\n  /** @type {Number} The x previous scroll position. */\n  xLast = window.pageXOffset;\n\n  /**\n   * Bind the handler to the scroll event.\n   *\n   * @return {void}\n   */\n  init() {\n    const debounced = debounce(() => {\n      this.trigger(this.props);\n      nextFrame(() => {\n        this.trigger(this.props);\n      });\n    }, 50);\n\n    this.handler = throttle(() => {\n      this.trigger(this.props);\n\n      // Reset changed flags at the end of the scroll event\n      debounced();\n    }, 32).bind(this);\n\n    // Fire the `scrolled` method on document scroll\n    document.addEventListener('scroll', this.handler, { passive: true });\n  }\n\n  /**\n   * Unbind the handler from the scroll event.\n   *\n   * @return {void}\n   */\n  kill() {\n    document.removeEventListener('scroll', this.handler);\n  }\n\n  /**\n   * Get scroll props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    this.yLast = this.y;\n    this.xLast = this.x;\n\n    // Check scroll Y\n    if (window.pageYOffset !== this.y) {\n      this.y = window.pageYOffset;\n    }\n\n    // Check scroll x\n    if (window.pageXOffset !== this.x) {\n      this.x = window.pageXOffset;\n    }\n\n    return {\n      x: this.x,\n      y: this.y,\n      changed: {\n        x: this.x !== this.xLast,\n        y: this.y !== this.yLast,\n      },\n      last: {\n        x: this.xLast,\n        y: this.yLast,\n      },\n      delta: {\n        x: this.x - this.xLast,\n        y: this.y - this.yLast,\n      },\n      progress: {\n        x: this.max.x === 0 ? 1 : this.x / this.max.x,\n        y: this.max.y === 0 ? 1 : this.y / this.max.y,\n      },\n      max: this.max,\n    };\n  }\n\n  /**\n   * Get scroll max values.\n   *\n   * @type {Object}\n   */\n  get max() {\n    return {\n      x: (document.scrollingElement || document.body).scrollWidth - window.innerWidth,\n      y: (document.scrollingElement || document.body).scrollHeight - window.innerHeight,\n    };\n  }\n}\n\nlet scroll = null;\n\nexport default () => {\n  if (!scroll) {\n    scroll = new Scroll();\n  }\n\n  const add = scroll.add.bind(scroll);\n  const remove = scroll.remove.bind(scroll);\n  const has = scroll.has.bind(scroll);\n  const props = () => scroll.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","export default {\n  ENTER: 13,\n  SPACE: 32,\n  TAB: 9,\n  ESC: 27,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","import Service from '../abstracts/Service';\nimport keyCodes from '../utils/keyCodes';\n\n/**\n * Scroll service\n *\n * ```\n * import { useKey } from '@studiometa/js-toolkit/services';\n * const { add, remove, props } = useKey();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Key extends Service {\n  /** @type {Object} The event object. */\n  event = {};\n\n  /**\n   * Used to accumulate the number of times the `keydown` event has been triggered.\n   * @type {Number}\n   */\n  triggered = 0;\n\n  /** @type {Object} The previous event object. */\n  previousEvent = {};\n\n  /**\n   * Bind the handler to the keyboard event.\n   *\n   * @return {void}\n   */\n  init() {\n    this.handler = (event) => {\n      this.event = event;\n      this.trigger(this.props);\n    };\n    document.addEventListener('keydown', this.handler, { passive: false });\n    document.addEventListener('keyup', this.handler, { passive: false });\n  }\n\n  /**\n   * Unbind the handler from the keyboard event.\n   *\n   * @return {void}\n   */\n  kill() {\n    document.removeEventListener('keydown', this.handler);\n    document.removeEventListener('keyup', this.handler);\n  }\n\n  /**\n   * Get keyboard props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    const keys = Object.entries(keyCodes).reduce((acc, [name, code]) => {\n      acc[name] = code === this.event.keyCode;\n      return acc;\n    }, {});\n\n    if (!this.previousEvent.type) {\n      this.triggered = 0;\n    }\n\n    if (this.event.type === 'keydown' && this.previousEvent.type === 'keydown') {\n      this.triggered += 1;\n    } else {\n      this.triggered = 1;\n    }\n\n    this.previousEvent = this.event;\n\n    return {\n      event: this.event,\n      triggered: this.triggered,\n      direction: this.event.type === 'keydown' ? 'down' : 'up',\n      isUp: this.event.type === 'keyup',\n      isDown: this.event.type === 'keydown',\n      ...keys,\n    };\n  }\n}\n\nlet key = null;\n\nexport default () => {\n  if (!key) {\n    key = new Key();\n  }\n\n  const add = key.add.bind(key);\n  const remove = key.remove.bind(key);\n  const has = key.has.bind(key);\n  const props = () => key.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","import usePointer from '../../services/pointer';\nimport useRaf from '../../services/raf';\nimport useResize from '../../services/resize';\nimport useScroll from '../../services/scroll';\nimport useKey from '../../services/key';\nimport { hasMethod, callMethod } from './utils';\n\n/**\n * Init the given service and bind it to the given instance.\n *\n * @param  {Base}     instance The Base instance.\n * @param  {String}   method   The instance to test for binding\n * @param  {Function} service  The service `use...` function\n * @return {Function}          A function to unbind the service\n */\nfunction initService(instance, method, service) {\n  if (!hasMethod(instance, method)) {\n    return () => {};\n  }\n\n  const { add, remove } = service();\n  add(instance.$id, (...args) => {\n    callMethod(instance, method, ...args);\n  });\n\n  return () => remove(instance.$id);\n}\n\n/**\n * Use the services.\n * @param  {Base} instance A Base class instance.\n * @return {Array}         A list of unbind methods.\n */\nexport default function bindServices(instance) {\n  const unbindMethods = [\n    initService(instance, 'scrolled', useScroll),\n    initService(instance, 'resized', useResize),\n    initService(instance, 'ticked', useRaf),\n    initService(instance, 'moved', usePointer),\n    initService(instance, 'keyed', useKey),\n  ];\n\n  // Fire the `loaded` method on window load\n  // @todo remove this? or move it elsewhere?\n  if (hasMethod(instance, 'loaded')) {\n    const loadedHandler = (event) => {\n      callMethod(instance, 'loaded', { event });\n    };\n    window.addEventListener('load', loadedHandler);\n    unbindMethods.push(() => {\n      window.removeEventListener('load', loadedHandler);\n    });\n  }\n\n  return unbindMethods;\n}\n","import getAllProperties from '../../utils/object/getAllProperties';\nimport { debug } from './utils';\n\n/**\n * Bind event handler methods to the root HTML element.\n *\n * @param  {Base}  instance     A Base instance.\n * @param  {Array} eventMethods A list of methods to bind.\n * @return {Array}              A list of unbind functions.\n */\nfunction bindRootEvents(instance, eventMethods) {\n  return eventMethods.map((eventMethod) => {\n    const eventName = eventMethod.replace(/^on/, '').toLowerCase();\n\n    const handler = (...args) => {\n      debug(instance, eventMethod, instance.$el, ...args);\n      instance[eventMethod](...args);\n    };\n\n    instance.$el.addEventListener(eventName, handler);\n\n    return () => {\n      instance.$el.removeEventListener(eventName, handler);\n    };\n  });\n}\n\n/**\n * Bind event handler methods to refs HTML element.\n *\n * @param  {Base}  instance     A Base instance.\n * @param  {Array} eventMethods A list of methods to bind.\n * @return {Array}              A list of unbind functions.\n */\nfunction bindRefsEvents(instance, eventMethods) {\n  const unbindMethods = [];\n\n  Object.entries(instance.$refs).forEach(([refName, $refOrRefs]) => {\n    const $refs = Array.isArray($refOrRefs) ? $refOrRefs : [$refOrRefs];\n    const refEventMethod = `on${refName.replace(/^\\w/, (c) => c.toUpperCase())}`;\n\n    eventMethods\n      .filter((eventMethod) => eventMethod.startsWith(refEventMethod))\n      .forEach((eventMethod) => {\n        $refs.forEach(($ref, index) => {\n          const eventName = eventMethod.replace(refEventMethod, '').toLowerCase();\n          const handler = (...args) => {\n            debug(instance, eventMethod, $ref, ...args, index);\n            instance[eventMethod](...args, index);\n          };\n\n          debug(instance, 'binding ref event', refName, eventName);\n\n          if ($ref.constructor && $ref.constructor.__isBase__) {\n            // eslint-disable-next-line no-param-reassign\n            $ref = $ref.$el;\n          }\n\n          $ref.addEventListener(eventName, handler);\n          const unbindMethod = () => {\n            debug(instance, 'unbinding ref event', eventMethods);\n            $ref.removeEventListener(eventName, handler);\n          };\n\n          unbindMethods.push(unbindMethod);\n        });\n      });\n  });\n\n  return unbindMethods;\n}\n\n/**\n * Bind event handler methods to children Base instance.\n * @param  {Base}  instance     A Base instance.\n * @param  {Array} eventMethods A list of methods to bind.\n * @return {Array}              A list of unbind functions.\n */\nfunction bindChildrenEvents(instance, eventMethods) {\n  const unbindMethods = [];\n\n  Object.entries(instance.$children).forEach(([childName, $children]) => {\n    const childEventMethod = `on${childName.replace(/^\\w/, (c) => c.toUpperCase())}`;\n\n    eventMethods\n      .filter((eventMethod) => eventMethod.startsWith(childEventMethod))\n      .forEach((eventMethod) => {\n        $children.forEach(($child, index) => {\n          const eventName = eventMethod.replace(childEventMethod, '').toLowerCase();\n          const handler = (...args) => {\n            debug(instance, eventMethod, $child, ...args, index);\n            instance[eventMethod](...args, index);\n          };\n\n          debug(instance, 'binding child event', childName, eventName);\n\n          const unbindMethod = $child.$on(eventName, handler);\n          unbindMethods.push(() => {\n            debug(instance, 'unbinding child event', childName, eventName);\n            unbindMethod();\n          });\n        });\n      });\n  });\n\n  return unbindMethods;\n}\n\n/**\n * Bind ref and children component's events to their corresponding method.\n *\n * @param  {Base} instance  A Base instance.\n * @return {Array}          A list of methods to unbind the events.\n */\nexport default function bindEvents(instance) {\n  const ROOT_EVENT_REGEX = /^on[A-Z][a-z]+$/;\n  const REFS_CHILDREN_EVENT_REGEX = /^on([A-Z][a-z]+)([A-Z][a-z]+)+$/;\n\n  // Get all event methods\n  const eventMethods = getAllProperties(instance).reduce(\n    (acc, [name]) => {\n      // Testing camelCase with one word: onEvent.\n      if (ROOT_EVENT_REGEX.test(name)) {\n        acc.root.push(name);\n        return acc;\n      }\n\n      // Testing camelCase with more than two words: onRefEvent.\n      if (REFS_CHILDREN_EVENT_REGEX.test(name)) {\n        acc.refsOrChildren.push(name);\n      }\n\n      return acc;\n    },\n    { root: [], refsOrChildren: [] }\n  );\n\n  const unbindMethods = [\n    ...bindRootEvents(instance, eventMethods.root),\n    ...bindRefsEvents(instance, eventMethods.refsOrChildren),\n    ...bindChildrenEvents(instance, eventMethods.refsOrChildren),\n  ];\n\n  return unbindMethods;\n}\n","import nanoid from 'nanoid/non-secure';\nimport autoBind from '../../utils/object/autoBind';\nimport EventManager from '../EventManager';\nimport { callMethod, debug } from './utils';\nimport { getChildren } from './children';\nimport { getOptions, setOptions } from './options';\nimport { getRefs } from './refs';\nimport { mountComponents, destroyComponents } from './components';\nimport bindServices from './services';\nimport bindEvents from './events';\n\n/**\n * Page lifecycle class\n *\n * @method mounted   Fired when the class is instantiated\n * @method loaded    Fired on the window's load event\n * @method ticked    Fired each frame with `requestAnimationFrame`\n * @method resized   Fired when the window is resized (`resize` event)\n * @method moved     Fired when the pointer has moved (`touchmove` and `mousemove` events)\n * @method scrolled  Fired with debounce when the document is scrolled (`scroll` event)\n * @method destroyed Fired when the window is being unloaded (`unload` event)\n */\nexport default class Base extends EventManager {\n  /**\n   * Get the component's refs.\n   * @return {Object}\n   */\n  get $refs() {\n    return getRefs(this, this.$el);\n  }\n\n  /**\n   * Get the component's children components.\n   * @return {Object}\n   */\n  get $children() {\n    return getChildren(this, this.$el, this.config.components || {});\n  }\n\n  /**\n   * Get the component's merged config and options.\n   * @return {Object}\n   */\n  get $options() {\n    return getOptions(this, this.$el, this.config);\n  }\n\n  /**\n   * Set the components option.\n   * @param  {Object} value The new options values to merge with the old ones.\n   * @return {void}\n   */\n  set $options(newOptions) {\n    setOptions(this, this.$el, newOptions);\n  }\n\n  /**\n   * Class constructor where all the magic takes place.\n   *\n   * @param  {HTMLElement} element The component's root element.\n   * @return {Base}                A Base instance.\n   */\n  constructor(element) {\n    super();\n\n    if (!this.config) {\n      throw new Error('The `config` getter must be defined.');\n    }\n\n    if (!this.config.name) {\n      throw new Error('The `config.name` property is required.');\n    }\n\n    if (!element) {\n      throw new Error('The root element must be defined.');\n    }\n\n    Object.defineProperties(this, {\n      $id: {\n        value: `${this.config.name}-${nanoid()}`,\n      },\n      $isMounted: {\n        value: false,\n        writable: true,\n      },\n      $el: {\n        value: element,\n      },\n    });\n\n    if (!this.$el.__base__) {\n      Object.defineProperty(this.$el, '__base__', {\n        get: () => this,\n        configurable: true,\n      });\n    }\n\n    // Autobind all methods to the instance\n    autoBind(this, {\n      exclude: [\n        '$mount',\n        '$destroy',\n        '$log',\n        '$on',\n        '$once',\n        '$off',\n        '$emit',\n        'mounted',\n        'loaded',\n        'ticked',\n        'resized',\n        'moved',\n        'keyed',\n        'scrolled',\n        'destroyed',\n        ...(this._excludeFromAutoBind || []),\n      ],\n    });\n\n    let unbindMethods = [];\n    this.$on('mounted', () => {\n      mountComponents(this);\n      unbindMethods = [...bindServices(this), ...bindEvents(this)];\n      this.$isMounted = true;\n    });\n\n    this.$on('updated', () => {\n      unbindMethods.forEach((method) => method());\n      mountComponents(this);\n      unbindMethods = [...bindServices(this), ...bindEvents(this)];\n    });\n\n    this.$on('destroyed', () => {\n      this.$isMounted = false;\n      unbindMethods.forEach((method) => method());\n      destroyComponents(this);\n    });\n\n    // Mount class which are not used as another component's child.\n    if (!this.__isChild__) {\n      this.$mount();\n      Object.defineProperty(this, '$parent', { get: () => null });\n    }\n\n    debug(this, 'constructor', this);\n    return this;\n  }\n\n  /**\n   * Small helper to log stuff.\n   *\n   * @param  {...any} args The arguments passed to the method\n   * @return {void}\n   */\n  $log(...args) {\n    return this.$options.log\n      ? window.console.log.apply(window, [this.config.name, ...args])\n      : () => {};\n  }\n\n  /**\n   * Trigger the `mounted` callback.\n   */\n  $mount() {\n    debug(this, '$mount');\n    callMethod(this, 'mounted');\n    return this;\n  }\n\n  /**\n   * Update the instance children.\n   */\n  $update() {\n    debug(this, '$update');\n    callMethod(this, 'updated');\n    return this;\n  }\n\n  /**\n   * Trigger the `destroyed` callback.\n   */\n  $destroy() {\n    debug(this, '$destroy');\n    callMethod(this, 'destroyed');\n    return this;\n  }\n\n  /**\n   * Terminate a child instance when it is not needed anymore.\n   * @return {void}\n   */\n  $terminate() {\n    debug(this, '$terminate');\n\n    // First, destroy the component.\n    this.$destroy();\n\n    // Execute the `terminated` hook if it exists\n    callMethod(this, 'terminated');\n\n    // Delete the reference to the instance\n    delete this.$el.__base__;\n\n    // And update its status to prevent re-instantiation when accessing the\n    // parent's `$children` property\n    Object.defineProperty(this.$el, '__base__', {\n      value: 'terminated',\n      configurable: false,\n      writable: false,\n    });\n  }\n}\n\nBase.__isBase__ = true;\n","import getAllProperties from './getAllProperties';\n\n/**\n * Auto-bind methods to an instance.\n *\n * @param  {Object}               instance        The instance.\n * @param  {Array<String|RegExp>} options.include Methods to include.\n * @param  {Array<String|RegExp>} options.exclude Methods to exclude.\n * @return {Object}                               The instance.\n */\nexport default function autoBind(instance, { include, exclude } = {}) {\n  const filter = (key) => {\n    const match = (pattern) => (typeof pattern === 'string' ? key === pattern : pattern.test(key));\n\n    if (include) {\n      return include.some(match);\n    }\n\n    if (exclude) {\n      return !exclude.some(match);\n    }\n\n    return true;\n  };\n\n  getAllProperties(instance)\n    .filter(([key]) => key !== 'constructor' && filter(key))\n    .forEach(([key, object]) => {\n      const descriptor = Object.getOwnPropertyDescriptor(object, key);\n      if (descriptor && typeof descriptor.value === 'function') {\n        instance[key] = instance[key].bind(instance);\n      }\n    });\n\n  return instance;\n}\n","/**\n * Get all refs of a component.\n *\n * @param  {Base}        instance The component's instance.\n * @param  {HTMLElement} element  The component's root element.\n * @return {Object}               Return an object containing all the component's refs.\n */\nexport function getRefs(instance, element) {\n  const allRefs = Array.from(element.querySelectorAll(`[data-ref]`));\n  const childrenRefs = Array.from(element.querySelectorAll(`:scope [data-component] [data-ref]`));\n  const elements = allRefs.filter((ref) => !childrenRefs.includes(ref));\n\n  const refs = elements.reduce(($refs, $ref) => {\n    let refName = $ref.dataset.ref;\n    const $realRef = $ref.__base__ ? $ref.__base__ : $ref;\n\n    if (refName.endsWith('[]')) {\n      refName = refName.replace(/\\[\\]$/, '');\n\n      if (!$refs[refName]) {\n        $refs[refName] = [];\n      }\n    }\n\n    if ($refs[refName]) {\n      if (Array.isArray($refs[refName])) {\n        $refs[refName].push($realRef);\n      } else {\n        $refs[refName] = [$refs[refName], $realRef];\n      }\n    } else {\n      $refs[refName] = $realRef;\n    }\n\n    return $refs;\n  }, {});\n\n  instance.$emit('get:refs', refs);\n  return refs;\n}\n\nexport default {\n  getRefs,\n};\n","/**\n * Get a child component.\n *\n * @param  {HTMLElement}  el             The root element of the child component.\n * @param  {Base|Promise} ComponentClass A Base class or a Promise for async components.\n * @param  {Base}         parent         The parent component instance.\n * @return {Base|Promise}                A Base instance or a Promise resolving to a Base instance.\n */\nfunction getChild(el, ComponentClass, parent) {\n  // Return existing instance if it exists\n  if (el.__base__) {\n    return el.__base__;\n  }\n\n  // Return a new instance if the component class is a child of the Base class\n  if (ComponentClass.__isBase__) {\n    Object.defineProperty(ComponentClass.prototype, '__isChild__', { value: true });\n    const child = new ComponentClass(el);\n    Object.defineProperty(child, '$parent', { get: () => parent });\n    return child;\n  }\n\n  // Resolve async components\n  const asyncComponent = ComponentClass().then((module) => {\n    const ResolvedClass = module.default ? module.default : module;\n    Object.defineProperty(ResolvedClass.prototype, '__isChild__', { value: true });\n    const child = new ResolvedClass(el);\n    Object.defineProperty(child, '$parent', { get: () => parent });\n    return child;\n  });\n\n  asyncComponent.__isAsync__ = true;\n\n  return asyncComponent;\n}\n\n/**\n *\n * @param  {Base}        instance   The component's instance.\n * @param  {HTMLElement} element    The component's root element\n * @param  {Object}      components The children components' classes\n * @return {null|Object}            Returns `null` if no child components are defined or an object of all child component instances\n */\nexport function getChildren(instance, element, components) {\n  const children = Object.entries(components).reduce((acc, [name, ComponentClass]) => {\n    const selector = `[data-component=\"${name}\"]`;\n    let elements = Array.from(element.querySelectorAll(selector));\n\n    // If no child component found with the default selector, the name must be a DOM selector\n    if (elements.length === 0) {\n      elements = Array.from(element.querySelectorAll(name));\n    }\n\n    if (elements.length === 0) {\n      return acc;\n    }\n\n    acc[name] = elements\n      .map((el) => getChild(el, ComponentClass, instance))\n      // Filter out terminated children\n      .filter((el) => el !== 'terminated');\n\n    if (acc[name].length === 0) {\n      delete acc[name];\n    }\n\n    return acc;\n  }, {});\n\n  instance.$emit('get:children', children);\n  return children;\n}\n\nexport default {\n  getChildren,\n};\n","import merge from 'deepmerge';\n\n/**\n * Get a component's options.\n *\n * @param  {Base}        instance The component's instance.\n * @param  {HTMLElement} element  The component's root element.\n * @param  {Object}      config   The component's default config.\n * @return {Object}               The component's merged options.\n */\nexport function getOptions(instance, element, config) {\n  let options = {};\n  if (element.dataset.options) {\n    try {\n      options = JSON.parse(element.dataset.options);\n    } catch (err) {\n      throw new Error('Can not parse the `data-options` attribute. Is it a valid JSON string?');\n    }\n  }\n\n  options = merge(config, options);\n  instance.$emit('get:options', options);\n  return options;\n}\n\n/**\n * Set a component instance options.\n *\n * @param {Base}        instance   The component's instance.\n * @param {HTMLElement} element    The component's root element.\n * @param {Object}      newOptions The new options object.\n */\nexport function setOptions(instance, element, newOptions) {\n  let options = {};\n  if (element.dataset.options) {\n    try {\n      options = JSON.parse(element.dataset.options);\n    } catch (err) {\n      throw new Error('Can not parse the `data-options` attribute. Is it a valid JSON string?');\n    }\n  }\n  options = merge(options, newOptions);\n  element.dataset.options = JSON.stringify(options);\n}\n\nexport default {\n  getOptions,\n  setOptions,\n};\n"],"names":["url","i","toString","toUpperCase","size","id","Math","random","getAllProperties","object","props","proto","Object","getPrototypeOf","prototype","getOwnPropertyNames","map","name","reduce","acc","val","EventManager","_events","$on","event","listener","Array","isArray","this","push","_this","$off","index","indexOf","splice","$emit","forEach","apply","_this2","$once","instance","handler","debug","$options","window","console","log","config","hasMethod","obj","callMethod","method","args","$isMounted","call","isMergeableObject","value","isNonNullObject","stringValue","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","defaultArrayMerge","target","source","concat","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","property","_","arrayMerge","sourceIsArray","destination","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","mergeObject","all","array","Error","prev","next","mountComponent","component","__isAsync__","then","$mount","mountComponents","$children","values","$child","destroyComponent","$destroy","Service","callbacks","Map","isInit","init","kill","add","callback","has","set","get","remove","delete","trigger","throttle","fn","delay","lastCall","now","Date","getTime","debounce","timeout","clearTimeout","setTimeout","getRaf","requestAnimationFrame","bind","Raf","isTicking","raf","loop","time","performance","Pointer","isDown","y","innerHeight","yLast","x","innerWidth","xLast","useRaf","hasRaf","debounced","updateValues","downHandler","upHandler","document","documentElement","addEventListener","once","passive","removeEventListener","touches","clientY","clientX","changed","last","delta","progress","max","pointer","Resize","canUseResizeObserver","resizeObserver","ResizeObserver","observe","disconnect","width","height","ratio","orientation","breakpointElement","breakpoint","breakpoints","querySelector","getComputedStyle","getPropertyValue","replace","split","resize","Scroll","pageYOffset","pageXOffset","Promise","resolve","nextFrame","scrollingElement","body","scrollWidth","scrollHeight","scroll","ENTER","SPACE","TAB","ESC","LEFT","UP","RIGHT","DOWN","Key","triggered","previousEvent","entries","keyCodes","_this3","keyCode","type","direction","isUp","initService","service","$id","bindServices","unbindMethods","useScroll","useResize","usePointer","useKey","loadedHandler","bindEvents","ROOT_EVENT_REGEX","REFS_CHILDREN_EVENT_REGEX","eventMethods","test","root","refsOrChildren","eventMethod","eventName","toLowerCase","$el","bindRootEvents","$refs","refName","$refOrRefs","refEventMethod","c","startsWith","$ref","constructor","__isBase__","bindRefsEvents","childName","childEventMethod","unbindMethod","bindChildrenEvents","Base","defineProperties","nanoid","writable","__base__","defineProperty","configurable","include","exclude","match","pattern","some","descriptor","getOwnPropertyDescriptor","autoBind","_excludeFromAutoBind","destroyComponents","__isChild__","allRefs","from","querySelectorAll","childrenRefs","refs","ref","includes","dataset","$realRef","endsWith","getRefs","components","children","ComponentClass","elements","length","el","parent","child","asyncComponent","module","ResolvedClass","default","getChild","getChildren","JSON","parse","err","merge","getOptions","newOptions","stringify","setOptions","$log","$update","$terminate"],"mappings":"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"}