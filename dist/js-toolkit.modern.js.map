{"version":3,"file":"js-toolkit.modern.js","sources":["../node_modules/nanoid/non-secure/index.js","../src/utils/object/getAllProperties.js","../src/abstracts/Base/utils.js","../node_modules/deepmerge/dist/cjs.js","../src/abstracts/Base/components.js","../src/abstracts/Service.js","../src/utils/throttle.js","../src/utils/debounce.js","../src/utils/nextFrame.js","../src/services/raf.js","../src/services/pointer.js","../src/services/resize.js","../src/services/scroll.js","../src/utils/keyCodes.js","../src/services/key.js","../src/abstracts/Base/services.js","../src/abstracts/Base/events.js","../src/abstracts/Base/index.js","../src/abstracts/EventManager.js","../src/abstracts/Base/refs.js","../src/abstracts/Base/children.js","../src/abstracts/Base/options.js","../src/utils/object/autoBind.js"],"sourcesContent":["// This alphabet uses a-z A-Z 0-9 _- symbols.\n// Symbols are generated for smaller size.\n// -_zyxwvutsrqponmlkjihgfedcba9876543210ZYXWVUTSRQPONMLKJIHGFEDCBA\nvar url = '-_'\n// Loop from 36 to 0 (from z to a and 9 to 0 in Base36).\nvar i = 36\nwhile (i--) {\n  // 36 is radix. Number.prototype.toString(36) returns number\n  // in Base36 representation. Base36 is like hex, but it uses 0â€“9 and a-z.\n  url += i.toString(36)\n}\n// Loop from 36 to 10 (from Z to A in Base36).\ni = 36\nwhile (i-- - 10) {\n  url += i.toString(36).toUpperCase()\n}\n\n/**\n * Generate URL-friendly unique ID. This method use non-secure predictable\n * random generator with bigger collision probability.\n *\n * @param {number} [size=21] The number of symbols in ID.\n *\n * @return {string} Random string.\n *\n * @example\n * const nanoid = require('nanoid/non-secure')\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n *\n * @name nonSecure\n * @function\n */\nmodule.exports = function (size) {\n  var id = ''\n  i = size || 21\n  // Compact alternative for `for (var i = 0; i < size; i++)`\n  while (i--) {\n    // `| 0` is compact and faster alternative for `Math.floor()`\n    id += url[Math.random() * 64 | 0]\n  }\n  return id\n}\n","/**\n * Gets all non-builtin properties up the prototype chain.\n *\n * @param  {Object} object The object to get the propeties from.\n * @param  {Array}  props  The already existing properties.\n * @return {Array}         An array of properties and their value.\n */\nexport default function getAllProperties(object, props = []) {\n  const proto = Object.getPrototypeOf(object);\n\n  if (proto === Object.prototype) {\n    return props;\n  }\n\n  return getAllProperties(\n    proto,\n    Object.getOwnPropertyNames(proto)\n      .map((name) => [name, proto])\n      .reduce((acc, val) => [...acc, val], props)\n  );\n}\n","/**\n * Verbose debug for the component.\n *\n * @param  {...any} args The arguments passed to the method\n * @return {void}\n */\nexport function debug(instance, ...args) {\n  return instance.$options.debug\n    ? window.console.log.apply(window, [instance.config.name, ...args])\n    : () => {};\n}\n\n/**\n * Test if an object has a method.\n *\n * @param  {Object}  obj The object to test\n * @param  {String}  fn  The method's name\n * @return {Boolean}\n */\nexport function hasMethod(obj, name) {\n  return typeof obj[name] === 'function';\n}\n\n/**\n * Call the given method while applying the given arguments.\n *\n * @param {String} method The method to call\n * @param {...any} args   The arguments to pass to the method\n */\nexport function callMethod(instance, method, ...args) {\n  debug(instance, 'callMethod', method, ...args);\n\n  // Prevent duplicate call of `mounted` and `destroyed`\n  // methods based on the component status\n  if (\n    (method === 'destroyed' && !instance.$isMounted) ||\n    (method === 'mounted' && instance.$isMounted)\n  ) {\n    debug(instance, 'not', method, 'because the method has already been triggered once.');\n    return instance;\n  }\n\n  instance.$emit(method, ...args);\n\n  // We always emit an event, but we do not call the method if it does not exist\n  if (!hasMethod(instance, method)) {\n    return instance;\n  }\n\n  instance[method].call(instance, ...args);\n  debug(instance, method, instance, ...args);\n\n  return instance;\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import { debug } from './utils';\n\n/**\n * Mount a given component which might be async.\n *\n * @param  {Base|Promise} component The component to mount.\n * @return {void}\n */\nfunction mountComponent(component) {\n  if (component.__isAsync__) {\n    component.then((instance) => instance.$mount());\n  } else {\n    component.$mount();\n  }\n}\n\n/**\n * Mount children components of a given instance.\n *\n * @param  {Base} instance The parent component's instance.\n * @return {void}\n */\nexport function mountComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n\n  debug(instance, 'mountComponents', instance.$children);\n\n  Object.values(instance.$children).forEach(($child) => {\n    $child.forEach(mountComponent);\n  });\n}\n\n/**\n * Destroy a given component which might be async.\n *\n * @param  {Base|Promise} component The component to destroy.\n * @return {void}\n */\nfunction destroyComponent(component) {\n  if (component.__isAsync__) {\n    component.then((instance) => instance.$destroy());\n  } else {\n    component.$destroy();\n  }\n}\n\n/**\n * Destroy children components of a given instance.\n *\n * @param  {Base} instance The parent component's instance.\n * @return {void}\n */\nexport function destroyComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n  debug(instance, 'destroyComponents', instance.$children);\n\n  Object.values(instance.$children).forEach(($child) => {\n    $child.forEach(destroyComponent);\n  });\n}\n","/**\n * Service abstract class\n */\nexport default class Service {\n  /**\n   * Class constructor, used to test the abstract class implementation.\n   *\n   * @return {Service} The current instance\n   */\n  constructor() {\n    this.callbacks = new Map();\n    this.isInit = false;\n  }\n\n  /**\n   * Getter to get the services properties.\n   * This getter MUST be implementer by the service extending this class.\n   * @return {Object}\n   */\n  get props() {\n    throw new Error('The `props` getter must be implemented.');\n  }\n\n  /**\n   * Method to initialize the service behaviors.\n   * This method MUST be implemented by the service extending this class.\n   *\n   * @return {Service} The current instance\n   */\n  init() {\n    throw new Error('The `init` method must be implemented.');\n  }\n\n  /**\n   * Method to kill the service behaviors.\n   * This method MUST be implemented by the service extending this class.\n   *\n   * @return {Service} The current instance\n   */\n  kill() {\n    throw new Error('The `kill` method must be implemented.');\n  }\n\n  /**\n   * Add a callback.\n   *\n   * @param  {String}   key      The callback's identifier\n   * @param  {Function} callback The callback function\n   * @return {Service}           The current instance\n   */\n  add(key, callback) {\n    if (this.has(key)) {\n      throw new Error(`A callback with the key \\`${key}\\` has already been registered.`);\n    }\n\n    // Initialize the service when we add the first callback\n    if (this.callbacks.size === 0 && !this.isInit) {\n      this.init();\n      this.isInit = true;\n    }\n\n    this.callbacks.set(key, callback);\n    return this;\n  }\n\n  /**\n   * Test if a callback with the given key has already been added.\n   *\n   * @param  {String}  key The identifier to test\n   * @return {Boolean}     Whether or not the identifier already exists\n   */\n  has(key) {\n    return this.callbacks.has(key);\n  }\n\n  /**\n   * Get the callback tied to the given key.\n   *\n   * @param  {String}   key The identifier to get\n   * @return {Function}     The callback function\n   */\n  get(key) {\n    return this.callbacks.get(key);\n  }\n\n  /**\n   * Remove the callback tied to the given key.\n   *\n   * @param  {String} key The identifier to remove\n   * @return {Service}    The current instance\n   */\n  remove(key) {\n    this.callbacks.delete(key);\n\n    // Kill the service when we remove the last callback\n    if (this.callbacks.size === 0 && this.isInit) {\n      this.kill();\n      this.isInit = false;\n    }\n\n    return this;\n  }\n\n  /**\n   * Trigger each added callback with the given arguments.\n   *\n   * @param  {Array}   args All the arguments to apply to the callback\n   * @return {Service}      The current instance\n   */\n  trigger(...args) {\n    this.callbacks.forEach((callback) => {\n      callback(...args);\n    });\n\n    return this;\n  }\n}\n","/**\n * Simple throttling helper that limits a\n * function to only run once every {delay}ms\n *\n * @param {Function} fn    The function to throttle\n * @param {Number}   delay The delay in ms\n */\nexport default function throttle(fn, delay = 16) {\n  let lastCall = 0;\n  return (...args) => {\n    const now = new Date().getTime();\n    if (now - lastCall < delay) {\n      return false;\n    }\n    lastCall = now;\n    return fn(...args);\n  };\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked,\n * will not be triggered. The function will be called after it stops\n * being called for N milliseconds.\n *\n * @param {Function} fn    The function to call\n * @param {Number}   delay The delay in ms to wait before calling the function\n */\nexport default function debounce(fn, delay = 300) {\n  let timeout;\n  return (...args) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n}\n","/**\n * RequestAnimation frame polyfill.\n * @see  https://github.com/vuejs/vue/blob/ec78fc8b6d03e59da669be1adf4b4b5abf670a34/dist/vue.runtime.esm.js#L7355\n * @type {Function}\n */\nexport const getRaf = () =>\n  typeof window !== 'undefined' && window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout;\n\n/**\n * Execute a callback in the next frame.\n * @param  {Function} fn The callback function to execute.\n * @return {Promise}\n */\nexport default function nextFrame(fn = () => {}) {\n  const raf = getRaf();\n  return new Promise((resolve) => {\n    raf(() => raf(() => resolve(fn())));\n  });\n}\n","import Service from '../abstracts/Service';\nimport { getRaf } from '../utils/nextFrame';\n\n/**\n * Tick service\n *\n * ```\n * import { useRaf } from '@studiometa/js/services';\n * const { add, remove, props } = useRag();\n * add(id, (props) => {});\n * remove(id);\n * props();\n * ```\n */\nclass Raf extends Service {\n  /** @type {Boolean} Whether the loop is running or not. */\n  isTicking = false;\n\n  /**\n   * Start the requestAnimationFrame loop.\n   *\n   * @return {void}\n   */\n  init() {\n    const raf = getRaf();\n\n    const loop = () => {\n      this.trigger(this.props);\n\n      if (!this.isTicking) {\n        return;\n      }\n\n      raf(loop);\n    };\n\n    this.isTicking = true;\n    loop();\n  }\n\n  /**\n   * Stop the requestAnimationFrame loop.\n   *\n   * @return {void}\n   */\n  kill() {\n    this.isTicking = false;\n  }\n\n  /**\n   * Get raf props.\n   *\n   * @todo Return elapsed time / index?\n   * @type {Object}\n   */\n  get props() {\n    return {\n      time: window.performance.now(),\n    };\n  }\n}\n\nlet instance = null;\n\nexport default () => {\n  if (!instance) {\n    instance = new Raf();\n  }\n\n  const add = instance.add.bind(instance);\n  const remove = instance.remove.bind(instance);\n  const has = instance.has.bind(instance);\n  const props = () => instance.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","import Service from '../abstracts/Service';\nimport throttle from '../utils/throttle';\nimport debounce from '../utils/debounce';\nimport useRaf from './raf';\n\n/**\n * Pointer service\n *\n * ```\n * import { usePointer } from '@studiometa/js/services';\n * const { add, remove, props } = usePointer();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Pointer extends Service {\n  /** @type {Boolean} State of the pointer. */\n  isDown = false;\n\n  /** @type {Number} The y pointer position. */\n  y = window.innerHeight / 2;\n\n  /** @type {Number} The y previous pointer position. */\n  yLast = window.innerHeight / 2;\n\n  /** @type {Number} The x pointer position. */\n  x = window.innerWidth / 2;\n\n  /** @type {Number} The x previous pointer position. */\n  xLast = window.innerWidth / 2;\n\n  /**\n   * Bind the handler to the mousemove and touchmove events.\n   * Bind the up and down handler to the mousedown, mouseup, touchstart and touchend events.\n   *\n   * @return {void}\n   */\n  init() {\n    const { add, remove } = useRaf();\n    this.hasRaf = false;\n\n    const debounced = debounce((event) => {\n      this.updateValues(event);\n      remove('usePointer');\n      this.trigger(this.props);\n      this.hasRaf = false;\n    }, 50);\n\n    this.handler = throttle((event) => {\n      this.updateValues(event);\n      if (!this.hasRaf) {\n        add('usePointer', () => {\n          this.trigger(this.props);\n        });\n        this.hasRaf = true;\n      }\n      // Reset changed flags at the end of the mousemove or touchmove event\n      debounced(event);\n    }, 32).bind(this);\n\n    this.downHandler = this.downHandler.bind(this);\n    this.upHandler = this.upHandler.bind(this);\n\n    document.documentElement.addEventListener('mouseenter', this.handler, { once: true });\n    document.addEventListener('mousemove', this.handler, { passive: true });\n    document.addEventListener('touchmove', this.handler, { passive: true });\n    document.addEventListener('mousedown', this.downHandler, { passive: true });\n    document.addEventListener('touchstart', this.downHandler, { passive: true });\n    document.addEventListener('mouseup', this.upHandler, { passive: true });\n    document.addEventListener('touchend', this.upHandler, { passive: true });\n  }\n\n  /**\n   * Unbind all handlers from their bounded event.\n   *\n   * @return {void}\n   */\n  kill() {\n    document.removeEventListener('mousemove', this.handler);\n    document.removeEventListener('touchmove', this.handler);\n    document.removeEventListener('mousedown', this.downHandler);\n    document.removeEventListener('touchstart', this.downHandler);\n    document.removeEventListener('mouseup', this.upHandler);\n    document.removeEventListener('touchend', this.upHandler);\n  }\n\n  /**\n   * Handler for the pointer's down action.\n   *\n   * @return {void}\n   */\n  downHandler() {\n    this.isDown = true;\n    this.trigger(this.props);\n  }\n\n  /**\n   * Handler for the pointer's up action.\n   *\n   * @return {void}\n   */\n  upHandler() {\n    this.isDown = false;\n    this.trigger(this.props);\n  }\n\n  /**\n   * Update the pointer positions.\n   *\n   * @param  {Event} event The event object.\n   * @return {void}\n   */\n  updateValues(event) {\n    this.yLast = this.y;\n    this.xLast = this.x;\n\n    // Check pointer Y\n    // We either get data from a touch event `event.touches[0].clientY` or from\n    // a mouse event `event.clientY`.\n    if (((event.touches || [])[0] || event || {}).clientY !== this.y) {\n      this.y = ((event.touches || [])[0] || event || {}).clientY;\n    }\n\n    // Check pointer X\n    // We either get data from a touch event `event.touches[0].clientX` or from\n    // a mouse event `event.clientX`.\n    if (((event.touches || [])[0] || event || {}).clientX !== this.x) {\n      this.x = ((event.touches || [])[0] || event || {}).clientX;\n    }\n  }\n\n  /**\n   * Get the pointer props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    return {\n      isDown: this.isDown,\n      x: this.x,\n      y: this.y,\n      changed: {\n        x: this.x !== this.xLast,\n        y: this.y !== this.yLast,\n      },\n      last: {\n        x: this.xLast,\n        y: this.yLast,\n      },\n      delta: {\n        x: this.x - this.xLast,\n        y: this.y - this.yLast,\n      },\n      progress: {\n        x: this.x / window.innerWidth,\n        y: this.y / window.innerHeight,\n      },\n      max: {\n        x: window.innerWidth,\n        y: window.innerHeight,\n      },\n    };\n  }\n}\n\nlet pointer = null;\n\n/**\n * Use the pointer.\n *\n * ```js\n * import usePointer from '@studiometa/js-toolkit/services';\n * const { add, remove, props } = usePointer();\n * add('id', () => {});\n * remove('id');\n * props();\n * ```\n */\nexport default () => {\n  if (!pointer) {\n    pointer = new Pointer();\n  }\n\n  const add = pointer.add.bind(pointer);\n  const remove = pointer.remove.bind(pointer);\n  const has = pointer.has.bind(pointer);\n  const props = () => pointer.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","import Service from '../abstracts/Service';\nimport debounce from '../utils/debounce';\n\n/**\n * Resize service\n *\n * ```\n * import { useResize } from '@studiometa/js/services';\n * const { add, remove, props } = useResize();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Resize extends Service {\n  /**\n   * Bind the handler to the resize event.\n   *\n   * @return {void}\n   */\n  init() {\n    this.handler = debounce(() => {\n      this.trigger(this.props);\n    }).bind(this);\n\n    if (this.canUseResizeObserver) {\n      this.resizeObserver = new ResizeObserver(this.handler);\n      this.resizeObserver.observe(document.documentElement);\n    } else {\n      window.addEventListener('resize', this.handler);\n    }\n  }\n\n  /**\n   * Unbind the handler from the resize event.\n   *\n   * @return {void}\n   */\n  kill() {\n    if (this.canUseResizeObserver) {\n      this.resizeObserver.disconnect();\n    } else {\n      window.removeEventListener('resize', this.handler);\n    }\n    delete this.resizeObserver;\n  }\n\n  /**\n   * Get resize props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    const props = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      ratio: window.innerWidth / window.innerHeight,\n      orientation: 'square',\n    };\n\n    if (props.ratio > 1) {\n      props.orientation = 'landscape';\n    }\n\n    if (props.ratio < 1) {\n      props.orientation = 'portrait';\n    }\n\n    if (this.breakpointElement) {\n      props.breakpoint = this.breakpoint;\n      props.breakpoints = this.breakpoints;\n    }\n\n    return props;\n  }\n\n  /**\n   * The element holding the breakpoints data.\n   * @return {HTMLElement}\n   */\n  get breakpointElement() {\n    return document.querySelector('[data-breakpoint]') || null;\n  }\n\n  /**\n   * Get the current breakpoint.\n   * @return {String}\n   */\n  get breakpoint() {\n    return window\n      .getComputedStyle(this.breakpointElement, '::before')\n      .getPropertyValue('content')\n      .replace(/\"/g, '');\n  }\n\n  /**\n   * Get all breakpoints.\n   * @return {Array}\n   */\n  get breakpoints() {\n    const breakpoints = window\n      .getComputedStyle(this.breakpointElement, '::after')\n      .getPropertyValue('content')\n      .replace(/\"/g, '');\n\n    return breakpoints.split(',');\n  }\n\n  /**\n   * Test if we can use the `ResizeObserver` API.\n   * @return {Boolean}\n   */\n  get canUseResizeObserver() {\n    return typeof window.ResizeObserver !== 'undefined';\n  }\n}\n\nlet resize = null;\n\nexport default () => {\n  if (!resize) {\n    resize = new Resize();\n  }\n\n  const add = resize.add.bind(resize);\n  const remove = resize.remove.bind(resize);\n  const has = resize.has.bind(resize);\n  const props = () => resize.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","import Service from '../abstracts/Service';\nimport throttle from '../utils/throttle';\nimport debounce from '../utils/debounce';\nimport nextFrame from '../utils/nextFrame';\n\n/**\n * Scroll service\n *\n * ```\n * import { useScroll } from '@studiometa/js-toolkit/services';\n * const { add, remove, props } = useScroll();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Scroll extends Service {\n  /** @type {Number} The y scroll position. */\n  y = window.pageYOffset;\n\n  /** @type {Number} The y previous scroll position. */\n  yLast = window.pageYOffset;\n\n  /** @type {Number} The x scroll position. */\n  x = window.pageXOffset;\n\n  /** @type {Number} The x previous scroll position. */\n  xLast = window.pageXOffset;\n\n  /**\n   * Bind the handler to the scroll event.\n   *\n   * @return {void}\n   */\n  init() {\n    const debounced = debounce(() => {\n      this.trigger(this.props);\n      nextFrame(() => {\n        this.trigger(this.props);\n      });\n    }, 50);\n\n    this.handler = throttle(() => {\n      this.trigger(this.props);\n\n      // Reset changed flags at the end of the scroll event\n      debounced();\n    }, 32).bind(this);\n\n    // Fire the `scrolled` method on document scroll\n    document.addEventListener('scroll', this.handler, { passive: true });\n  }\n\n  /**\n   * Unbind the handler from the scroll event.\n   *\n   * @return {void}\n   */\n  kill() {\n    document.removeEventListener('scroll', this.handler);\n  }\n\n  /**\n   * Get scroll props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    this.yLast = this.y;\n    this.xLast = this.x;\n\n    // Check scroll Y\n    if (window.pageYOffset !== this.y) {\n      this.y = window.pageYOffset;\n    }\n\n    // Check scroll x\n    if (window.pageXOffset !== this.x) {\n      this.x = window.pageXOffset;\n    }\n\n    return {\n      x: this.x,\n      y: this.y,\n      changed: {\n        x: this.x !== this.xLast,\n        y: this.y !== this.yLast,\n      },\n      last: {\n        x: this.xLast,\n        y: this.yLast,\n      },\n      delta: {\n        x: this.x - this.xLast,\n        y: this.y - this.yLast,\n      },\n      progress: {\n        x: this.max.x === 0 ? 1 : this.x / this.max.x,\n        y: this.max.y === 0 ? 1 : this.y / this.max.y,\n      },\n      max: this.max,\n    };\n  }\n\n  /**\n   * Get scroll max values.\n   *\n   * @type {Object}\n   */\n  get max() {\n    return {\n      x: (document.scrollingElement || document.body).scrollWidth - window.innerWidth,\n      y: (document.scrollingElement || document.body).scrollHeight - window.innerHeight,\n    };\n  }\n}\n\nlet scroll = null;\n\nexport default () => {\n  if (!scroll) {\n    scroll = new Scroll();\n  }\n\n  const add = scroll.add.bind(scroll);\n  const remove = scroll.remove.bind(scroll);\n  const has = scroll.has.bind(scroll);\n  const props = () => scroll.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","export default {\n  ENTER: 13,\n  SPACE: 32,\n  TAB: 9,\n  ESC: 27,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","import Service from '../abstracts/Service';\nimport keyCodes from '../utils/keyCodes';\n\n/**\n * Scroll service\n *\n * ```\n * import { useKey } from '@studiometa/js-toolkit/services';\n * const { add, remove, props } = useKey();\n * add(key, (props) => {});\n * remove(key);\n * props();\n * ```\n */\nclass Key extends Service {\n  /** @type {Object} The event object. */\n  event = {};\n\n  /**\n   * Used to accumulate the number of times the `keydown` event has been triggered.\n   * @type {Number}\n   */\n  triggered = 0;\n\n  /** @type {Object} The previous event object. */\n  previousEvent = {};\n\n  /**\n   * Bind the handler to the keyboard event.\n   *\n   * @return {void}\n   */\n  init() {\n    this.handler = (event) => {\n      this.event = event;\n      this.trigger(this.props);\n    };\n    document.addEventListener('keydown', this.handler, { passive: false });\n    document.addEventListener('keyup', this.handler, { passive: false });\n  }\n\n  /**\n   * Unbind the handler from the keyboard event.\n   *\n   * @return {void}\n   */\n  kill() {\n    document.removeEventListener('keydown', this.handler);\n    document.removeEventListener('keyup', this.handler);\n  }\n\n  /**\n   * Get keyboard props.\n   *\n   * @type {Object}\n   */\n  get props() {\n    const keys = Object.entries(keyCodes).reduce((acc, [name, code]) => {\n      acc[name] = code === this.event.keyCode;\n      return acc;\n    }, {});\n\n    if (!this.previousEvent.type) {\n      this.triggered = 0;\n    }\n\n    if (this.event.type === 'keydown' && this.previousEvent.type === 'keydown') {\n      this.triggered += 1;\n    } else {\n      this.triggered = 1;\n    }\n\n    this.previousEvent = this.event;\n\n    return {\n      event: this.event,\n      triggered: this.triggered,\n      direction: this.event.type === 'keydown' ? 'down' : 'up',\n      isUp: this.event.type === 'keyup',\n      isDown: this.event.type === 'keydown',\n      ...keys,\n    };\n  }\n}\n\nlet key = null;\n\nexport default () => {\n  if (!key) {\n    key = new Key();\n  }\n\n  const add = key.add.bind(key);\n  const remove = key.remove.bind(key);\n  const has = key.has.bind(key);\n  const props = () => key.props;\n\n  return {\n    add,\n    remove,\n    has,\n    props,\n  };\n};\n","import usePointer from '../../services/pointer';\nimport useRaf from '../../services/raf';\nimport useResize from '../../services/resize';\nimport useScroll from '../../services/scroll';\nimport useKey from '../../services/key';\nimport { hasMethod, callMethod } from './utils';\n\n/**\n * Init the given service and bind it to the given instance.\n *\n * @param  {Base}     instance The Base instance.\n * @param  {String}   method   The instance to test for binding\n * @param  {Function} service  The service `use...` function\n * @return {Function}          A function to unbind the service\n */\nfunction initService(instance, method, service) {\n  if (!hasMethod(instance, method)) {\n    return () => {};\n  }\n\n  const { add, remove } = service();\n  add(instance.$id, (...args) => {\n    callMethod(instance, method, ...args);\n  });\n\n  return () => remove(instance.$id);\n}\n\n/**\n * Use the services.\n * @param  {Base} instance A Base class instance.\n * @return {Array}         A list of unbind methods.\n */\nexport default function bindServices(instance) {\n  const unbindMethods = [\n    initService(instance, 'scrolled', useScroll),\n    initService(instance, 'resized', useResize),\n    initService(instance, 'ticked', useRaf),\n    initService(instance, 'moved', usePointer),\n    initService(instance, 'keyed', useKey),\n  ];\n\n  // Fire the `loaded` method on window load\n  // @todo remove this? or move it elsewhere?\n  if (hasMethod(instance, 'loaded')) {\n    const loadedHandler = (event) => {\n      callMethod(instance, 'loaded', { event });\n    };\n    window.addEventListener('load', loadedHandler);\n    unbindMethods.push(() => {\n      window.removeEventListener('load', loadedHandler);\n    });\n  }\n\n  return unbindMethods;\n}\n","import getAllProperties from '../../utils/object/getAllProperties';\nimport { debug } from './utils';\n\n/**\n * Bind event handler methods to the root HTML element.\n *\n * @param  {Base}  instance     A Base instance.\n * @param  {Array} eventMethods A list of methods to bind.\n * @return {Array}              A list of unbind functions.\n */\nfunction bindRootEvents(instance, eventMethods) {\n  return eventMethods.map((eventMethod) => {\n    const eventName = eventMethod.replace(/^on/, '').toLowerCase();\n\n    const handler = (...args) => {\n      debug(instance, eventMethod, instance.$el, ...args);\n      instance[eventMethod](...args);\n    };\n\n    instance.$el.addEventListener(eventName, handler);\n\n    return () => {\n      instance.$el.removeEventListener(eventName, handler);\n    };\n  });\n}\n\n/**\n * Bind event handler methods to refs HTML element.\n *\n * @param  {Base}  instance     A Base instance.\n * @param  {Array} eventMethods A list of methods to bind.\n * @return {Array}              A list of unbind functions.\n */\nfunction bindRefsEvents(instance, eventMethods) {\n  const unbindMethods = [];\n\n  Object.entries(instance.$refs).forEach(([refName, $refOrRefs]) => {\n    const $refs = Array.isArray($refOrRefs) ? $refOrRefs : [$refOrRefs];\n    const refEventMethod = `on${refName.replace(/^\\w/, (c) => c.toUpperCase())}`;\n\n    eventMethods\n      .filter((eventMethod) => eventMethod.startsWith(refEventMethod))\n      .forEach((eventMethod) => {\n        $refs.forEach(($ref, index) => {\n          const eventName = eventMethod.replace(refEventMethod, '').toLowerCase();\n          const handler = (...args) => {\n            debug(instance, eventMethod, $ref, ...args, index);\n            instance[eventMethod](...args, index);\n          };\n\n          debug(instance, 'binding ref event', refName, eventName);\n\n          if ($ref.constructor && $ref.constructor.__isBase__) {\n            // eslint-disable-next-line no-param-reassign\n            $ref = $ref.$el;\n          }\n\n          $ref.addEventListener(eventName, handler);\n          const unbindMethod = () => {\n            debug(instance, 'unbinding ref event', eventMethods);\n            $ref.removeEventListener(eventName, handler);\n          };\n\n          unbindMethods.push(unbindMethod);\n        });\n      });\n  });\n\n  return unbindMethods;\n}\n\n/**\n * Bind event handler methods to children Base instance.\n * @param  {Base}  instance     A Base instance.\n * @param  {Array} eventMethods A list of methods to bind.\n * @return {Array}              A list of unbind functions.\n */\nfunction bindChildrenEvents(instance, eventMethods) {\n  const unbindMethods = [];\n\n  Object.entries(instance.$children).forEach(([childName, $children]) => {\n    const childEventMethod = `on${childName.replace(/^\\w/, (c) => c.toUpperCase())}`;\n\n    eventMethods\n      .filter((eventMethod) => eventMethod.startsWith(childEventMethod))\n      .forEach((eventMethod) => {\n        $children.forEach(($child, index) => {\n          const eventName = eventMethod.replace(childEventMethod, '').toLowerCase();\n          const handler = (...args) => {\n            debug(instance, eventMethod, $child, ...args, index);\n            instance[eventMethod](...args, index);\n          };\n\n          debug(instance, 'binding child event', childName, eventName);\n\n          const unbindMethod = $child.$on(eventName, handler);\n          unbindMethods.push(() => {\n            debug(instance, 'unbinding child event', childName, eventName);\n            unbindMethod();\n          });\n        });\n      });\n  });\n\n  return unbindMethods;\n}\n\n/**\n * Bind ref and children component's events to their corresponding method.\n *\n * @param  {Base} instance  A Base instance.\n * @return {Array}          A list of methods to unbind the events.\n */\nexport default function bindEvents(instance) {\n  const ROOT_EVENT_REGEX = /^on[A-Z][a-z]+$/;\n  const REFS_CHILDREN_EVENT_REGEX = /^on([A-Z][a-z]+)([A-Z][a-z]+)+$/;\n\n  // Get all event methods\n  const eventMethods = getAllProperties(instance).reduce(\n    (acc, [name]) => {\n      // Testing camelCase with one word: onEvent.\n      if (ROOT_EVENT_REGEX.test(name)) {\n        acc.root.push(name);\n        return acc;\n      }\n\n      // Testing camelCase with more than two words: onRefEvent.\n      if (REFS_CHILDREN_EVENT_REGEX.test(name)) {\n        acc.refsOrChildren.push(name);\n      }\n\n      return acc;\n    },\n    { root: [], refsOrChildren: [] }\n  );\n\n  const unbindMethods = [\n    ...bindRootEvents(instance, eventMethods.root),\n    ...bindRefsEvents(instance, eventMethods.refsOrChildren),\n    ...bindChildrenEvents(instance, eventMethods.refsOrChildren),\n  ];\n\n  return unbindMethods;\n}\n","import nanoid from 'nanoid/non-secure';\nimport autoBind from '../../utils/object/autoBind';\nimport EventManager from '../EventManager';\nimport { callMethod, debug } from './utils';\nimport { getChildren } from './children';\nimport { getOptions, setOptions } from './options';\nimport { getRefs } from './refs';\nimport { mountComponents, destroyComponents } from './components';\nimport bindServices from './services';\nimport bindEvents from './events';\n\n/**\n * Page lifecycle class\n *\n * @method mounted   Fired when the class is instantiated\n * @method loaded    Fired on the window's load event\n * @method ticked    Fired each frame with `requestAnimationFrame`\n * @method resized   Fired when the window is resized (`resize` event)\n * @method moved     Fired when the pointer has moved (`touchmove` and `mousemove` events)\n * @method scrolled  Fired with debounce when the document is scrolled (`scroll` event)\n * @method destroyed Fired when the window is being unloaded (`unload` event)\n */\nexport default class Base extends EventManager {\n  /**\n   * Get the component's refs.\n   * @return {Object}\n   */\n  get $refs() {\n    return getRefs(this, this.$el);\n  }\n\n  /**\n   * Get the component's children components.\n   * @return {Object}\n   */\n  get $children() {\n    return getChildren(this, this.$el, this.config.components || {});\n  }\n\n  /**\n   * Get the component's merged config and options.\n   * @return {Object}\n   */\n  get $options() {\n    return getOptions(this, this.$el, this.config);\n  }\n\n  /**\n   * Set the components option.\n   * @param  {Object} value The new options values to merge with the old ones.\n   * @return {void}\n   */\n  set $options(newOptions) {\n    setOptions(this, this.$el, newOptions);\n  }\n\n  /**\n   * Class constructor where all the magic takes place.\n   *\n   * @param  {HTMLElement} element The component's root element.\n   * @return {Base}                A Base instance.\n   */\n  constructor(element) {\n    super();\n\n    if (!this.config) {\n      throw new Error('The `config` getter must be defined.');\n    }\n\n    if (!this.config.name) {\n      throw new Error('The `config.name` property is required.');\n    }\n\n    if (!element) {\n      throw new Error('The root element must be defined.');\n    }\n\n    Object.defineProperties(this, {\n      $id: {\n        value: `${this.config.name}-${nanoid()}`,\n      },\n      $isMounted: {\n        value: false,\n        writable: true,\n      },\n      $el: {\n        value: element,\n      },\n    });\n\n    if (!this.$el.__base__) {\n      Object.defineProperty(this.$el, '__base__', {\n        get: () => this,\n        configurable: true,\n      });\n    }\n\n    // Autobind all methods to the instance\n    autoBind(this, {\n      exclude: [\n        '$mount',\n        '$destroy',\n        '$log',\n        '$on',\n        '$once',\n        '$off',\n        '$emit',\n        'mounted',\n        'loaded',\n        'ticked',\n        'resized',\n        'moved',\n        'keyed',\n        'scrolled',\n        'destroyed',\n        ...(this._excludeFromAutoBind || []),\n      ],\n    });\n\n    let unbindMethods = [];\n    this.$on('mounted', () => {\n      mountComponents(this);\n      unbindMethods = [...bindServices(this), ...bindEvents(this)];\n      this.$isMounted = true;\n    });\n\n    this.$on('updated', () => {\n      unbindMethods.forEach((method) => method());\n      mountComponents(this);\n      unbindMethods = [...bindServices(this), ...bindEvents(this)];\n    });\n\n    this.$on('destroyed', () => {\n      this.$isMounted = false;\n      unbindMethods.forEach((method) => method());\n      destroyComponents(this);\n    });\n\n    // Mount class which are not used as another component's child.\n    if (!this.__isChild__) {\n      this.$mount();\n      Object.defineProperty(this, '$parent', { get: () => null });\n    }\n\n    debug(this, 'constructor', this);\n    return this;\n  }\n\n  /**\n   * Small helper to log stuff.\n   *\n   * @param  {...any} args The arguments passed to the method\n   * @return {void}\n   */\n  $log(...args) {\n    return this.$options.log\n      ? window.console.log.apply(window, [this.config.name, ...args])\n      : () => {};\n  }\n\n  /**\n   * Trigger the `mounted` callback.\n   */\n  $mount() {\n    debug(this, '$mount');\n    callMethod(this, 'mounted');\n    return this;\n  }\n\n  /**\n   * Update the instance children.\n   */\n  $update() {\n    debug(this, '$update');\n    callMethod(this, 'updated');\n    return this;\n  }\n\n  /**\n   * Trigger the `destroyed` callback.\n   */\n  $destroy() {\n    debug(this, '$destroy');\n    callMethod(this, 'destroyed');\n    return this;\n  }\n\n  /**\n   * Terminate a child instance when it is not needed anymore.\n   * @return {void}\n   */\n  $terminate() {\n    debug(this, '$terminate');\n\n    // First, destroy the component.\n    this.$destroy();\n\n    // Execute the `terminated` hook if it exists\n    callMethod(this, 'terminated');\n\n    // Delete the reference to the instance\n    delete this.$el.__base__;\n\n    // And update its status to prevent re-instantiation when accessing the\n    // parent's `$children` property\n    Object.defineProperty(this.$el, '__base__', {\n      value: 'terminated',\n      configurable: false,\n      writable: false,\n    });\n  }\n}\n\nBase.__isBase__ = true;\n","/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_events\"] }] */\n/**\n * Event management class.\n *\n * @method $on    Bind a given function to the given event.\n * @method $off   Unbind the given function from the given event.\n * @method $once  Bind a given function to the given event once.\n * @method $emit  Emit an event with custom props.\n */\nexport default class EventManager {\n  /** @type {Object} An object to store the events */\n  _events = {};\n\n  /**\n   * Bind a listener function to an event.\n   *\n   * @param  {String}   event    Name of the event.\n   * @param  {String}   listener Function to be called.\n   * @return {Function}          A function to unbind the listener.\n   */\n  $on(event, listener) {\n    if (!Array.isArray(this._events[event])) {\n      this._events[event] = [];\n    }\n    this._events[event].push(listener);\n\n    return () => {\n      this.$off(event, listener);\n    };\n  }\n\n  /**\n   * Unbind a listener function from an event.\n   *\n   * @param  {String}       event    Name of the event.\n   * @param  {String}       listener Function to be removed.\n   * @return {EventManager}          The current instance.\n   */\n  $off(event, listener) {\n    // If no event specified, we remove them all.\n    if (!event) {\n      this._events = {};\n      return this;\n    }\n    // If no listener have been specified, we remove all\n    // the listeners for the given event.\n    if (!listener) {\n      this._events[event] = [];\n      return this;\n    }\n\n    const index = this._events[event].indexOf(listener);\n\n    if (index > -1) {\n      this._events[event].splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Emits an event.\n   *\n   * @param  {String}       event Name of the event.\n   * @param  {Array}        args  The arguments to apply to the functions bound to this event.\n   * @return {EventManager}       The current instance.\n   */\n  $emit(event, ...args) {\n    if (!Array.isArray(this._events[event])) {\n      return this;\n    }\n\n    this._events[event].forEach((listener) => {\n      listener.apply(this, args);\n    });\n    return this;\n  }\n\n  /**\n   * Bind a listener function to an event for one execution only.\n   *\n   * @param  {String}       event    Name of the event.\n   * @param  {String}       listener Function to be called.\n   * @return {EventManager}          The current instance.\n   */\n  $once(event, listener) {\n    const instance = this;\n    this.$on(event, function handler(...args) {\n      instance.$off(event, handler);\n      listener.apply(instance, args);\n    });\n    return this;\n  }\n}\n","/**\n * Get all refs of a component.\n *\n * @param  {Base}        instance The component's instance.\n * @param  {HTMLElement} element  The component's root element.\n * @return {Object}               Return an object containing all the component's refs.\n */\nexport function getRefs(instance, element) {\n  const allRefs = Array.from(element.querySelectorAll(`[data-ref]`));\n  const childrenRefs = Array.from(element.querySelectorAll(`:scope [data-component] [data-ref]`));\n  const elements = allRefs.filter((ref) => !childrenRefs.includes(ref));\n\n  const refs = elements.reduce(($refs, $ref) => {\n    let refName = $ref.dataset.ref;\n    const $realRef = $ref.__base__ ? $ref.__base__ : $ref;\n\n    if (refName.endsWith('[]')) {\n      refName = refName.replace(/\\[\\]$/, '');\n\n      if (!$refs[refName]) {\n        $refs[refName] = [];\n      }\n    }\n\n    if ($refs[refName]) {\n      if (Array.isArray($refs[refName])) {\n        $refs[refName].push($realRef);\n      } else {\n        $refs[refName] = [$refs[refName], $realRef];\n      }\n    } else {\n      $refs[refName] = $realRef;\n    }\n\n    return $refs;\n  }, {});\n\n  instance.$emit('get:refs', refs);\n  return refs;\n}\n\nexport default {\n  getRefs,\n};\n","/**\n * Get a child component.\n *\n * @param  {HTMLElement}  el             The root element of the child component.\n * @param  {Base|Promise} ComponentClass A Base class or a Promise for async components.\n * @param  {Base}         parent         The parent component instance.\n * @return {Base|Promise}                A Base instance or a Promise resolving to a Base instance.\n */\nfunction getChild(el, ComponentClass, parent) {\n  // Return existing instance if it exists\n  if (el.__base__) {\n    return el.__base__;\n  }\n\n  // Return a new instance if the component class is a child of the Base class\n  if (ComponentClass.__isBase__) {\n    Object.defineProperty(ComponentClass.prototype, '__isChild__', { value: true });\n    const child = new ComponentClass(el);\n    Object.defineProperty(child, '$parent', { get: () => parent });\n    return child;\n  }\n\n  // Resolve async components\n  const asyncComponent = ComponentClass().then((module) => {\n    const ResolvedClass = module.default ? module.default : module;\n    Object.defineProperty(ResolvedClass.prototype, '__isChild__', { value: true });\n    const child = new ResolvedClass(el);\n    Object.defineProperty(child, '$parent', { get: () => parent });\n    return child;\n  });\n\n  asyncComponent.__isAsync__ = true;\n\n  return asyncComponent;\n}\n\n/**\n *\n * @param  {Base}        instance   The component's instance.\n * @param  {HTMLElement} element    The component's root element\n * @param  {Object}      components The children components' classes\n * @return {null|Object}            Returns `null` if no child components are defined or an object of all child component instances\n */\nexport function getChildren(instance, element, components) {\n  const children = Object.entries(components).reduce((acc, [name, ComponentClass]) => {\n    const selector = `[data-component=\"${name}\"]`;\n    let elements = Array.from(element.querySelectorAll(selector));\n\n    // If no child component found with the default selector, the name must be a DOM selector\n    if (elements.length === 0) {\n      elements = Array.from(element.querySelectorAll(name));\n    }\n\n    if (elements.length === 0) {\n      return acc;\n    }\n\n    acc[name] = elements\n      .map((el) => getChild(el, ComponentClass, instance))\n      // Filter out terminated children\n      .filter((el) => el !== 'terminated');\n\n    if (acc[name].length === 0) {\n      delete acc[name];\n    }\n\n    return acc;\n  }, {});\n\n  instance.$emit('get:children', children);\n  return children;\n}\n\nexport default {\n  getChildren,\n};\n","import merge from 'deepmerge';\n\n/**\n * Get a component's options.\n *\n * @param  {Base}        instance The component's instance.\n * @param  {HTMLElement} element  The component's root element.\n * @param  {Object}      config   The component's default config.\n * @return {Object}               The component's merged options.\n */\nexport function getOptions(instance, element, config) {\n  let options = {};\n  if (element.dataset.options) {\n    try {\n      options = JSON.parse(element.dataset.options);\n    } catch (err) {\n      throw new Error('Can not parse the `data-options` attribute. Is it a valid JSON string?');\n    }\n  }\n\n  options = merge(config, options);\n  instance.$emit('get:options', options);\n  return options;\n}\n\n/**\n * Set a component instance options.\n *\n * @param {Base}        instance   The component's instance.\n * @param {HTMLElement} element    The component's root element.\n * @param {Object}      newOptions The new options object.\n */\nexport function setOptions(instance, element, newOptions) {\n  let options = {};\n  if (element.dataset.options) {\n    try {\n      options = JSON.parse(element.dataset.options);\n    } catch (err) {\n      throw new Error('Can not parse the `data-options` attribute. Is it a valid JSON string?');\n    }\n  }\n  options = merge(options, newOptions);\n  element.dataset.options = JSON.stringify(options);\n}\n\nexport default {\n  getOptions,\n  setOptions,\n};\n","import getAllProperties from './getAllProperties';\n\n/**\n * Auto-bind methods to an instance.\n *\n * @param  {Object}               instance        The instance.\n * @param  {Array<String|RegExp>} options.include Methods to include.\n * @param  {Array<String|RegExp>} options.exclude Methods to exclude.\n * @return {Object}                               The instance.\n */\nexport default function autoBind(instance, { include, exclude } = {}) {\n  const filter = (key) => {\n    const match = (pattern) => (typeof pattern === 'string' ? key === pattern : pattern.test(key));\n\n    if (include) {\n      return include.some(match);\n    }\n\n    if (exclude) {\n      return !exclude.some(match);\n    }\n\n    return true;\n  };\n\n  getAllProperties(instance)\n    .filter(([key]) => key !== 'constructor' && filter(key))\n    .forEach(([key, object]) => {\n      const descriptor = Object.getOwnPropertyDescriptor(object, key);\n      if (descriptor && typeof descriptor.value === 'function') {\n        instance[key] = instance[key].bind(instance);\n      }\n    });\n\n  return instance;\n}\n"],"names":["url","i","toString","toUpperCase","size","id","Math","random","getAllProperties","object","props","proto","Object","getPrototypeOf","prototype","getOwnPropertyNames","map","name","reduce","acc","val","debug","instance","args","$options","window","console","log","apply","config","hasMethod","obj","callMethod","method","$isMounted","$emit","call","isMergeableObject","value","isNonNullObject","stringValue","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","Array","isArray","defaultArrayMerge","target","source","concat","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","property","_","arrayMerge","sourceIsArray","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","mergeObject","all","array","Error","prev","next","mountComponent","component","__isAsync__","then","$mount","mountComponents","$children","values","$child","destroyComponent","$destroy","Service","constructor","this","callbacks","Map","isInit","init","kill","add","callback","has","set","get","remove","delete","trigger","throttle","fn","delay","lastCall","now","Date","getTime","debounce","timeout","clearTimeout","setTimeout","getRaf","requestAnimationFrame","bind","Raf","isTicking","raf","loop","time","performance","Pointer","isDown","y","innerHeight","yLast","x","innerWidth","xLast","useRaf","hasRaf","debounced","event","updateValues","handler","downHandler","upHandler","document","documentElement","addEventListener","once","passive","removeEventListener","touches","clientY","clientX","changed","last","delta","progress","max","pointer","Resize","canUseResizeObserver","resizeObserver","ResizeObserver","observe","disconnect","width","height","ratio","orientation","breakpointElement","breakpoint","breakpoints","querySelector","getComputedStyle","getPropertyValue","replace","split","resize","Scroll","pageYOffset","pageXOffset","Promise","resolve","nextFrame","scrollingElement","body","scrollWidth","scrollHeight","scroll","ENTER","SPACE","TAB","ESC","LEFT","UP","RIGHT","DOWN","Key","triggered","previousEvent","entries","keyCodes","code","keyCode","type","direction","isUp","initService","service","$id","bindServices","unbindMethods","useScroll","useResize","usePointer","useKey","loadedHandler","push","bindRootEvents","eventMethods","eventMethod","eventName","toLowerCase","$el","bindRefsEvents","$refs","refName","$refOrRefs","refEventMethod","c","startsWith","$ref","index","__isBase__","bindChildrenEvents","childName","childEventMethod","unbindMethod","$on","bindEvents","ROOT_EVENT_REGEX","REFS_CHILDREN_EVENT_REGEX","test","root","refsOrChildren","Base","_events","listener","$off","indexOf","splice","$once","allRefs","from","querySelectorAll","childrenRefs","refs","ref","includes","dataset","$realRef","__base__","endsWith","getRefs","components","children","ComponentClass","elements","length","el","parent","defineProperty","child","asyncComponent","module","ResolvedClass","default","getChild","getChildren","JSON","parse","err","merge","getOptions","newOptions","stringify","setOptions","super","defineProperties","nanoid","writable","configurable","include","exclude","match","pattern","some","descriptor","getOwnPropertyDescriptor","autoBind","_excludeFromAutoBind","destroyComponents","__isChild__","$log","$update","$terminate"],"mappings":"AAMA,IAHA,IAAIA,EAAM,KAENC,EAAI,GACDA,KAGLD,GAAOC,EAAEC,SAAS,IAIpB,IADAD,EAAI,GACGA,IAAM,IACXD,GAAOC,EAAEC,SAAS,IAAIC,cAkBxB,MAAiB,SAAUC,GACzB,IAAIC,EAAK,GAGT,IAFAJ,EAAIG,GAAQ,GAELH,KAELI,GAAML,EAAoB,GAAhBM,KAAKC,SAAgB,GAEjC,OAAOF,YCjCeG,EAAiBC,EAAQC,EAAQ,IACvD,MAAMC,EAAQC,OAAOC,eAAeJ,GAEpC,OAAIE,IAAUC,OAAOE,UACZJ,EAGFF,EACLG,EACAC,OAAOG,oBAAoBJ,GACxBK,IAAKC,GAAS,CAACA,EAAMN,IACrBO,OAAO,CAACC,EAAKC,IAAQ,IAAID,EAAKC,GAAMV,aCZ3BW,EAAMC,KAAaC,GACjC,OAAOD,EAASE,SAASH,MACrBI,OAAOC,QAAQC,IAAIC,MAAMH,OAAQ,CAACH,EAASO,OAAOZ,QAASM,IAC3D,gBAUUO,EAAUC,EAAKd,GAC7B,MAA4B,mBAAdc,EAAId,GASpB,SAAgBe,EAAWV,EAAUW,KAAWV,GAK9C,OAJAF,EAAMC,EAAU,aAAcW,KAAWV,GAK3B,cAAXU,IAA2BX,EAASY,YACzB,YAAXD,GAAwBX,EAASY,YAElCb,EAAMC,EAAU,MAAOW,EAAQ,uDACxBX,IAGTA,EAASa,MAAMF,KAAWV,GAGrBO,EAAUR,EAAUW,IAIzBX,EAASW,GAAQG,KAAKd,KAAaC,GACnCF,EAAMC,EAAUW,EAAQX,KAAaC,GAE9BD,GANEA,GC5CX,IAAIe,EAAoB,SAA2BC,GAClD,OAID,SAAyBA,GACxB,QAASA,GAA0B,iBAAVA,EALlBC,CAAgBD,KAQxB,SAAmBA,GAClB,IAAIE,EAAc5B,OAAOE,UAAUZ,SAASkC,KAAKE,GAEjD,MAAuB,oBAAhBE,GACa,kBAAhBA,GAQL,SAAwBF,GACvB,OAAOA,EAAMG,WAAaC,EARtBC,CAAeL,GAZdM,CAAUN,IAiBZI,EADiC,mBAAXG,QAAyBA,OAAOC,IAClBD,OAAOC,IAAI,iBAAmB,MAUtE,SAASC,EAA8BT,EAAOU,GAC7C,OAA0B,IAAlBA,EAAQC,OAAmBD,EAAQX,kBAAkBC,GAC1DY,EALIC,MAAMC,QAKYd,GALG,GAAK,GAKAA,EAAOU,GACrCV,EAGJ,SAASe,EAAkBC,EAAQC,EAAQP,GAC1C,OAAOM,EAAOE,OAAOD,GAAQvC,IAAI,SAASyC,GACzC,OAAOV,EAA8BU,EAAST,KAoBhD,SAASU,EAAQJ,GAChB,OAAO1C,OAAO+C,KAAKL,GAAQE,OAT5B,SAAyCF,GACxC,OAAO1C,OAAOgD,sBACXhD,OAAOgD,sBAAsBN,GAAQO,OAAO,SAASC,GACtD,OAAOR,EAAOS,qBAAqBD,KAElC,GAI+BE,CAAgCV,IAGnE,SAASW,EAAmBxD,EAAQyD,GACnC,IACC,OAAOA,KAAYzD,EAClB,MAAM0D,GACP,OAAO,GAgCT,SAASjB,EAAUI,EAAQC,EAAQP,IAClCA,EAAUA,GAAW,IACboB,WAAapB,EAAQoB,YAAcf,EAC3CL,EAAQX,kBAAoBW,EAAQX,mBAAqBA,EAGzDW,EAAQD,8BAAgCA,EAExC,IAAIsB,EAAgBlB,MAAMC,QAAQG,GAIlC,OAFgCc,IADZlB,MAAMC,QAAQE,GAKvBe,EACHrB,EAAQoB,WAAWd,EAAQC,EAAQP,GApC5C,SAAqBM,EAAQC,EAAQP,GACpC,IAAIsB,EAAc,GAiBlB,OAhBItB,EAAQX,kBAAkBiB,IAC7BI,EAAQJ,GAAQiB,QAAQ,SAASC,GAChCF,EAAYE,GAAOzB,EAA8BO,EAAOkB,GAAMxB,KAGhEU,EAAQH,GAAQgB,QAAQ,SAASC,IAblC,SAA0BlB,EAAQkB,GACjC,OAAOP,EAAmBX,EAAQkB,MAC5B5D,OAAO6D,eAAerC,KAAKkB,EAAQkB,IACpC5D,OAAOmD,qBAAqB3B,KAAKkB,EAAQkB,KAWzCE,CAAiBpB,EAAQkB,KAK5BF,EAAYE,GADTP,EAAmBX,EAAQkB,IAAQxB,EAAQX,kBAAkBkB,EAAOiB,IA/C1E,SAA0BA,EAAKxB,GAC9B,IAAKA,EAAQ2B,YACZ,OAAOzB,EAER,IAAIyB,EAAc3B,EAAQ2B,YAAYH,GACtC,MAA8B,mBAAhBG,EAA6BA,EAAczB,EA2CpC0B,CAAiBJ,EAAKxB,EAAtB4B,CAA+BtB,EAAOkB,GAAMjB,EAAOiB,GAAMxB,GAEzDD,EAA8BQ,EAAOiB,GAAMxB,MAGzDsB,EAoBCO,CAAYvB,EAAQC,EAAQP,GAJ5BD,EAA8BQ,EAAQP,GAQ/CE,EAAU4B,IAAM,SAAsBC,EAAO/B,GAC5C,IAAKG,MAAMC,QAAQ2B,GAClB,MAAM,IAAIC,MAAM,qCAGjB,OAAOD,EAAM7D,OAAO,SAAS+D,EAAMC,GAClC,OAAOhC,EAAU+B,EAAMC,EAAMlC,IAC3B,KAGJ,MAAkBE,EC1HlB,SAASiC,EAAeC,GAClBA,EAAUC,YACZD,EAAUE,KAAMhE,GAAaA,EAASiE,UAEtCH,EAAUG,SAUd,SAAgBC,EAAgBlE,GACzBA,EAASmE,YAIdpE,EAAMC,EAAU,kBAAmBA,EAASmE,WAE5C7E,OAAO8E,OAAOpE,EAASmE,WAAWlB,QAASoB,IACzCA,EAAOpB,QAAQY,MAUnB,SAASS,EAAiBR,GACpBA,EAAUC,YACZD,EAAUE,KAAMhE,GAAaA,EAASuE,YAEtCT,EAAUS,iBCzCOC,EAMnBC,cACEC,KAAKC,UAAY,IAAIC,IACrBF,KAAKG,QAAS,EAQhBzF,YACE,UAAUsE,MAAM,2CASlBoB,OACE,UAAUpB,MAAM,0CASlBqB,OACE,UAAUrB,MAAM,0CAUlBsB,IAAI9B,EAAK+B,GACP,GAAIP,KAAKQ,IAAIhC,GACX,UAAUQ,MAAO,6BAA4BR,oCAU/C,OAN4B,IAAxBwB,KAAKC,UAAU7F,MAAe4F,KAAKG,SACrCH,KAAKI,OACLJ,KAAKG,QAAS,GAGhBH,KAAKC,UAAUQ,IAAIjC,EAAK+B,QAU1BC,IAAIhC,GACF,YAAYyB,UAAUO,IAAIhC,GAS5BkC,IAAIlC,GACF,YAAYyB,UAAUS,IAAIlC,GAS5BmC,OAAOnC,GASL,OARAwB,KAAKC,UAAUW,OAAOpC,GAGM,IAAxBwB,KAAKC,UAAU7F,MAAc4F,KAAKG,SACpCH,KAAKK,OACLL,KAAKG,QAAS,QAYlBU,WAAWtF,GAKT,OAJAyE,KAAKC,UAAU1B,QAASgC,IACtBA,KAAYhF,oBCxGMuF,EAASC,EAAIC,EAAQ,IAC3C,IAAIC,EAAW,EACf,MAAO,IAAI1F,KACT,MAAM2F,GAAM,IAAIC,MAAOC,UACvB,QAAIF,EAAMD,EAAWD,KAGrBC,EAAWC,EACJH,KAAMxF,cCPO8F,EAASN,EAAIC,EAAQ,KAC3C,IAAIM,EACJ,MAAO,IAAI/F,KACTgG,aAAaD,GACbA,EAAUE,WAAW,KACnBT,KAAMxF,IACLyF,UCTMS,EAAS,IACF,oBAAXhG,QAA0BA,OAAOiG,sBACpCjG,OAAOiG,sBAAsBC,KAAKlG,QAClC+F,WCMN,MAAMI,UAAY9B,qCAEhB+B,WAAY,EAOZzB,OACE,MAAM0B,EAAML,IAENM,EAAO,KACX/B,KAAKa,QAAQb,KAAKtF,OAEbsF,KAAK6B,WAIVC,EAAIC,IAGN/B,KAAK6B,WAAY,EACjBE,IAQF1B,OACEL,KAAK6B,WAAY,EASnBnH,YACE,MAAO,CACLsH,KAAMvG,OAAOwG,YAAYf,QAK/B,IAAI5F,EAAW,KAEf,WACOA,IACHA,EAAW,IAAIsG,GAQV,CACLtB,IANUhF,EAASgF,IAAIqB,KAAKrG,GAO5BqF,OANarF,EAASqF,OAAOgB,KAAKrG,GAOlCkF,IANUlF,EAASkF,IAAImB,KAAKrG,GAO5BZ,MANY,IAAMY,EAASZ,QCxD/B,MAAMwH,UAAgBpC,qCAEpBqC,QAAS,OAGTC,EAAI3G,OAAO4G,YAAc,OAGzBC,MAAQ7G,OAAO4G,YAAc,OAG7BE,EAAI9G,OAAO+G,WAAa,OAGxBC,MAAQhH,OAAO+G,WAAa,EAQ5BpC,OACE,MAAME,IAAEA,EAAFK,OAAOA,GAAW+B,IACxB1C,KAAK2C,QAAS,EAEd,MAAMC,EAAYvB,EAAUwB,IAC1B7C,KAAK8C,aAAaD,GAClBlC,EAAO,cACPX,KAAKa,QAAQb,KAAKtF,OAClBsF,KAAK2C,QAAS,GACb,IAEH3C,KAAK+C,QAAUjC,EAAU+B,IACvB7C,KAAK8C,aAAaD,GACb7C,KAAK2C,SACRrC,EAAI,aAAc,KAChBN,KAAKa,QAAQb,KAAKtF,SAEpBsF,KAAK2C,QAAS,GAGhBC,EAAUC,IACT,IAAIlB,KAAK3B,MAEZA,KAAKgD,YAAchD,KAAKgD,YAAYrB,KAAK3B,MACzCA,KAAKiD,UAAYjD,KAAKiD,UAAUtB,KAAK3B,MAErCkD,SAASC,gBAAgBC,iBAAiB,aAAcpD,KAAK+C,QAAS,CAAEM,MAAM,IAC9EH,SAASE,iBAAiB,YAAapD,KAAK+C,QAAS,CAAEO,SAAS,IAChEJ,SAASE,iBAAiB,YAAapD,KAAK+C,QAAS,CAAEO,SAAS,IAChEJ,SAASE,iBAAiB,YAAapD,KAAKgD,YAAa,CAAEM,SAAS,IACpEJ,SAASE,iBAAiB,aAAcpD,KAAKgD,YAAa,CAAEM,SAAS,IACrEJ,SAASE,iBAAiB,UAAWpD,KAAKiD,UAAW,CAAEK,SAAS,IAChEJ,SAASE,iBAAiB,WAAYpD,KAAKiD,UAAW,CAAEK,SAAS,IAQnEjD,OACE6C,SAASK,oBAAoB,YAAavD,KAAK+C,SAC/CG,SAASK,oBAAoB,YAAavD,KAAK+C,SAC/CG,SAASK,oBAAoB,YAAavD,KAAKgD,aAC/CE,SAASK,oBAAoB,aAAcvD,KAAKgD,aAChDE,SAASK,oBAAoB,UAAWvD,KAAKiD,WAC7CC,SAASK,oBAAoB,WAAYvD,KAAKiD,WAQhDD,cACEhD,KAAKmC,QAAS,EACdnC,KAAKa,QAAQb,KAAKtF,OAQpBuI,YACEjD,KAAKmC,QAAS,EACdnC,KAAKa,QAAQb,KAAKtF,OASpBoI,aAAaD,GACX7C,KAAKsC,MAAQtC,KAAKoC,EAClBpC,KAAKyC,MAAQzC,KAAKuC,IAKZM,EAAMW,SAAW,IAAI,IAAMX,GAAS,IAAIY,UAAYzD,KAAKoC,IAC7DpC,KAAKoC,IAAMS,EAAMW,SAAW,IAAI,IAAMX,GAAS,IAAIY,WAM/CZ,EAAMW,SAAW,IAAI,IAAMX,GAAS,IAAIa,UAAY1D,KAAKuC,IAC7DvC,KAAKuC,IAAMM,EAAMW,SAAW,IAAI,IAAMX,GAAS,IAAIa,SASvDhJ,YACE,MAAO,CACLyH,OAAQnC,KAAKmC,OACbI,EAAGvC,KAAKuC,EACRH,EAAGpC,KAAKoC,EACRuB,QAAS,CACPpB,EAAGvC,KAAKuC,IAAMvC,KAAKyC,MACnBL,EAAGpC,KAAKoC,IAAMpC,KAAKsC,OAErBsB,KAAM,CACJrB,EAAGvC,KAAKyC,MACRL,EAAGpC,KAAKsC,OAEVuB,MAAO,CACLtB,EAAGvC,KAAKuC,EAAIvC,KAAKyC,MACjBL,EAAGpC,KAAKoC,EAAIpC,KAAKsC,OAEnBwB,SAAU,CACRvB,EAAGvC,KAAKuC,EAAI9G,OAAO+G,WACnBJ,EAAGpC,KAAKoC,EAAI3G,OAAO4G,aAErB0B,IAAK,CACHxB,EAAG9G,OAAO+G,WACVJ,EAAG3G,OAAO4G,eAMlB,IAAI2B,EAAU,KAad,WACOA,IACHA,EAAU,IAAI9B,GAQT,CACL5B,IANU0D,EAAQ1D,IAAIqB,KAAKqC,GAO3BrD,OANaqD,EAAQrD,OAAOgB,KAAKqC,GAOjCxD,IANUwD,EAAQxD,IAAImB,KAAKqC,GAO3BtJ,MANY,IAAMsJ,EAAQtJ,QC7K9B,MAAMuJ,UAAenE,EAMnBM,OACEJ,KAAK+C,QAAU1B,EAAS,KACtBrB,KAAKa,QAAQb,KAAKtF,SACjBiH,KAAK3B,MAEJA,KAAKkE,sBACPlE,KAAKmE,eAAiB,IAAIC,eAAepE,KAAK+C,SAC9C/C,KAAKmE,eAAeE,QAAQnB,SAASC,kBAErC1H,OAAO2H,iBAAiB,SAAUpD,KAAK+C,SAS3C1C,OACML,KAAKkE,qBACPlE,KAAKmE,eAAeG,aAEpB7I,OAAO8H,oBAAoB,SAAUvD,KAAK+C,qBAEhCoB,eAQdzJ,YACE,MAAMA,EAAQ,CACZ6J,MAAO9I,OAAO+G,WACdgC,OAAQ/I,OAAO4G,YACfoC,MAAOhJ,OAAO+G,WAAa/G,OAAO4G,YAClCqC,YAAa,UAgBf,OAbIhK,EAAM+J,MAAQ,IAChB/J,EAAMgK,YAAc,aAGlBhK,EAAM+J,MAAQ,IAChB/J,EAAMgK,YAAc,YAGlB1E,KAAK2E,oBACPjK,EAAMkK,WAAa5E,KAAK4E,WACxBlK,EAAMmK,YAAc7E,KAAK6E,aAGpBnK,EAOTiK,wBACE,OAAOzB,SAAS4B,cAAc,sBAAwB,KAOxDF,iBACE,OAAOnJ,OACJsJ,iBAAiB/E,KAAK2E,kBAAmB,YACzCK,iBAAiB,WACjBC,QAAQ,KAAM,IAOnBJ,kBAME,OALoBpJ,OACjBsJ,iBAAiB/E,KAAK2E,kBAAmB,WACzCK,iBAAiB,WACjBC,QAAQ,KAAM,IAEEC,MAAM,KAO3BhB,2BACE,YAAwC,IAA1BzI,OAAO2I,gBAIzB,IAAIe,EAAS,KAEb,WACOA,IACHA,EAAS,IAAIlB,GAQR,CACL3D,IANU6E,EAAO7E,IAAIqB,KAAKwD,GAO1BxE,OANawE,EAAOxE,OAAOgB,KAAKwD,GAOhC3E,IANU2E,EAAO3E,IAAImB,KAAKwD,GAO1BzK,MANY,IAAMyK,EAAOzK,cC/GvB0K,UAAetF,qCAEnBsC,EAAI3G,OAAO4J,iBAGX/C,MAAQ7G,OAAO4J,iBAGf9C,EAAI9G,OAAO6J,iBAGX7C,MAAQhH,OAAO6J,YAOflF,OACE,MAAMwC,EAAYvB,EAAS,KACzBrB,KAAKa,QAAQb,KAAKtF,OJrBxB,SAAkCqG,EAAK,UACrC,MAAMe,EAAML,QACD8D,QAASC,IAClB1D,EAAI,IAAMA,EAAI,IAAM0D,EAAQzE,SImB1B0E,CAAU,KACRzF,KAAKa,QAAQb,KAAKtF,UAEnB,IAEHsF,KAAK+C,QAAUjC,EAAS,KACtBd,KAAKa,QAAQb,KAAKtF,OAGlBkI,KACC,IAAIjB,KAAK3B,MAGZkD,SAASE,iBAAiB,SAAUpD,KAAK+C,QAAS,CAAEO,SAAS,IAQ/DjD,OACE6C,SAASK,oBAAoB,SAAUvD,KAAK+C,SAQ9CrI,YAcE,OAbAsF,KAAKsC,MAAQtC,KAAKoC,EAClBpC,KAAKyC,MAAQzC,KAAKuC,EAGd9G,OAAO4J,cAAgBrF,KAAKoC,IAC9BpC,KAAKoC,EAAI3G,OAAO4J,aAId5J,OAAO6J,cAAgBtF,KAAKuC,IAC9BvC,KAAKuC,EAAI9G,OAAO6J,aAGX,CACL/C,EAAGvC,KAAKuC,EACRH,EAAGpC,KAAKoC,EACRuB,QAAS,CACPpB,EAAGvC,KAAKuC,IAAMvC,KAAKyC,MACnBL,EAAGpC,KAAKoC,IAAMpC,KAAKsC,OAErBsB,KAAM,CACJrB,EAAGvC,KAAKyC,MACRL,EAAGpC,KAAKsC,OAEVuB,MAAO,CACLtB,EAAGvC,KAAKuC,EAAIvC,KAAKyC,MACjBL,EAAGpC,KAAKoC,EAAIpC,KAAKsC,OAEnBwB,SAAU,CACRvB,EAAkB,IAAfvC,KAAK+D,IAAIxB,EAAU,EAAIvC,KAAKuC,EAAIvC,KAAK+D,IAAIxB,EAC5CH,EAAkB,IAAfpC,KAAK+D,IAAI3B,EAAU,EAAIpC,KAAKoC,EAAIpC,KAAK+D,IAAI3B,GAE9C2B,IAAK/D,KAAK+D,KASdA,UACE,MAAO,CACLxB,GAAIW,SAASwC,kBAAoBxC,SAASyC,MAAMC,YAAcnK,OAAO+G,WACrEJ,GAAIc,SAASwC,kBAAoBxC,SAASyC,MAAME,aAAepK,OAAO4G,cAK5E,IAAIyD,EAAS,KAEb,WACOA,IACHA,EAAS,IAAIV,GAQR,CACL9E,IANUwF,EAAOxF,IAAIqB,KAAKmE,GAO1BnF,OANamF,EAAOnF,OAAOgB,KAAKmE,GAOhCtF,IANUsF,EAAOtF,IAAImB,KAAKmE,GAO1BpL,MANY,IAAMoL,EAAOpL,uNC/H7B,MAAe,CACbqL,MAAO,GACPC,MAAO,GACPC,IAAK,EACLC,IAAK,GACLC,KAAM,GACNC,GAAI,GACJC,MAAO,GACPC,KAAM,ICMR,MAAMC,UAAYzG,qCAEhB+C,MAAQ,QAMR2D,UAAY,OAGZC,cAAgB,GAOhBrG,OACEJ,KAAK+C,QAAWF,IACd7C,KAAK6C,MAAQA,EACb7C,KAAKa,QAAQb,KAAKtF,QAEpBwI,SAASE,iBAAiB,UAAWpD,KAAK+C,QAAS,CAAEO,SAAS,IAC9DJ,SAASE,iBAAiB,QAASpD,KAAK+C,QAAS,CAAEO,SAAS,IAQ9DjD,OACE6C,SAASK,oBAAoB,UAAWvD,KAAK+C,SAC7CG,SAASK,oBAAoB,QAASvD,KAAK+C,SAQ7CrI,YACE,MAAMiD,EAAO/C,OAAO8L,QAAQC,GAAUzL,OAAO,CAACC,GAAMF,EAAM2L,MACxDzL,EAAIF,GAAQ2L,IAAS5G,KAAK6C,MAAMgE,QACzB1L,GACN,IAcH,OAZK6E,KAAKyG,cAAcK,OACtB9G,KAAKwG,UAAY,GAGK,YAApBxG,KAAK6C,MAAMiE,MAAkD,YAA5B9G,KAAKyG,cAAcK,KACtD9G,KAAKwG,WAAa,EAElBxG,KAAKwG,UAAY,EAGnBxG,KAAKyG,cAAgBzG,KAAK6C,SAGxBA,MAAO7C,KAAK6C,MACZ2D,UAAWxG,KAAKwG,UAChBO,UAA+B,YAApB/G,KAAK6C,MAAMiE,KAAqB,OAAS,KACpDE,KAA0B,UAApBhH,KAAK6C,MAAMiE,KACjB3E,OAA4B,YAApBnC,KAAK6C,MAAMiE,MAChBnJ,IAKT,IAAIa,EAAM,KAEV,WACOA,IACHA,EAAM,IAAI+H,GAQL,CACLjG,IANU9B,EAAI8B,IAAIqB,KAAKnD,GAOvBmC,OANanC,EAAImC,OAAOgB,KAAKnD,GAO7BgC,IANUhC,EAAIgC,IAAImB,KAAKnD,GAOvB9D,MANY,IAAM8D,EAAI9D,QChF1B,SAASuM,EAAY3L,EAAUW,EAAQiL,GACrC,IAAKpL,EAAUR,EAAUW,GACvB,MAAO,OAGT,MAAMqE,IAAEA,EAAFK,OAAOA,GAAWuG,IAKxB,OAJA5G,EAAIhF,EAAS6L,IAAK,IAAI5L,KACpBS,EAAWV,EAAUW,KAAWV,KAG3B,IAAMoF,EAAOrF,EAAS6L,cAQPC,EAAa9L,GACnC,MAAM+L,EAAgB,CACpBJ,EAAY3L,EAAU,WAAYgM,GAClCL,EAAY3L,EAAU,UAAWiM,GACjCN,EAAY3L,EAAU,SAAUoH,GAChCuE,EAAY3L,EAAU,QAASkM,GAC/BP,EAAY3L,EAAU,QAASmM,IAKjC,GAAI3L,EAAUR,EAAU,UAAW,CACjC,MAAMoM,EAAiB7E,IACrB7G,EAAWV,EAAU,SAAU,CAAEuH,MAAAA,KAEnCpH,OAAO2H,iBAAiB,OAAQsE,GAChCL,EAAcM,KAAK,KACjBlM,OAAO8H,oBAAoB,OAAQmE,KAIvC,OAAOL,EC5CT,SAASO,EAAetM,EAAUuM,GAChC,OAAOA,EAAa7M,IAAK8M,IACvB,MAAMC,EAAYD,EAAY7C,QAAQ,MAAO,IAAI+C,cAE3CjF,EAAU,IAAIxH,KAClBF,EAAMC,EAAUwM,EAAaxM,EAAS2M,OAAQ1M,GAC9CD,EAASwM,MAAgBvM,IAK3B,OAFAD,EAAS2M,IAAI7E,iBAAiB2E,EAAWhF,GAElC,KACLzH,EAAS2M,IAAI1E,oBAAoBwE,EAAWhF,MAYlD,SAASmF,EAAe5M,EAAUuM,GAChC,MAAMR,EAAgB,GAkCtB,OAhCAzM,OAAO8L,QAAQpL,EAAS6M,OAAO5J,QAAQ,EAAE6J,EAASC,MAChD,MAAMF,EAAQhL,MAAMC,QAAQiL,GAAcA,EAAa,CAACA,GAClDC,EAAkB,KAAIF,EAAQnD,QAAQ,MAAQsD,GAAMA,EAAEpO,eAE5D0N,EACGhK,OAAQiK,GAAgBA,EAAYU,WAAWF,IAC/C/J,QAASuJ,IACRK,EAAM5J,QAAQ,CAACkK,EAAMC,KACnB,MAAMX,EAAYD,EAAY7C,QAAQqD,EAAgB,IAAIN,cACpDjF,EAAU,IAAIxH,KAClBF,EAAMC,EAAUwM,EAAaW,KAASlN,EAAMmN,GAC5CpN,EAASwM,MAAgBvM,EAAMmN,IAGjCrN,EAAMC,EAAU,oBAAqB8M,EAASL,GAE1CU,EAAK1I,aAAe0I,EAAK1I,YAAY4I,aAEvCF,EAAOA,EAAKR,KAGdQ,EAAKrF,iBAAiB2E,EAAWhF,GAMjCsE,EAAcM,KALO,KACnBtM,EAAMC,EAAU,sBAAuBuM,GACvCY,EAAKlF,oBAAoBwE,EAAWhF,WAQvCsE,EAST,SAASuB,EAAmBtN,EAAUuM,GACpC,MAAMR,EAAgB,GA0BtB,OAxBAzM,OAAO8L,QAAQpL,EAASmE,WAAWlB,QAAQ,EAAEsK,EAAWpJ,MACtD,MAAMqJ,EAAoB,KAAID,EAAU5D,QAAQ,MAAQsD,GAAMA,EAAEpO,eAEhE0N,EACGhK,OAAQiK,GAAgBA,EAAYU,WAAWM,IAC/CvK,QAASuJ,IACRrI,EAAUlB,QAAQ,CAACoB,EAAQ+I,KACzB,MAAMX,EAAYD,EAAY7C,QAAQ6D,EAAkB,IAAId,cAM5D3M,EAAMC,EAAU,sBAAuBuN,EAAWd,GAElD,MAAMgB,EAAepJ,EAAOqJ,IAAIjB,EAPhB,IAAIxM,KAClBF,EAAMC,EAAUwM,EAAanI,KAAWpE,EAAMmN,GAC9CpN,EAASwM,MAAgBvM,EAAMmN,KAMjCrB,EAAcM,KAAK,KACjBtM,EAAMC,EAAU,wBAAyBuN,EAAWd,GACpDgB,YAMH1B,EAST,SAAwB4B,EAAW3N,GACjC,MAAM4N,EAAmB,kBACnBC,EAA4B,kCAG5BtB,EAAerN,EAAiBc,GAAUJ,OAC9C,CAACC,GAAMF,KAEDiO,EAAiBE,KAAKnO,IACxBE,EAAIkO,KAAK1B,KAAK1M,GACPE,IAILgO,EAA0BC,KAAKnO,IACjCE,EAAImO,eAAe3B,KAAK1M,GAGnBE,GAET,CAAEkO,KAAM,GAAIC,eAAgB,KAS9B,MANsB,IACjB1B,EAAetM,EAAUuM,EAAawB,SACtCnB,EAAe5M,EAAUuM,EAAayB,mBACtCV,EAAmBtN,EAAUuM,EAAayB,uBCtH5BC,mCCXnBC,QAAU,GASVR,IAAInG,EAAO4G,GAMT,OALKtM,MAAMC,QAAQ4C,KAAKwJ,QAAQ3G,MAC9B7C,KAAKwJ,QAAQ3G,GAAS,IAExB7C,KAAKwJ,QAAQ3G,GAAO8E,KAAK8B,GAElB,KACLzJ,KAAK0J,KAAK7G,EAAO4G,IAWrBC,KAAK7G,EAAO4G,GAEV,IAAK5G,EAEH,OADA7C,KAAKwJ,QAAU,QAKjB,IAAKC,EAEH,OADAzJ,KAAKwJ,QAAQ3G,GAAS,QAIxB,MAAM6F,EAAQ1I,KAAKwJ,QAAQ3G,GAAO8G,QAAQF,GAM1C,OAJIf,GAAS,GACX1I,KAAKwJ,QAAQ3G,GAAO+G,OAAOlB,EAAO,QAatCvM,MAAM0G,KAAUtH,GACd,OAAK4B,MAAMC,QAAQ4C,KAAKwJ,QAAQ3G,KAIhC7C,KAAKwJ,QAAQ3G,GAAOtE,QAASkL,IAC3BA,EAAS7N,MAAMoE,KAAMzE,gBAYzBsO,MAAMhH,EAAO4G,GACX,MAAMnO,EAAW0E,KAKjB,OAJAA,KAAKgJ,IAAInG,EAAO,SAASE,KAAWxH,GAClCD,EAASoO,KAAK7G,EAAOE,GACrB0G,EAAS7N,MAAMN,EAAUC,YD9D7B4M,YACE,gBErBoB7M,EAAUmC,GAChC,MAAMqM,EAAU3M,MAAM4M,KAAKtM,EAAQuM,iBAAkB,eAC/CC,EAAe9M,MAAM4M,KAAKtM,EAAQuM,iBAAkB,uCAGpDE,EAFWJ,EAAQjM,OAAQsM,IAASF,EAAaG,SAASD,IAE1CjP,OAAO,CAACiN,EAAOM,KACnC,IAAIL,EAAUK,EAAK4B,QAAQF,IAC3B,MAAMG,EAAW7B,EAAK8B,SAAW9B,EAAK8B,SAAW9B,EAoBjD,OAlBIL,EAAQoC,SAAS,QACnBpC,EAAUA,EAAQnD,QAAQ,QAAS,IAE9BkD,EAAMC,KACTD,EAAMC,GAAW,KAIjBD,EAAMC,GACJjL,MAAMC,QAAQ+K,EAAMC,IACtBD,EAAMC,GAAST,KAAK2C,GAEpBnC,EAAMC,GAAW,CAACD,EAAMC,GAAUkC,GAGpCnC,EAAMC,GAAWkC,EAGZnC,GACN,IAGH,OADA7M,EAASa,MAAM,WAAY+N,GACpBA,EFVEO,CAAQzK,KAAMA,KAAKiI,KAO5BxI,gBACE,OGOJ,SAA4BnE,EAAUmC,EAASiN,GAC7C,MAAMC,EAAW/P,OAAO8L,QAAQgE,GAAYxP,OAAO,CAACC,GAAMF,EAAM2P,MAE9D,IAAIC,EAAW1N,MAAM4M,KAAKtM,EAAQuM,iBADhB,oBAAmB/O,QAQrC,OAJwB,IAApB4P,EAASC,SACXD,EAAW1N,MAAM4M,KAAKtM,EAAQuM,iBAAiB/O,KAGzB,IAApB4P,EAASC,SAIb3P,EAAIF,GAAQ4P,EACT7P,IAAK+P,GAlDZ,SAAkBA,EAAIH,EAAgBI,GAEpC,GAAID,EAAGR,SACL,OAAOQ,EAAGR,SAIZ,GAAIK,EAAejC,WAAY,CAC7B/N,OAAOqQ,eAAeL,EAAe9P,UAAW,cAAe,CAAEwB,OAAO,IACxE,MAAM4O,EAAQ,IAAIN,EAAeG,GAEjC,OADAnQ,OAAOqQ,eAAeC,EAAO,UAAW,CAAExK,IAAK,IAAMsK,IAC9CE,EAIT,MAAMC,EAAiBP,IAAiBtL,KAAM8L,IAC5C,MAAMC,EAAgBD,EAAOE,QAAUF,EAAOE,QAAUF,EACxDxQ,OAAOqQ,eAAeI,EAAcvQ,UAAW,cAAe,CAAEwB,OAAO,IACvE,MAAM4O,EAAQ,IAAIG,EAAcN,GAEhC,OADAnQ,OAAOqQ,eAAeC,EAAO,UAAW,CAAExK,IAAK,IAAMsK,IAC9CE,IAKT,OAFAC,EAAe9L,aAAc,EAEtB8L,EAyBUI,CAASR,EAAIH,EAAgBtP,IAEzCuC,OAAQkN,GAAc,eAAPA,GAEO,IAArB5P,EAAIF,GAAM6P,eACL3P,EAAIF,IATJE,GAaR,IAGH,OADAG,EAASa,MAAM,eAAgBwO,GACxBA,EHlCEa,CAAYxL,KAAMA,KAAKiI,IAAKjI,KAAKnE,OAAO6O,YAAc,IAO/DlP,eACE,gBIlCuBF,EAAUmC,EAAS5B,GAC5C,IAAImB,EAAU,GACd,GAAIS,EAAQ4M,QAAQrN,QAClB,IACEA,EAAUyO,KAAKC,MAAMjO,EAAQ4M,QAAQrN,SACrC,MAAO2O,GACP,UAAU3M,MAAM,0EAMpB,OAFAhC,EAAU4O,EAAM/P,EAAQmB,GACxB1B,EAASa,MAAM,cAAea,GACvBA,EJsBE6O,CAAW7L,KAAMA,KAAKiI,IAAKjI,KAAKnE,QAQzCL,aAAasQ,aIpBYxQ,EAAUmC,EAASqO,GAC5C,IAAI9O,EAAU,GACd,GAAIS,EAAQ4M,QAAQrN,QAClB,IACEA,EAAUyO,KAAKC,MAAMjO,EAAQ4M,QAAQrN,SACrC,MAAO2O,GACP,UAAU3M,MAAM,0EAGpBhC,EAAU4O,EAAM5O,EAAS8O,GACzBrO,EAAQ4M,QAAQrN,QAAUyO,KAAKM,UAAU/O,GJWvCgP,CAAWhM,EAAMA,KAAKiI,IAAK6D,GAS7B/L,YAAYtC,GAGV,GAFAwO,SAEKjM,KAAKnE,OACR,UAAUmD,MAAM,wCAGlB,IAAKgB,KAAKnE,OAAOZ,KACf,UAAU+D,MAAM,2CAGlB,IAAKvB,EACH,UAAUuB,MAAM,qCAGlBpE,OAAOsR,iBAAiBlM,KAAM,CAC5BmH,IAAK,CACH7K,MAAQ,GAAE0D,KAAKnE,OAAOZ,QAAQkR,OAEhCjQ,WAAY,CACVI,OAAO,EACP8P,UAAU,GAEZnE,IAAK,CACH3L,MAAOmB,KAINuC,KAAKiI,IAAIsC,UACZ3P,OAAOqQ,eAAejL,KAAKiI,IAAK,WAAY,CAC1CvH,IAAK,IAAMV,KACXqM,cAAc,aKnFW/Q,GAAUgR,QAAEA,EAAFC,QAAWA,GAAY,IAehE/R,EAAiBc,GACduC,OAAO,EAAEW,KAAiB,gBAARA,GAfLA,CAAAA,IACd,MAAMgO,EAASC,GAAgC,iBAAZA,EAAuBjO,IAAQiO,EAAUA,EAAQrD,KAAK5K,GAEzF,OAAI8N,EACKA,EAAQI,KAAKF,IAGlBD,IACMA,EAAQG,KAAKF,IAOqB3O,CAAOW,IAClDD,QAAQ,EAAEC,EAAK/D,MACd,MAAMkS,EAAa/R,OAAOgS,yBAAyBnS,EAAQ+D,GACvDmO,GAA0C,mBAArBA,EAAWrQ,QAClChB,EAASkD,GAAOlD,EAASkD,GAAKmD,KAAKrG,MLoEvCuR,CAAS7M,KAAM,CACbuM,QAAS,CACP,SACA,WACA,OACA,MACA,QACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,QACA,WACA,eACIvM,KAAK8M,sBAAwB,MAIrC,IAAIzF,EAAgB,GA0BpB,OAzBArH,KAAKgJ,IAAI,UAAW,KAClBxJ,EAAgBQ,MAChBqH,EAAgB,IAAID,EAAapH,SAAUiJ,EAAWjJ,OACtDA,KAAK9D,YAAa,IAGpB8D,KAAKgJ,IAAI,UAAW,KAClB3B,EAAc9I,QAAStC,GAAWA,KAClCuD,EAAgBQ,MAChBqH,EAAgB,IAAID,EAAapH,SAAUiJ,EAAWjJ,SAGxDA,KAAKgJ,IAAI,YAAa,KACpBhJ,KAAK9D,YAAa,EAClBmL,EAAc9I,QAAStC,GAAWA,KbhFxC,SAAkCX,GAC3BA,EAASmE,YAGdpE,EAAMC,EAAU,oBAAqBA,EAASmE,WAE9C7E,OAAO8E,OAAOpE,EAASmE,WAAWlB,QAASoB,IACzCA,EAAOpB,QAAQqB,Ma0EbmN,CAAkB/M,QAIfA,KAAKgN,cACRhN,KAAKT,SACL3E,OAAOqQ,eAAejL,KAAM,UAAW,CAAEU,IAAK,IAAM,QAGtDrF,EAAM2E,KAAM,cAAeA,WAU7BiN,QAAQ1R,GACN,YAAYC,SAASG,IACjBF,OAAOC,QAAQC,IAAIC,MAAMH,OAAQ,CAACuE,KAAKnE,OAAOZ,QAASM,IACvD,OAMNgE,SAGE,OAFAlE,EAAM2E,KAAM,UACZhE,EAAWgE,KAAM,gBAOnBkN,UAGE,OAFA7R,EAAM2E,KAAM,WACZhE,EAAWgE,KAAM,gBAOnBH,WAGE,OAFAxE,EAAM2E,KAAM,YACZhE,EAAWgE,KAAM,kBAQnBmN,aACE9R,EAAM2E,KAAM,cAGZA,KAAKH,WAGL7D,EAAWgE,KAAM,0BAGLiI,IAAIsC,SAIhB3P,OAAOqQ,eAAejL,KAAKiI,IAAK,WAAY,CAC1C3L,MAAO,aACP+P,cAAc,EACdD,UAAU,KAKhB7C,EAAKZ,YAAa"}