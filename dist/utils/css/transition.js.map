{"version":3,"sources":["../../../src/utils/css/transition.js"],"names":["nextFrame","classes","styles","cache","WeakMap","Transition","element","set","instance","get","setClassesOrStyles","classesOrStyles","method","testTransition","window","getComputedStyle","transitionDuration","start","trs","getInstance","isTransitioning","from","active","next","hasTransition","Promise","resolve","transitionEndHandler","addEventListener","to","end","mode","removeEventListener","transition","name","endMode"],"mappings":"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","sourcesContent":["/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"__isTransitioning__\", \"__transitionEndHandler__\"] }] */\nimport nextFrame from '../nextFrame';\nimport * as classes from './classes';\nimport * as styles from './styles';\n\n/** WeakMap to hold the transition instances. */\nconst cache = new WeakMap();\n\n/**\n * Transition class.\n */\nclass Transition {\n  /**\n   * Is a transition currently running?\n   * @type {Boolean}\n   */\n  isTransitioning = false;\n\n  /**\n   * A callback to execute when the transition ends.\n   * @type {EventListenerOrEventListenerObject|null}\n   */\n  transitionEndHandler = null;\n\n  /**\n   * Instantiate and save the instance to the cache.\n   * @param {HTMLElement} element The HTML element.\n   */\n  constructor(element) {\n    cache.set(element, this);\n  }\n\n  /**\n   * Get the transition class attached to the given element.\n   * @param  {HTMLElement} element The HTML element concerned by the transition.\n   * @return {Transition}          The transition instance tied to the given element.\n   */\n  static getInstance(element) {\n    let instance = cache.get(element);\n\n    if (!instance) {\n      instance = new this(element);\n    }\n\n    return instance;\n  }\n}\n\n/**\n * Update either the classes or the styles of an element with the given method.\n *\n * @param {HTMLElement}   element         The element to update.\n * @param {String|Object} classesOrStyles The classes or styles to apply.\n * @param {String}        method          The method to use, one of `add` or `remove`.\n */\nexport function setClassesOrStyles(element, classesOrStyles, method = 'add') {\n  if (typeof classesOrStyles === 'string') {\n    classes[method](element, classesOrStyles, method);\n  } else {\n    styles[method](element, classesOrStyles, method);\n  }\n}\n\n/**\n * Test if the given element has a transition duration.\n *\n * @param  {HTMLElement} element The element to test.\n * @return {Boolean}             The result of the test.\n */\nfunction testTransition(element) {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  const { transitionDuration } = window.getComputedStyle(element);\n  return !!transitionDuration && transitionDuration !== '0s';\n}\n\n/**\n * Apply the from state.\n *\n * @param {HTMLElement}   element         The target element.\n * @param {String|Object} classesOrStyles The classes or styles definition.\n * @return {Promise}\n */\nasync function start(element, classesOrStyles) {\n  const trs = Transition.getInstance(element);\n  trs.isTransitioning = true;\n  setClassesOrStyles(element, classesOrStyles.from);\n  await nextFrame();\n  setClassesOrStyles(element, classesOrStyles.active);\n  await nextFrame();\n}\n\n/**\n * Apply the active state.\n *\n * @param {HTMLElement}   element         The target element.\n * @param {String|Object} classesOrStyles The classes or styles definition.\n * @return {Promise}\n */\nasync function next(element, classesOrStyles) {\n  const hasTransition = testTransition(element);\n\n  /* eslint-disable-next-line */\n  return new Promise(async resolve => {\n    if (hasTransition) {\n      const trs = Transition.getInstance(element);\n      trs.transitionEndHandler = resolve;\n      element.addEventListener('transitionend', trs.transitionEndHandler, false);\n    }\n    setClassesOrStyles(element, classesOrStyles.from, 'remove');\n    setClassesOrStyles(element, classesOrStyles.to);\n    await nextFrame();\n    if (!hasTransition) {\n      resolve();\n    }\n  });\n}\n\n/**\n * Apply the final state.\n *\n * @param {HTMLElement}   element         The target element.\n * @param {String|Object} classesOrStyles The classes or styles definition.\n * @param {String}        mode            Whether to remove or keep the `to`  classes/styles.\n * @return {void}\n */\nfunction end(element, classesOrStyles, mode = 'remove') {\n  const trs = Transition.getInstance(element);\n  element.removeEventListener('transitionend', trs.transitionEndHandler, false);\n  if (mode === 'remove') {\n    setClassesOrStyles(element, classesOrStyles.to, 'remove');\n  }\n  setClassesOrStyles(element, classesOrStyles.active, 'remove');\n  trs.isTransitioning = false;\n  trs.transitionEndHandler = null;\n}\n\n/**\n * Manage CSS transition with class.\n *\n * This is heavily inspired by the Vue `<transition>` component\n * and the `@barba/css` package, many thanks to them!\n *\n * @param  {HTMLElement}   element The target element.\n * @param  {String|Object} name    The name of the transition or an object with the hooks classesOrStyles.\n * @param  {String}        endMode    Whether to remove or keep the `to` classes/styles\n * @return {Promise}               A promise resolving at the end of the transition.\n */\nexport default async function transition(element, name, endMode = 'remove') {\n  const classesOrStyles =\n    typeof name === 'string'\n      ? {\n          from: `${name}-from`,\n          active: `${name}-active`,\n          to: `${name}-to`,\n        }\n      : {\n          from: '',\n          active: '',\n          to: '',\n          ...name,\n        };\n\n  const trs = Transition.getInstance(element);\n  // End any previous transition running on the element.\n  if (trs.isTransitioning) {\n    end(element, classesOrStyles);\n  }\n\n  await start(element, classesOrStyles);\n  await next(element, classesOrStyles);\n  end(element, classesOrStyles, endMode);\n  return Promise.resolve();\n}\n"],"file":"transition.js"}