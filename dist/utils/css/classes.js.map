{"version":3,"sources":["../../../src/utils/css/classes.js"],"names":["setClasses","element","classNames","method","split","forEach","className","classList","add","remove","toggle"],"mappings":"AAAA;;;;;;;AAOA,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,UAA7B,EAAyD;AAAA,MAAhBC,MAAgB,uEAAP,KAAO;;AACvD,MAAI,CAACF,OAAD,IAAY,CAACC,UAAjB,EAA6B;AAC3B;AACD;;AAEDA,EAAAA,UAAU,CAACE,KAAX,CAAiB,GAAjB,EAAsBC,OAAtB,CAA8B,UAAAC,SAAS,EAAI;AACzCL,IAAAA,OAAO,CAACM,SAAR,CAAkBJ,MAAlB,EAA0BG,SAA1B;AACD,GAFD;AAGD;AAED;;;;;;;;;AAOA,OAAO,SAASE,GAAT,CAAaP,OAAb,EAAsBC,UAAtB,EAAkC;AACvCF,EAAAA,UAAU,CAACC,OAAD,EAAUC,UAAV,CAAV;AACD;AAED;;;;;;;;AAOA,OAAO,SAASO,MAAT,CAAgBR,OAAhB,EAAyBC,UAAzB,EAAqC;AAC1CF,EAAAA,UAAU,CAACC,OAAD,EAAUC,UAAV,EAAsB,QAAtB,CAAV;AACD;AAED;;;;;;;;AAOA,OAAO,SAASQ,MAAT,CAAgBT,OAAhB,EAAyBC,UAAzB,EAAqC;AAC1CF,EAAAA,UAAU,CAACC,OAAD,EAAUC,UAAV,EAAsB,QAAtB,CAAV;AACD","sourcesContent":["/**\n * Manage a list of classes as string on an element.\n *\n * @param {HTMLElement} element    The element to update.\n * @param {String}      classNames A string of class names.\n * @param {String}      method     The method to use: add, remove or toggle.\n */\nfunction setClasses(element, classNames, method = 'add') {\n  if (!element || !classNames) {\n    return;\n  }\n\n  classNames.split(' ').forEach(className => {\n    element.classList[method](className);\n  });\n}\n\n/**\n * Add class names to an element.\n *\n * @param {HTMLElement} element    The element to update.\n * @param {String}      classNames A string of class names.\n * @return {void}\n */\nexport function add(element, classNames) {\n  setClasses(element, classNames);\n}\n\n/**\n * Remove class names from an element.\n *\n * @param  {HTMLElement} element    The element to update.\n * @param  {String}      classNames A string of class names.\n * @return {void}\n */\nexport function remove(element, classNames) {\n  setClasses(element, classNames, 'remove');\n}\n\n/**\n * Toggle class names from an element.\n *\n * @param  {HTMLElement} element    The element to update.\n * @param  {String}      classNames A string of class names.\n * @return {void}\n */\nexport function toggle(element, classNames) {\n  setClasses(element, classNames, 'toggle');\n}\n"],"file":"classes.js"}