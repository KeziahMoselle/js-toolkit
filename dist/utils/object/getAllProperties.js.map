{"version":3,"sources":["../../../src/utils/object/getAllProperties.js"],"names":["getAllProperties","object","props","proto","Object","getPrototypeOf","prototype","getOwnPropertyNames","map","name","reduce","acc","val"],"mappings":";;AAAA;;;;;;;AAOA,eAAe,SAASA,gBAAT,CAA0BC,MAA1B,EAA8C;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AAC3D,MAAMC,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBJ,MAAtB,CAAd;;AAEA,MAAIE,KAAK,KAAKC,MAAM,CAACE,SAArB,EAAgC;AAC9B,WAAOJ,KAAP;AACD;;AAED,SAAOF,gBAAgB,CACrBG,KADqB,EAErBC,MAAM,CAACG,mBAAP,CAA2BJ,KAA3B,EACGK,GADH,CACO,UAACC,IAAD;AAAA,WAAU,CAACA,IAAD,EAAON,KAAP,CAAV;AAAA,GADP,EAEGO,MAFH,CAEU,UAACC,GAAD,EAAMC,GAAN;AAAA,wCAAkBD,GAAlB,IAAuBC,GAAvB;AAAA,GAFV,EAEuCV,KAFvC,CAFqB,CAAvB;AAMD","sourcesContent":["/**\n * Gets all non-builtin properties up the prototype chain.\n *\n * @param  {Object} object The object to get the propeties from.\n * @param  {Array}  props  The already existing properties.\n * @return {Array}         An array of properties and their value.\n */\nexport default function getAllProperties(object, props = []) {\n  const proto = Object.getPrototypeOf(object);\n\n  if (proto === Object.prototype) {\n    return props;\n  }\n\n  return getAllProperties(\n    proto,\n    Object.getOwnPropertyNames(proto)\n      .map((name) => [name, proto])\n      .reduce((acc, val) => [...acc, val], props)\n  );\n}\n"],"file":"getAllProperties.js"}