{"version":3,"sources":["../../src/utils/setStyles.js"],"names":["setStyles","element","styles","method","Object","entries","forEach","prop","value","style"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;;;AAOe,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,MAA5B,EAAoD;AAAA,MAAhBC,MAAgB,uEAAP,KAAO;;AACjE,MAAI,CAACF,OAAD,IAAY,CAACC,MAAb,IAAuB,CAAC,uBAASA,MAAT,CAA5B,EAA8C;AAC5C;AACD;;AAEDE,EAAAA,MAAM,CAACC,OAAP,CAAeH,MAAf,EAAuBI,OAAvB,CAA+B,gBAAmB;AAAA;AAAA,QAAjBC,IAAiB;AAAA,QAAXC,KAAW;;AAChDP,IAAAA,OAAO,CAACQ,KAAR,CAAcF,IAAd,IAAsBJ,MAAM,KAAK,KAAX,GAAmBK,KAAnB,GAA2B,EAAjD;AACD,GAFD;AAGD","sourcesContent":["import isObject from './isObject';\n\n/**\n * Manage a list of style properties on an element.\n *\n * @param {HTMLElement}         element The element to update.\n * @param {CSSStyleDeclaration} styles  An object of styles properties and values.\n * @param {String}              method  The method to use: add or remove.\n */\nexport default function setStyles(element, styles, method = 'add') {\n  if (!element || !styles || !isObject(styles)) {\n    return;\n  }\n\n  Object.entries(styles).forEach(([prop, value]) => {\n    element.style[prop] = method === 'add' ? value : '';\n  });\n}\n"],"file":"setStyles.js"}