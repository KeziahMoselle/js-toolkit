{"version":3,"sources":["../../src/utils/history.js"],"names":["isObject","updateUrlSearchParam","params","name","value","has","delete","Array","isArray","forEach","val","index","arrayName","Object","entries","key","objectName","set","objectToURLSearchParams","obj","defaultSearch","window","location","search","reduce","urlSearchParams","URLSearchParams","updateHistory","mode","path","pathname","hash","data","title","history","url","mergedSearch","toString","startsWith","method","push","options","replace"],"mappings":"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","sourcesContent":["import isObject from './object/isObject';\n\n/**\n * Set a param in a URLSearchParam instance.\n * @param  {URLSearchParams}                    params The params to update.\n * @param  {String}                             name   The name of the param to update.\n * @param  {String|Number|Boolean|Array|Object} value  The value for this param.\n * @return {URLSearchParams}                           The updated URLSearchParams instance.\n */\nfunction updateUrlSearchParam(params, name, value) {\n  if (!value) {\n    if (params.has(name)) {\n      params.delete(name);\n    }\n    return params;\n  }\n\n  if (Array.isArray(value)) {\n    value.forEach((val, index) => {\n      const arrayName = `${name}[${index}]`;\n      updateUrlSearchParam(params, arrayName, val);\n    });\n    return params;\n  }\n\n  if (isObject(value)) {\n    Object.entries(value).forEach(([key, val]) => {\n      const objectName = `${name}[${key}]`;\n      updateUrlSearchParam(params, objectName, val);\n    });\n    return params;\n  }\n\n  params.set(name, value);\n  return params;\n}\n\n/**\n * Transform an object to an URLSearchParams instance.\n *\n * @param  {Object}          obj           The object to convert.\n * @param  {String}          defaultSearch A string of defaults search params.\n * @return {URLSearchParams}\n */\nfunction objectToURLSearchParams(obj, defaultSearch = window.location.search) {\n  return Object.entries(obj).reduce(\n    (urlSearchParams, [name, value]) => updateUrlSearchParam(urlSearchParams, name, value),\n    new URLSearchParams(defaultSearch)\n  );\n}\n\n/**\n * Update the history with a new state.\n * @param {String} mode             Wether to push or replace the new state.\n * @param {Object} options\n * @param {String} options.path     The new pathname.\n * @param {Object} options.search   The new search params.\n * @param {Object} options.hash     The new hash.\n */\nfunction updateHistory(\n  mode,\n  { path = window.location.pathname, search = {}, hash = window.location.hash },\n  data = {},\n  title = ''\n) {\n  if (!window.history) {\n    return;\n  }\n\n  let url = path;\n\n  const mergedSearch = objectToURLSearchParams(search);\n  if (mergedSearch.toString()) {\n    url += `?${mergedSearch.toString()}`;\n  }\n\n  if (hash) {\n    if (hash.startsWith('#')) {\n      url += hash;\n    } else {\n      url += `#${hash}`;\n    }\n  }\n\n  const method = `${mode}State`;\n  window.history[method](data, title, url);\n}\n\n/**\n * Push a new state.\n *\n * @param {Object} options The new state.\n * @param {Object} data    The data for the new state.\n * @param {String} title   The title for the new state.\n */\nexport function push(options, data, title) {\n  updateHistory('push', options, data, title);\n}\n\n/**\n * Replace a new state.\n *\n * @param {Object} options The new state.\n * @param {Object} data    The data for the new state.\n * @param {String} title   The title for the new state.\n */\nexport function replace(options, data, title) {\n  updateHistory('replace', options, data, title);\n}\n"],"file":"history.js"}