{"version":3,"sources":["../../src/utils/focusTrap.js"],"names":["keyCodes","FOCUSABLE_ELEMENTS","focusedBefore","saveActiveElement","document","activeElement","trap","element","event","keyCode","TAB","focusableChildren","Array","from","querySelectorAll","join","focusedItemIndex","HTMLElement","indexOf","length","focus","preventDefault","shiftKey","untrap","useFocusTrap"],"mappings":"OAAOA,Q;AAEP,IAAMC,kBAAkB,GAAG,CACzB,2CADyB,EAEzB,8CAFyB,EAGzB,oCAHyB,EAIzB,qCAJyB,EAKzB,uCALyB,EAMzB,qCANyB,EAOzB,0CAPyB,EAQzB,yCARyB,EASzB,yCATyB,EAUzB,qDAVyB,EAWzB,8CAXyB,CAA3B;AAcA,IAAIC,aAAJ;AAKA,OAAO,SAASC,iBAAT,GAA6B;AAClCD,EAAAA,aAAa,GAAGE,QAAQ,CAACC,aAAzB;AACD;AAOD,OAAO,SAASC,IAAT,CAAcC,OAAd,EAAuBC,KAAvB,EAA8B;AACnC,MAAIA,KAAK,CAACC,OAAN,KAAkBT,QAAQ,CAACU,GAA/B,EAAoC;AAClC;AACD;;AAGD,MAAI,CAACR,aAAL,EAAoB;AAClBA,IAAAA,aAAa,GAAGE,QAAQ,CAACC,aAAzB;AACD;;AAGD,MAAMM,iBAAiB,GAAGC,KAAK,CAACC,IAAN,CAAWN,OAAO,CAACO,gBAAR,CAAyBb,kBAAkB,CAACc,IAAnB,CAAwB,IAAxB,CAAzB,CAAX,CAA1B;AACA,MAAMC,gBAAgB,GACpBZ,QAAQ,CAACC,aAAT,YAAkCY,WAAlC,GACIN,iBAAiB,CAACO,OAAlB,CAA0Bd,QAAQ,CAACC,aAAnC,CADJ,GAEI,CAAC,CAHP;;AAKA,MAAI,CAACM,iBAAiB,CAACQ,MAAvB,EAA+B;AAC7B;AACD;;AAED,MAAIH,gBAAgB,GAAG,CAAvB,EAA0B;AACxBL,IAAAA,iBAAiB,CAAC,CAAD,CAAjB,CAAqBS,KAArB;AACAZ,IAAAA,KAAK,CAACa,cAAN;AACD;;AAKD,MAAIb,KAAK,CAACc,QAAN,IAAkBN,gBAAgB,KAAK,CAA3C,EAA8C;AAC5CL,IAAAA,iBAAiB,CAACA,iBAAiB,CAACQ,MAAlB,GAA2B,CAA5B,CAAjB,CAAgDC,KAAhD;AACAZ,IAAAA,KAAK,CAACa,cAAN;AACD,GAHD,MAQK,IAAI,CAACb,KAAK,CAACc,QAAP,IAAmBN,gBAAgB,KAAKL,iBAAiB,CAACQ,MAAlB,GAA2B,CAAvE,EAA0E;AAC7ER,MAAAA,iBAAiB,CAAC,CAAD,CAAjB,CAAqBS,KAArB;AACAZ,MAAAA,KAAK,CAACa,cAAN;AACD;AACF;AAKD,OAAO,SAASE,MAAT,GAAkB;AACvB,MAAIrB,aAAa,IAAI,OAAOA,aAAa,CAACkB,KAArB,KAA+B,UAApD,EAAgE;AAC9DlB,IAAAA,aAAa,CAACkB,KAAd;AACAlB,IAAAA,aAAa,GAAG,IAAhB;AACD;AACF;AAKD,eAAe,SAASsB,YAAT,GAAwB;AACrC,SAAO;AAAElB,IAAAA,IAAI,EAAJA,IAAF;AAAQiB,IAAAA,MAAM,EAANA,MAAR;AAAgBpB,IAAAA,iBAAiB,EAAjBA;AAAhB,GAAP;AACD","sourcesContent":["import keyCodes from './keyCodes';\n\nconst FOCUSABLE_ELEMENTS = [\n  'a[href]:not([tabindex^=\"-\"]):not([inert])',\n  'area[href]:not([tabindex^=\"-\"]):not([inert])',\n  'input:not([disabled]):not([inert])',\n  'select:not([disabled]):not([inert])',\n  'textarea:not([disabled]):not([inert])',\n  'button:not([disabled]):not([inert])',\n  'iframe:not([tabindex^=\"-\"]):not([inert])',\n  'audio:not([tabindex^=\"-\"]):not([inert])',\n  'video:not([tabindex^=\"-\"]):not([inert])',\n  '[contenteditable]:not([tabindex^=\"-\"]):not([inert])',\n  '[tabindex]:not([tabindex^=\"-\"]):not([inert])',\n];\n\nlet focusedBefore;\n\n/**\n * Save the current active element.\n */\nexport function saveActiveElement() {\n  focusedBefore = document.activeElement;\n}\n\n/**\n * Trap tab navigation inside the given element.\n * @param {HTMLElement} element The element in which to trap the tabulations.\n * @param {KeyboardEvent} event The keydown or keyup event.\n */\nexport function trap(element, event) {\n  if (event.keyCode !== keyCodes.TAB) {\n    return;\n  }\n\n  // Save the previous focused element\n  if (!focusedBefore) {\n    focusedBefore = document.activeElement;\n  }\n\n  /** @type {Array<HTMLElement>} */\n  const focusableChildren = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS.join(', ')));\n  const focusedItemIndex =\n    document.activeElement instanceof HTMLElement\n      ? focusableChildren.indexOf(document.activeElement)\n      : -1;\n\n  if (!focusableChildren.length) {\n    return;\n  }\n\n  if (focusedItemIndex < 0) {\n    focusableChildren[0].focus();\n    event.preventDefault();\n  }\n\n  // If the SHIFT key is being pressed while tabbing (moving backwards) and\n  // the currently focused item is the first one, move the focus to the last\n  // focusable item from the dialog element\n  if (event.shiftKey && focusedItemIndex === 0) {\n    focusableChildren[focusableChildren.length - 1].focus();\n    event.preventDefault();\n  }\n\n  // If the SHIFT key is not being pressed (moving forwards) and the currently\n  // focused item is the last one, move the focus to the first focusable item\n  // from the dialog element\n  else if (!event.shiftKey && focusedItemIndex === focusableChildren.length - 1) {\n    focusableChildren[0].focus();\n    event.preventDefault();\n  }\n}\n\n/**\n * Untrap the tab navigation.\n */\nexport function untrap() {\n  if (focusedBefore && typeof focusedBefore.focus === 'function') {\n    focusedBefore.focus();\n    focusedBefore = null;\n  }\n}\n\n/**\n * Use a trap/untrap tabs logic.\n */\nexport default function useFocusTrap() {\n  return { trap, untrap, saveActiveElement };\n}\n"],"file":"focusTrap.js"}