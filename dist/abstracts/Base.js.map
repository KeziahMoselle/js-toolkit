{"version":3,"sources":["../../src/abstracts/Base.js"],"names":["debug","instance","args","$options","window","console","log","apply","config","name","getRefs","element","allRefs","Array","from","querySelectorAll","childrenRefs","elements","filter","ref","includes","refs","reduce","$refs","$ref","refName","dataset","$realRef","__base__","isArray","push","$emit","getChildren","components","children","Object","entries","acc","ComponentClass","selector","length","map","el","__isBase__","defineProperty","prototype","value","asyncComponent","then","module","ResolvedClass","default","__isAsync__","getOptions","options","JSON","parse","err","Error","call","method","$isMounted","mountComponent","component","$mount","mountComponents","$children","values","forEach","$child","destroyComponent","$destroy","destroyComponents","initService","service","add","remove","$id","Base","$el","defineProperties","writable","unbindMethods","$on","loadedHandler","event","addEventListener","removeEventListener","useScroll","useResize","useRaf","usePointer","useKey","eventMethods","startsWith","$refOrRefs","refEventMethod","replace","c","toUpperCase","eventMethod","index","eventName","toLowerCase","handler","get","exclude","__isChild__","EventManager"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport nanoid from 'nanoid/non-secure';\nimport autoBind from '../utils/object/autoBind';\nimport getAllProperties from '../utils/object/getAllProperties';\nimport EventManager from './EventManager';\nimport hasMethod from '../utils/hasMethod';\nimport usePointer from '../services/pointer';\nimport useRaf from '../services/raf';\nimport useResize from '../services/resize';\nimport useScroll from '../services/scroll';\nimport useKey from '../services/key';\n\n/**\n * Verbose debug for the component.\n *\n * @param  {...any} args The arguments passed to the method\n * @return {void}\n */\nfunction debug(instance, ...args) {\n  return instance.$options.debug\n    ? window.console.log.apply(window, [instance.config.name, ...args])\n    : () => {};\n}\n\n/**\n * Get all refs of a component.\n *\n * @param  {Base}        instance The component's instance.\n * @param  {HTMLElement} element  The component's root element.\n * @return {Object}               Return an object containing all the component's refs.\n */\nfunction getRefs(instance, element) {\n  const allRefs = Array.from(element.querySelectorAll(`[data-ref]`));\n  const childrenRefs = Array.from(element.querySelectorAll(`:scope [data-component] [data-ref]`));\n  const elements = allRefs.filter(ref => !childrenRefs.includes(ref));\n\n  const refs = elements.reduce(($refs, $ref) => {\n    const refName = $ref.dataset.ref;\n    const $realRef = $ref.__base__ ? $ref.__base__ : $ref;\n\n    if ($refs[refName]) {\n      if (Array.isArray($refs[refName])) {\n        $refs[refName].push($realRef);\n      } else {\n        $refs[refName] = [$refs[refName], $realRef];\n      }\n    } else {\n      $refs[refName] = $realRef;\n    }\n\n    return $refs;\n  }, {});\n\n  instance.$emit('get:refs', refs);\n  return refs;\n}\n\n/**\n *\n * @param  {Base}        instance   The component's instance.\n * @param  {HTMLElement} element    The component's root element\n * @param  {Object}      components The children components' classes\n * @return {null|Object}            Returns `null` if no child components are defined or an object of all child component instances\n */\nfunction getChildren(instance, element, components = {}) {\n  const children = Object.entries(components).reduce((acc, [name, ComponentClass]) => {\n    const selector = `[data-component=\"${name}\"]`;\n    const elements = Array.from(element.querySelectorAll(selector));\n\n    if (elements.length === 0) {\n      return acc;\n    }\n\n    acc[name] = elements.map(el => {\n      // Return existing instance if it exists\n      if (el.__base__) {\n        return el.__base__;\n      }\n\n      // Return a new instance if the component class is a child of the Base class\n      if (ComponentClass.__isBase__) {\n        Object.defineProperty(ComponentClass.prototype, '__isChild__', { value: true });\n        return new ComponentClass(el);\n      }\n\n      // Resolve async components\n      const asyncComponent = ComponentClass().then(module => {\n        const ResolvedClass = module.default;\n        Object.defineProperty(ResolvedClass.prototype, '__isChild__', { value: true });\n        return new ResolvedClass(el);\n      });\n\n      asyncComponent.__isAsync__ = true;\n\n      return asyncComponent;\n    });\n\n    return acc;\n  }, {});\n\n  instance.$emit('get:children', children);\n  return children;\n}\n\n/**\n * Get a component's options.\n *\n * @param  {Base}        instance The component's instance.\n * @param  {HTMLElement} element  The component's root element.\n * @param  {Object}      config   The component's default config.\n * @return {Object}               The component's merged options.\n */\nfunction getOptions(instance, element, config = {}) {\n  let options = {};\n  if (element.dataset.options) {\n    try {\n      options = JSON.parse(element.dataset.options);\n    } catch (err) {\n      throw new Error('Can not parse the `data-options` attribute. Is it a valid JSON string?');\n    }\n  }\n\n  options = { ...config, ...(options || {}) };\n  instance.$emit('get:options', options);\n  return options;\n}\n\n/**\n * Call the given method while applying the given arguments.\n *\n * @param {String} method The method to call\n * @param {...any} args   The arguments to pass to the method\n */\nfunction call(instance, method, ...args) {\n  debug(instance, 'call', method, ...args);\n\n  // Prevent duplicate call of `mounted` and `destroyed`\n  // methods based on the component status\n  if (\n    (method === 'destroyed' && !instance.$isMounted) ||\n    (method === 'mounted' && instance.$isMounted)\n  ) {\n    debug(instance, 'not', method, 'because the method has already been triggered once.');\n    return instance;\n  }\n\n  instance.$emit(method, ...args);\n\n  // We always emit an event, but we do not call the method if it does not exist\n  if (!hasMethod(instance, method)) {\n    return instance;\n  }\n\n  instance[method].call(instance, ...args);\n  debug(instance, method, instance, ...args);\n\n  return instance;\n}\n\n/**\n * Mount a given component which might be async.\n *\n * @param  {Base|Promise} component The component to mount.\n * @return {void}\n */\nfunction mountComponent(component) {\n  if (component.__isAsync__) {\n    component.then(instance => instance.$mount());\n  } else {\n    component.$mount();\n  }\n}\n\n/**\n * Mount children components of a given instance.\n *\n * @param  {Base} instance The parent component's instance.\n * @return {void}\n */\nfunction mountComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n\n  debug(instance, 'mountComponents', instance.$children);\n\n  Object.values(instance.$children).forEach($child => {\n    if (Array.isArray($child)) {\n      $child.forEach(mountComponent);\n    } else {\n      mountComponent($child);\n    }\n  });\n}\n\n/**\n * Destroy a given component which might be async.\n *\n * @param  {Base|Promise} component The component to destroy.\n * @return {void}\n */\nfunction destroyComponent(component) {\n  if (component.__isAsync__) {\n    component.then(instance => instance.$destroy());\n  } else {\n    component.$destroy();\n  }\n}\n\n/**\n * Destroy children components of a given instance.\n *\n * @param  {Base} instance The parent component's instance.\n * @return {void}\n */\nfunction destroyComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n  debug(instance, 'destroyComponents', instance.$children);\n\n  Object.values(instance.$children).forEach($child => {\n    if (Array.isArray($child)) {\n      $child.forEach(destroyComponent);\n    } else {\n      destroyComponent($child);\n    }\n  });\n}\n\n/**\n * Init the given service and bind it to the given instance.\n *\n * @param  {Base}     instance The Base instance.\n * @param  {String}   method   The instance to test for binding\n * @param  {Function} service  The service `use...` function\n * @return {Function}          A function to unbind the service\n */\nfunction initService(instance, method, service) {\n  if (!hasMethod(instance, method)) {\n    return () => {};\n  }\n\n  const { add, remove } = service();\n  add(instance.$id, (...args) => {\n    call(instance, method, ...args);\n  });\n\n  return () => remove(instance.$id);\n}\n\n/**\n * Page lifecycle class\n *\n * @method mounted   Fired when the class is instantiated\n * @method loaded    Fired on the window's load event\n * @method ticked    Fired each frame with `requestAnimationFrame`\n * @method resized   Fired when the window is resized (`resize` event)\n * @method moved     Fired when the pointer has moved (`touchmove` and `mousemove` events)\n * @method scrolled  Fired with debounce when the document is scrolled (`scroll` event)\n * @method destroyed Fired when the window is being unloaded (`unload` event)\n */\nexport default class Base extends EventManager {\n  /**\n   * Get the component's refs.\n   * @return {Object}\n   */\n  get $refs() {\n    return getRefs(this, this.$el);\n  }\n\n  /**\n   * Get the component's children components.\n   * @return {Object}\n   */\n  get $children() {\n    return getChildren(this, this.$el, (this.config || {}).components || {});\n  }\n\n  /**\n   * Get the component's merged config and options.\n   * @return {Object}\n   */\n  get $options() {\n    return getOptions(this, this.$el, this.config || {});\n  }\n\n  /**\n   * Class constructor where all the magic takes place\n   * @param  {Object}    options An option object\n   * @return {Base}         The mounted instance\n   */\n  constructor(element) {\n    super();\n\n    if (!this.config) {\n      throw new Error('The `config` getter must be defined.');\n    }\n\n    if (!this.config.name) {\n      throw new Error('The `config.name` property is required.');\n    }\n\n    if (!element) {\n      throw new Error('The root element must be defined.');\n    }\n\n    // eslint-disable-next-line\n    Object.defineProperties(this, {\n      $id: {\n        value: `${this.config.name}-${nanoid()}`,\n      },\n      $isMounted: {\n        value: false,\n        writable: true,\n      },\n      $el: {\n        value: element,\n      },\n    });\n\n    debug(this, 'constructor', this);\n\n    let unbindMethods = [];\n\n    // Bind all the methods when the component is mounted,\n    // we save the unbind methods to unbind them all when\n    // the component is destroyed.\n    this.$on('mounted', () => {\n      unbindMethods = [];\n      // Fire the `loaded` method on window load\n      if (hasMethod(this, 'loaded')) {\n        const loadedHandler = event => {\n          call(this, 'loaded', { event });\n        };\n        window.addEventListener('load', loadedHandler);\n        unbindMethods.push(() => {\n          window.removeEventListener('load', loadedHandler);\n        });\n      }\n\n      // Fire the `scrolled` method on window/document scroll\n      unbindMethods = [\n        ...unbindMethods,\n        initService(this, 'scrolled', useScroll),\n        initService(this, 'resized', useResize),\n        initService(this, 'ticked', useRaf),\n        initService(this, 'moved', usePointer),\n        initService(this, 'keyed', useKey),\n      ];\n\n      // Bind method to events on refs\n      let eventMethods = getAllProperties(this).filter(([name]) => name.startsWith('on'));\n\n      Object.entries(this.$refs).forEach(([refName, $refOrRefs]) => {\n        const $refs = Array.isArray($refOrRefs) ? $refOrRefs : [$refOrRefs];\n        const refEventMethod = `on${refName.replace(/^\\w/, c => c.toUpperCase())}`;\n\n        eventMethods\n          .filter(([eventMethod]) => eventMethod.startsWith(refEventMethod))\n          .forEach(([eventMethod]) => {\n            $refs.forEach(($ref, index) => {\n              const eventName = eventMethod.replace(refEventMethod, '').toLowerCase();\n              const handler = event => this[eventMethod](event, index);\n              $ref.addEventListener(eventName, handler);\n\n              unbindMethods.push(() => {\n                $ref.removeEventListener(eventName, index);\n              });\n            });\n          });\n\n        eventMethods = eventMethods.filter(\n          ([eventMethod]) => !eventMethod.startsWith(refEventMethod)\n        );\n      });\n\n      eventMethods.forEach(([eventMethod]) => {\n        const eventName = eventMethod.replace(/^on/, '').toLowerCase();\n        this.$el.addEventListener(eventName, this[eventMethod]);\n        unbindMethods.push(() => {\n          this.$el.removeEventListener(eventName, this[eventMethod]);\n        });\n      });\n\n      mountComponents(this);\n      this.$isMounted = true;\n    });\n\n    this.$on('destroyed', () => {\n      this.$isMounted = false;\n      unbindMethods.forEach(method => method());\n      destroyComponents(this);\n    });\n\n    if (!this.$el.__base__) {\n      // Attach the instance to the root element\n      Object.defineProperty(this.$el, '__base__', {\n        get: () => this,\n      });\n    }\n\n    // Autobind all methods to the instance\n    autoBind(this, {\n      exclude: [\n        '$mount',\n        '$destroy',\n        '$log',\n        '$on',\n        '$once',\n        '$off',\n        '$emit',\n        'mounted',\n        'loaded',\n        'ticked',\n        'resized',\n        'moved',\n        'keyed',\n        'scrolled',\n        'destroyed',\n      ],\n    });\n\n    // Mount class which are not used as another component's child.\n    if (!this.__isChild__) {\n      this.$mount();\n    }\n\n    return this;\n  }\n\n  /**\n   * Small helper to log stuff.\n   *\n   * @param  {...any} args The arguments passed to the method\n   * @return {void}\n   */\n  $log(...args) {\n    return this.$options.log\n      ? window.console.log.apply(window, [this.config.name, ...args])\n      : () => {};\n  }\n\n  /**\n   * Trigger the `mounted` callback.\n   */\n  $mount() {\n    debug(this, '$mount');\n    call(this, 'mounted');\n    return this;\n  }\n\n  /**\n   * Trigger the `destroyed` callback.\n   */\n  $destroy() {\n    debug(this, '$destroy');\n    call(this, 'destroyed');\n    return this;\n  }\n}\n\nBase.__isBase__ = true;\n"],"file":"Base.js"}