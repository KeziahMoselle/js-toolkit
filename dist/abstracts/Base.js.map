{"version":3,"sources":["../../src/abstracts/Base.js"],"names":["debug","instance","args","$options","window","console","log","apply","config","name","getRefs","element","elements","Array","from","querySelectorAll","length","reduce","$refs","$ref","refName","dataset","ref","replace","$realRef","__base__","isArray","push","getChildren","components","Object","entries","acc","ComponentClass","prototype","selector","el","map","options","call","method","$isMounted","$emit","mountComponents","$children","values","forEach","$child","c","$mount","destroyComponents","$destroy","initService","service","add","remove","$id","Base","Error","$el","document","querySelector","JSON","parse","err","unbindMethods","$on","loadedHandler","event","addEventListener","removeEventListener","useScroll","useResize","useRaf","usePointer","useKey","requestAnimationFrame","EventManager"],"mappings":"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","sourcesContent":["import nanoid from 'nanoid/non-secure';\nimport autoBind from 'auto-bind';\nimport EventManager from './EventManager';\nimport hasMethod from '../utils/hasMethod';\nimport usePointer from '../services/pointer';\nimport useRaf from '../services/raf';\nimport useResize from '../services/resize';\nimport useScroll from '../services/scroll';\nimport useKey from '../services/key';\n\n/**\n * Verbose debug for the component.\n * @param  {...any} args The arguments passed to the method\n * @return {void}\n */\nfunction debug(instance, ...args) {\n  return instance.$options.debug\n    ? window.console.log.apply(window, [instance.config.name, ...args])\n    : () => {};\n}\n\n/**\n * Get all refs of a component.\n *\n * @param {HTMLElement}  element The component's root element\n * @param {String}       name    The component's name\n * @return {null|Object}         Returns `null` if no refs were found or an object of references\n */\nfunction getRefs(element, name) {\n  const elements = Array.from(element.querySelectorAll(`[data-ref^=\"${name}.\"]`));\n\n  if (elements.length === 0) {\n    return null;\n  }\n\n  return elements.reduce(($refs, $ref) => {\n    const refName = $ref.dataset.ref.replace(`${name}.`, '');\n    // eslint-disable-next-line no-underscore-dangle\n    const $realRef = $ref.__base__ ? $ref.__base__ : $ref;\n\n    if ($refs[refName]) {\n      if (Array.isArray($refs[refName])) {\n        $refs[refName].push($realRef);\n      } else {\n        $refs[refName] = [$refs[refName], $realRef];\n      }\n    } else {\n      $refs[refName] = $realRef;\n    }\n\n    return $refs;\n  }, {});\n}\n\n/**\n *\n * @param  {HTMLElement} element    The component's root element\n * @param  {Object}      components The children components' classes\n * @return {null|Object}            Returns `null` if no child components are defined or an object of all child component instances\n */\nfunction getChildren(element, components) {\n  if (!components) {\n    return null;\n  }\n\n  return Object.entries(components).reduce((acc, [name, ComponentClass]) => {\n    const { config } = ComponentClass.prototype || {};\n    const selector = config.el || `[data-component=\"${name}\"]`;\n    const elements = Array.from(element.querySelectorAll(selector));\n\n    if (elements.length === 0) {\n      return acc;\n    }\n\n    acc[name] = elements.map(el => {\n      const { options } = el.dataset;\n      return new ComponentClass(el, options);\n    });\n\n    return acc;\n  }, {});\n}\n\n/**\n * Call the given method while applying the given arguments.\n *\n * @param {String} method The method to call\n * @param {...any} args   The arguments to pass to the method\n */\nfunction call(instance, method, ...args) {\n  debug(instance, 'call', method, ...args);\n\n  // Prevent duplicate call of `mounted` and `destroyed`\n  // methods based on the component status\n  if (\n    (method === 'destroyed' && !instance.$isMounted) ||\n    (method === 'mounted' && instance.$isMounted)\n  ) {\n    debug(instance, 'not', method, 'because the method has already been triggered once.');\n    return instance;\n  }\n\n  instance.$emit(method, ...args);\n\n  // We always emit an event, but we do not call the method if it does not exist\n  if (!hasMethod(instance, method)) {\n    return instance;\n  }\n\n  instance[method].call(instance, ...args);\n  debug(instance, method, instance, ...args);\n\n  return instance;\n}\n\n/**\n * Tie the components' `mounted` method to the instance\n */\nfunction mountComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n  debug(instance, 'mountComponents', instance.$children);\n\n  Object.values(instance.$children).forEach($child => {\n    if (Array.isArray($child)) {\n      $child.forEach(c => {\n        c.$mount();\n      });\n    } else {\n      $child.$mount();\n    }\n  });\n}\n\n/**\n * Tie the components' `destroyed` method to the instance.\n *\n * @param  {Base} instance The base instance.\n * @return {void}\n */\nfunction destroyComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n  debug(instance, 'destroyComponents', instance.$children);\n\n  Object.values(instance.$children).forEach($child => {\n    if (Array.isArray($child)) {\n      $child.forEach(c => {\n        c.$destroy();\n      });\n    } else {\n      $child.$destroy();\n    }\n  });\n}\n\n/**\n * Init the given service and bind it to the given instance.\n *\n * @param  {Base}     instance The Base instance.\n * @param  {String}   method   The instance to test for binding\n * @param  {Function} service  The service `use...` function\n * @return {Function}          A function to unbind the service\n */\nfunction initService(instance, method, service) {\n  if (!hasMethod(instance, method)) {\n    return () => {};\n  }\n\n  const { add, remove } = service();\n  add(instance.$id, (...args) => {\n    call(instance, method, ...args);\n  });\n\n  return () => remove(instance.$id);\n}\n\n/**\n * Page lifecycle class\n *\n * @method mounted   Fired when the class is instantiated\n * @method loaded    Fired on the window's load event\n * @method ticked    Fired each frame with `requestAnimationFrame`\n * @method resized   Fired when the window is resized (`resize` event)\n * @method moved     Fired when the pointer has moved (`touchmove` and `mousemove` events)\n * @method scrolled  Fired with debounce when the document is scrolled (`scroll` event)\n * @method destroyed Fired when the window is being unloaded (`unload` event)\n */\nexport default class Base extends EventManager {\n  /**\n   * Class constructor where all the magic takes place\n   * @param  {Object}    options An option object\n   * @return {Base}         The mounted instance\n   */\n  constructor(element) {\n    super();\n\n    if (!this.config) {\n      throw new Error('The `config` getter must be defined.');\n    }\n\n    if (!this.config.name) {\n      throw new Error('The `config.name` property is required.');\n    }\n\n    this.$isMounted = false;\n    this.$id = `${this.config.name}-${nanoid()}`;\n    this.$el = element || document.querySelector(this.config.el);\n\n    if (!this.$el) {\n      throw new Error('Unable to find the root element.');\n    }\n\n    let options = {};\n    if (this.$el.dataset.options) {\n      try {\n        options = JSON.parse(this.$el.dataset.options);\n      } catch (err) {\n        throw new Error('Can not parse the `data-options` attribute. Is it a valid JSON string?');\n      }\n    }\n\n    this.$options = { ...this.config, ...(options || {}) };\n\n    debug(this, 'constructor', this);\n\n    const $refs = getRefs(this.$el, this.config.name);\n    if ($refs) {\n      this.$refs = $refs;\n    }\n\n    const $children = getChildren(this.$el, this.config.components);\n    if ($children) {\n      this.$children = $children;\n    }\n\n    let unbindMethods = [];\n\n    // Bind all the methods when the component is mounted,\n    // we save the unbind methods to unbind them all when\n    // the component is destroyed.\n    this.$on('mounted', () => {\n      unbindMethods = [];\n      // Fire the `loaded` method on window load\n      if (hasMethod(this, 'loaded')) {\n        const loadedHandler = event => {\n          call(this, 'loaded', { event });\n        };\n        window.addEventListener('load', loadedHandler);\n        unbindMethods.push(() => {\n          window.removeEventListener('load', loadedHandler);\n        });\n      }\n\n      // Fire the `scrolled` method on window/document scroll\n      unbindMethods = [\n        ...unbindMethods,\n        initService(this, 'scrolled', useScroll),\n        initService(this, 'resized', useResize),\n        initService(this, 'ticked', useRaf),\n        initService(this, 'moved', usePointer),\n        initService(this, 'keyed', useKey),\n      ];\n\n      mountComponents(this);\n      this.$isMounted = true;\n    });\n\n    this.$on('destroyed', () => {\n      this.$isMounted = false;\n      unbindMethods.forEach(method => method());\n      destroyComponents(this);\n    });\n\n    // Attach the instance to the root element\n    // eslint-disable-next-line no-underscore-dangle\n    this.$el.__base__ = this;\n\n    // Autobind all methods to the instance\n    autoBind(this);\n\n    // Fire the `mounted` method on the next frame so the class\n    // properties are correctly loaded\n    requestAnimationFrame(() => {\n      this.$mount();\n    });\n\n    return this;\n  }\n\n  /**\n   * Small helper to log stuff.\n   *\n   * @param  {...any} args The arguments passed to the method\n   * @return {void}\n   */\n  $log(...args) {\n    return this.$options.log\n      ? window.console.log.apply(window, [this.config.name, ...args])\n      : () => {};\n  }\n\n  /**\n   * Trigger the `mounted` callback.\n   */\n  $mount() {\n    debug(this, '$mount');\n    call(this, 'mounted');\n    return this;\n  }\n\n  /**\n   * Trigger the `destroyed` callback.\n   */\n  $destroy() {\n    debug(this, '$destroy');\n    call(this, 'destroyed');\n    return this;\n  }\n}\n"],"file":"Base.js"}