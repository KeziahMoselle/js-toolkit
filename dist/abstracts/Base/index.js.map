{"version":3,"sources":["../../../src/abstracts/Base/index.js"],"names":["Base","$el","config","components","newOptions","element","Error","name","Object","defineProperties","$id","value","$isMounted","writable","__base__","defineProperty","get","configurable","exclude","_excludeFromAutoBind","unbindMethods","$on","forEach","method","__isChild__","$mount","args","$options","log","window","console","apply","$destroy","nameOrSelector","map","el","EventManager","__isBase__"],"mappings":"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","sourcesContent":["import nanoid from 'nanoid/non-secure';\nimport autoBind from '../../utils/object/autoBind';\nimport EventManager from '../EventManager';\nimport { callMethod, debug } from './utils';\nimport { getChildren, getComponentElements } from './children';\nimport { getOptions, setOptions } from './options';\nimport { getRefs } from './refs';\nimport { mountComponents, destroyComponents } from './components';\nimport bindServices from './services';\nimport bindEvents from './events';\n\n/**\n * Page lifecycle class\n *\n * @method mounted   Fired when the class is instantiated\n * @method loaded    Fired on the window's load event\n * @method ticked    Fired each frame with `requestAnimationFrame`\n * @method resized   Fired when the window is resized (`resize` event)\n * @method moved     Fired when the pointer has moved (`touchmove` and `mousemove` events)\n * @method scrolled  Fired with debounce when the document is scrolled (`scroll` event)\n * @method destroyed Fired when the window is being unloaded (`unload` event)\n */\nexport default class Base extends EventManager {\n  /**\n   * Get the component's refs.\n   * @return {Object}\n   */\n  get $refs() {\n    return getRefs(this, this.$el);\n  }\n\n  /**\n   * Get the component's children components.\n   * @return {Object}\n   */\n  get $children() {\n    return getChildren(this, this.$el, this.config.components || {});\n  }\n\n  /**\n   * Get the component's merged config and options.\n   * @return {Object}\n   */\n  get $options() {\n    return getOptions(this, this.$el, this.config);\n  }\n\n  /**\n   * Set the components option.\n   * @param  {Object} value The new options values to merge with the old ones.\n   * @return {void}\n   */\n  set $options(newOptions) {\n    setOptions(this, this.$el, newOptions);\n  }\n\n  /**\n   * Class constructor where all the magic takes place.\n   *\n   * @param  {HTMLElement} element The component's root element.\n   * @return {Base}                A Base instance.\n   */\n  constructor(element) {\n    super();\n\n    if (!this.config) {\n      throw new Error('The `config` getter must be defined.');\n    }\n\n    if (!this.config.name) {\n      throw new Error('The `config.name` property is required.');\n    }\n\n    if (!element) {\n      throw new Error('The root element must be defined.');\n    }\n\n    Object.defineProperties(this, {\n      $id: {\n        value: `${this.config.name}-${nanoid()}`,\n      },\n      $isMounted: {\n        value: false,\n        writable: true,\n      },\n      $el: {\n        value: element,\n      },\n    });\n\n    if (!this.$el.__base__) {\n      Object.defineProperty(this.$el, '__base__', {\n        get: () => this,\n        configurable: true,\n      });\n    }\n\n    // Autobind all methods to the instance\n    autoBind(this, {\n      exclude: [\n        '$mount',\n        '$destroy',\n        '$log',\n        '$on',\n        '$once',\n        '$off',\n        '$emit',\n        'mounted',\n        'loaded',\n        'ticked',\n        'resized',\n        'moved',\n        'keyed',\n        'scrolled',\n        'destroyed',\n        ...(this._excludeFromAutoBind || []),\n      ],\n    });\n\n    let unbindMethods = [];\n    this.$on('mounted', () => {\n      mountComponents(this);\n      unbindMethods = [...bindServices(this), ...bindEvents(this)];\n      this.$isMounted = true;\n    });\n\n    this.$on('destroyed', () => {\n      this.$isMounted = false;\n      unbindMethods.forEach((method) => method());\n      destroyComponents(this);\n    });\n\n    // Mount class which are not used as another component's child.\n    if (!this.__isChild__) {\n      this.$mount();\n      Object.defineProperty(this, '$parent', { get: () => null });\n    }\n\n    debug(this, 'constructor', this);\n    return this;\n  }\n\n  /**\n   * Small helper to log stuff.\n   *\n   * @param  {...any} args The arguments passed to the method\n   * @return {void}\n   */\n  $log(...args) {\n    return this.$options.log\n      ? window.console.log.apply(window, [this.config.name, ...args])\n      : () => {};\n  }\n\n  /**\n   * Trigger the `mounted` callback.\n   */\n  $mount() {\n    debug(this, '$mount');\n    callMethod(this, 'mounted');\n    return this;\n  }\n\n  /**\n   * Trigger the `destroyed` callback.\n   */\n  $destroy() {\n    debug(this, '$destroy');\n    callMethod(this, 'destroyed');\n    return this;\n  }\n\n  /**\n   * Terminate a child instance when it is not needed anymore.\n   * @return {void}\n   */\n  $terminate() {\n    debug(this, '$terminate');\n\n    // First, destroy the component.\n    this.$destroy();\n\n    // Execute the `terminated` hook if it exists\n    callMethod(this, 'terminated');\n\n    // Delete the reference to the instance\n    delete this.$el.__base__;\n\n    // And update its status to prevent re-instantiation when accessing the\n    // parent's `$children` property\n    Object.defineProperty(this.$el, '__base__', {\n      value: 'terminated',\n      configurable: false,\n      writable: false,\n    });\n  }\n\n  /**\n   * Factory method to generate multiple instance of the class.\n   *\n   * @param  {String}      selector The selector on which to mount each instance.\n   * @return {Array<Base>}          A list of the created instance.\n   */\n  static $factory(nameOrSelector) {\n    if (!nameOrSelector) {\n      throw new Error(\n        'The $factory method requires a componentâ€™s name or selector to be specified.'\n      );\n    }\n\n    return getComponentElements(nameOrSelector).map((el) => new this(el));\n  }\n}\n\nBase.__isBase__ = true;\n"],"file":"index.js"}