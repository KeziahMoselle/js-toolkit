{"version":3,"sources":["../../../src/abstracts/Base/index.js"],"names":["nanoid","autoBind","EventManager","callMethod","debug","getChildren","getOptions","setOptions","getRefs","mountComponents","destroyComponents","bindServices","bindEvents","Base","$el","config","components","newOptions","element","Error","name","Object","defineProperties","$id","value","$isMounted","writable","__base__","defineProperty","get","configurable","exclude","_excludeFromAutoBind","unbindMethods","$on","forEach","method","__isChild__","$mount","args","$options","log","window","console","apply","$destroy","__isBase__"],"mappings":"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","sourcesContent":["import nanoid from 'nanoid/non-secure';\nimport autoBind from '../../utils/object/autoBind';\nimport EventManager from '../EventManager';\nimport { callMethod, debug } from './utils';\nimport { getChildren } from './children';\nimport { getOptions, setOptions } from './options';\nimport { getRefs } from './refs';\nimport { mountComponents, destroyComponents } from './components';\nimport bindServices from './services';\nimport bindEvents from './events';\n\n/**\n * Page lifecycle class\n *\n * @method mounted   Fired when the class is instantiated\n * @method loaded    Fired on the window's load event\n * @method ticked    Fired each frame with `requestAnimationFrame`\n * @method resized   Fired when the window is resized (`resize` event)\n * @method moved     Fired when the pointer has moved (`touchmove` and `mousemove` events)\n * @method scrolled  Fired with debounce when the document is scrolled (`scroll` event)\n * @method destroyed Fired when the window is being unloaded (`unload` event)\n */\nexport default class Base extends EventManager {\n  /**\n   * Get the component's refs.\n   * @return {Object}\n   */\n  get $refs() {\n    return getRefs(this, this.$el);\n  }\n\n  /**\n   * Get the component's children components.\n   * @return {Object}\n   */\n  get $children() {\n    return getChildren(this, this.$el, this.config.components || {});\n  }\n\n  /**\n   * Get the component's merged config and options.\n   * @return {Object}\n   */\n  get $options() {\n    return getOptions(this, this.$el, this.config);\n  }\n\n  /**\n   * Set the components option.\n   * @param  {Object} value The new options values to merge with the old ones.\n   * @return {void}\n   */\n  set $options(newOptions) {\n    setOptions(this, this.$el, newOptions);\n  }\n\n  /**\n   * Class constructor where all the magic takes place.\n   *\n   * @param  {HTMLElement} element The component's root element.\n   * @return {Base}                A Base instance.\n   */\n  constructor(element) {\n    super();\n\n    if (!this.config) {\n      throw new Error('The `config` getter must be defined.');\n    }\n\n    if (!this.config.name) {\n      throw new Error('The `config.name` property is required.');\n    }\n\n    if (!element) {\n      throw new Error('The root element must be defined.');\n    }\n\n    Object.defineProperties(this, {\n      $id: {\n        value: `${this.config.name}-${nanoid()}`,\n      },\n      $isMounted: {\n        value: false,\n        writable: true,\n      },\n      $el: {\n        value: element,\n      },\n    });\n\n    if (!this.$el.__base__) {\n      Object.defineProperty(this.$el, '__base__', {\n        get: () => this,\n        configurable: true,\n      });\n    }\n\n    // Autobind all methods to the instance\n    autoBind(this, {\n      exclude: [\n        '$mount',\n        '$update',\n        '$destroy',\n        '$terminate',\n        '$log',\n        '$on',\n        '$once',\n        '$off',\n        '$emit',\n        'mounted',\n        'loaded',\n        'ticked',\n        'resized',\n        'moved',\n        'keyed',\n        'scrolled',\n        'destroyed',\n        'terminated',\n        ...(this._excludeFromAutoBind || []),\n      ],\n    });\n\n    let unbindMethods = [];\n    this.$on('mounted', () => {\n      mountComponents(this);\n      unbindMethods = [...bindServices(this), ...bindEvents(this)];\n      this.$isMounted = true;\n    });\n\n    this.$on('updated', () => {\n      unbindMethods.forEach((method) => method());\n      mountComponents(this);\n      unbindMethods = [...bindServices(this), ...bindEvents(this)];\n    });\n\n    this.$on('destroyed', () => {\n      this.$isMounted = false;\n      unbindMethods.forEach((method) => method());\n      destroyComponents(this);\n    });\n\n    // Mount class which are not used as another component's child.\n    if (!this.__isChild__) {\n      this.$mount();\n      Object.defineProperty(this, '$parent', { get: () => null });\n    }\n\n    debug(this, 'constructor', this);\n    return this;\n  }\n\n  /**\n   * Small helper to log stuff.\n   *\n   * @param  {...any} args The arguments passed to the method\n   * @return {void}\n   */\n  $log(...args) {\n    return this.$options.log\n      ? window.console.log.apply(window, [this.config.name, ...args])\n      : () => {};\n  }\n\n  /**\n   * Trigger the `mounted` callback.\n   */\n  $mount() {\n    debug(this, '$mount');\n    callMethod(this, 'mounted');\n    return this;\n  }\n\n  /**\n   * Update the instance children.\n   */\n  $update() {\n    debug(this, '$update');\n    callMethod(this, 'updated');\n    return this;\n  }\n\n  /**\n   * Trigger the `destroyed` callback.\n   */\n  $destroy() {\n    debug(this, '$destroy');\n    callMethod(this, 'destroyed');\n    return this;\n  }\n\n  /**\n   * Terminate a child instance when it is not needed anymore.\n   * @return {void}\n   */\n  $terminate() {\n    debug(this, '$terminate');\n\n    // First, destroy the component.\n    this.$destroy();\n\n    // Execute the `terminated` hook if it exists\n    callMethod(this, 'terminated');\n\n    // Delete the reference to the instance\n    delete this.$el.__base__;\n\n    // And update its status to prevent re-instantiation when accessing the\n    // parent's `$children` property\n    Object.defineProperty(this.$el, '__base__', {\n      value: 'terminated',\n      configurable: false,\n      writable: false,\n    });\n  }\n}\n\nBase.__isBase__ = true;\n"],"file":"index.js"}