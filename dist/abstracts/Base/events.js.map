{"version":3,"sources":["../../../src/abstracts/Base/events.js"],"names":["bindEvents","instance","unbindMethods","eventMethods","filter","name","startsWith","Object","entries","$refs","forEach","refName","$refOrRefs","Array","isArray","refEventMethod","replace","c","toUpperCase","eventMethod","$ref","index","eventName","toLowerCase","handler","args","debug","unbindMethod","constructor","__isBase__","unbindComponentEvent","$on","$el","addEventListener","removeEventListener","push"],"mappings":"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","sourcesContent":["import getAllProperties from '../../utils/object/getAllProperties';\nimport { debug } from './utils';\n\n/**\n * Bind ref and children component's events to their corresponding method.\n *\n * @param  {Base} instance  A Base instance.\n * @return {Array}          A list of methods to unbind the events.\n */\nexport default function bindEvents(instance) {\n  const unbindMethods = [];\n  // Bind method to events on refs\n  let eventMethods = getAllProperties(instance).filter(([name]) => name.startsWith('on'));\n\n  Object.entries(instance.$refs).forEach(([refName, $refOrRefs]) => {\n    const $refs = Array.isArray($refOrRefs) ? $refOrRefs : [$refOrRefs];\n    const refEventMethod = `on${refName.replace(/^\\w/, c => c.toUpperCase())}`;\n\n    eventMethods\n      .filter(([eventMethod]) => eventMethod.startsWith(refEventMethod))\n      .forEach(([eventMethod]) => {\n        $refs.forEach(($ref, index) => {\n          const eventName = eventMethod.replace(refEventMethod, '').toLowerCase();\n          const handler = (...args) => {\n            debug(this, eventMethod, $ref, ...args, index);\n            this[eventMethod](...args, index);\n          };\n\n          let unbindMethod = () => {};\n          if ($ref.constructor && $ref.constructor.__isBase__) {\n            const unbindComponentEvent = $ref.$on(eventName, handler);\n            $ref.$el.addEventListener(eventName, handler);\n            unbindMethod = () => {\n              unbindComponentEvent();\n              $ref.$el.removeEventListener(eventName, handler);\n            };\n          } else {\n            $ref.addEventListener(eventName, handler);\n            unbindMethod = () => {\n              $ref.removeEventListener(eventName, handler);\n            };\n          }\n\n          unbindMethods.push(unbindMethod);\n        });\n      });\n\n    eventMethods = eventMethods.filter(([eventMethod]) => !eventMethod.startsWith(refEventMethod));\n  });\n\n  eventMethods.forEach(([eventMethod]) => {\n    const eventName = eventMethod.replace(/^on/, '').toLowerCase();\n    const handler = (...args) => {\n      debug(this, eventMethod, this.$el, ...args);\n      this[eventMethod](...args);\n    };\n    instance.$el.addEventListener(eventName, handler);\n    unbindMethods.push(() => {\n      instance.$el.removeEventListener(eventName, handler);\n    });\n  });\n\n  return unbindMethods;\n}\n"],"file":"events.js"}