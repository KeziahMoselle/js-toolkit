{"version":3,"sources":["../../../src/abstracts/Base/children.js"],"names":["getChild","el","ComponentClass","parent","__base__","child","Object","defineProperty","get","then","module","default","getComponentElements","nameOrSelector","element","document","selector","elements","Array","from","querySelectorAll","length","getChildren","instance","components","children","entries","reduce","acc","name","map","filter","$emit"],"mappings":";;AAmBA,SAASA,QAAT,CAAkBC,EAAlB,EAAsBC,cAAtB,EAAsCC,MAAtC,EAA8C;AAE5C,MAAIF,EAAE,CAACG,QAAP,EAAiB;AACf,WAAOH,EAAE,CAACG,QAAV;AACD;;AAGD,MAAI,aAAaF,cAAjB,EAAiC;AAC/B,QAAMG,KAAK,GAAG,IAAIH,cAAJ,CAAmBD,EAAnB,CAAd;AACAK,IAAAA,MAAM,CAACC,cAAP,CAAsBF,KAAtB,EAA6B,SAA7B,EAAwC;AAAEG,MAAAA,GAAG,EAAE;AAAA,eAAML,MAAN;AAAA;AAAP,KAAxC;AACA,WAAOE,KAAP;AACD;;AAGD,SAAOH,cAAc,GAAGO,IAAjB,CAAsB,UAACC,MAAD,EAAY;AAAA;;AAEvC,WAAOV,QAAQ,CAACC,EAAD,qBAAKS,MAAM,CAACC,OAAZ,6DAAuBD,MAAvB,EAA+BP,MAA/B,CAAf;AACD,GAHM,CAAP;AAID;;AAYD,OAAO,SAASS,oBAAT,CAA8BC,cAA9B,EAAkE;AAAA,MAApBC,OAAoB,uEAAVC,QAAU;AACvE,MAAMC,QAAQ,+BAAuBH,cAAvB,QAAd;AACA,MAAII,QAAQ,GAAG,EAAf;;AAEA,MAAI;AACFA,IAAAA,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWL,OAAO,CAACM,gBAAR,CAAyBJ,QAAzB,CAAX,CAAX;AAED,GAHD,CAGE,gBAAM,CAAE;;AAGV,MAAIC,QAAQ,CAACI,MAAT,KAAoB,CAAxB,EAA2B;AACzBJ,IAAAA,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWL,OAAO,CAACM,gBAAR,CAAyBP,cAAzB,CAAX,CAAX;AACD;;AAED,SAAOI,QAAP;AACD;AASD,OAAO,SAASK,WAAT,CAAqBC,QAArB,EAA+BT,OAA/B,EAAwCU,UAAxC,EAAoD;AACzD,MAAMC,QAAQ,GAAGnB,MAAM,CAACoB,OAAP,CAAeF,UAAf,EAA2BG,MAA3B,CAAkC,UAACC,GAAD,QAAiC;AAAA;AAAA,QAA1BC,IAA0B;AAAA,QAApB3B,cAAoB;;AAClF,QAAMe,QAAQ,GAAGL,oBAAoB,CAACiB,IAAD,EAAOf,OAAP,CAArC;;AAEA,QAAIG,QAAQ,CAACI,MAAT,KAAoB,CAAxB,EAA2B;AACzB,aAAOO,GAAP;AACD;;AAEDA,IAAAA,GAAG,CAACC,IAAD,CAAH,GAAYZ,QAAQ,CACjBa,GADS,CACL,UAAC7B,EAAD;AAAA,aAAQD,QAAQ,CAACC,EAAD,EAAKC,cAAL,EAAqBqB,QAArB,CAAhB;AAAA,KADK,EAITQ,MAJS,CAIF,UAAC9B,EAAD;AAAA,aAAQA,EAAE,KAAK,YAAf;AAAA,KAJE,CAAZ;;AAMA,QAAI2B,GAAG,CAACC,IAAD,CAAH,CAAUR,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,aAAOO,GAAG,CAACC,IAAD,CAAV;AACD;;AAED,WAAOD,GAAP;AACD,GAlBgB,EAkBd,EAlBc,CAAjB;AAoBAL,EAAAA,QAAQ,CAACS,KAAT,CAAe,cAAf,EAA+BP,QAA/B;AACA,SAAOA,QAAP;AACD;AAED,eAAe;AACbH,EAAAA,WAAW,EAAXA;AADa,CAAf","sourcesContent":["/**\n * @typedef {import('./index.js').default} Base\n * @typedef {import('./index.js').BaseComponent} BaseComponent\n * @typedef {import('./index.js').BaseAsyncComponent} BaseAsyncComponent\n * @typedef {import('./index.js').BaseConfigComponents} BaseConfigComponents\n */\n\n/**\n * Get a child component.\n *\n * @param {HTMLElement & { __base__?: Base | 'terminated' }} el\n *   The root element of the child component.\n * @param {BaseComponent|BaseAsyncComponent} ComponentClass\n *   A Base class or a Promise for async components.\n * @param {Base} parent\n *   The parent component instance.\n * @return {Base|Promise|'terminated'}\n *   A Base instance or a Promise resolving to a Base instance.\n */\nfunction getChild(el, ComponentClass, parent) {\n  // Return existing instance if it exists\n  if (el.__base__) {\n    return el.__base__;\n  }\n\n  // Return a new instance if the component class is a child of the Base class\n  if ('$isBase' in ComponentClass) {\n    const child = new ComponentClass(el);\n    Object.defineProperty(child, '$parent', { get: () => parent });\n    return child;\n  }\n\n  // Resolve async components\n  return ComponentClass().then((module) => {\n    // @ts-ignore\n    return getChild(el, module.default ?? module, parent);\n  });\n}\n\n/**\n * Get a list of elements based on the name of a component.\n *\n * @param {String} nameOrSelector\n *   The name or selector to used for this component.\n * @param {HTMLElement|Document} element\n *   The root element on which to query the selector, defaults to `document`.\n * @return {Array<HTMLElement>}\n *   A list of elements on which the component should be mounted.\n */\nexport function getComponentElements(nameOrSelector, element = document) {\n  const selector = `[data-component=\"${nameOrSelector}\"]`;\n  let elements = [];\n\n  try {\n    elements = Array.from(element.querySelectorAll(selector));\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  // If no child component found with the default selector, try a classic DOM selector\n  if (elements.length === 0) {\n    elements = Array.from(element.querySelectorAll(nameOrSelector));\n  }\n\n  return elements;\n}\n\n/**\n * Get child components.\n * @param  {Base}                 instance   The component's instance.\n * @param  {HTMLElement}          element    The component's root element\n * @param  {BaseConfigComponents} components The children components' classes\n * @return {null|Object}                     Returns `null` if no child components are defined or an object of all child component instances\n */\nexport function getChildren(instance, element, components) {\n  const children = Object.entries(components).reduce((acc, [name, ComponentClass]) => {\n    const elements = getComponentElements(name, element);\n\n    if (elements.length === 0) {\n      return acc;\n    }\n\n    acc[name] = elements\n      .map((el) => getChild(el, ComponentClass, instance))\n      // Filter out terminated children\n      // @ts-ignore\n      .filter((el) => el !== 'terminated');\n\n    if (acc[name].length === 0) {\n      delete acc[name];\n    }\n\n    return acc;\n  }, {});\n\n  instance.$emit('get:children', children);\n  return children;\n}\n\nexport default {\n  getChildren,\n};\n"],"file":"children.js"}