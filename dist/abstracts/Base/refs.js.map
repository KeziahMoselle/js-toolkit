{"version":3,"sources":["../../../src/abstracts/Base/refs.js"],"names":["getConfig","warn","scopeSelectorPonyfill","element","selector","uniqId","list","Array","from","querySelectorAll","err","attr","scopedSelector","setAttribute","removeAttribute","getRefs","instance","definedRefs","refs","allRefs","childrenRefs","$id","elements","filter","ref","includes","reduce","$refs","$ref","refName","dataset","$realRef","__base__","endsWith","replace","isArray","push","$emit"],"mappings":"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","sourcesContent":["import { getConfig, warn } from './utils';\n\n/**\n * @typedef {import('./index').default} Base\n */\n\n/**\n * A ponyfill for the CSS `:scope` selector which is not supported in IE11.\n * The following method will return an array of elements similare to the\n * `:scope ${selector}` selector.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/:scope\n * @see https://github.com/jonathantneal/element-qsa-scope\n *\n * @param  {HTMLElement} element  The element from which the scope is taken.\n * @param  {String}      selector The children selector.\n * @param  {String}      uniqId   A uniq ID to prefix the selector with.\n * @return {Array}                A list of elements.\n */\nexport function scopeSelectorPonyfill(element, selector, uniqId) {\n  let list = [];\n\n  try {\n    list = Array.from(element.querySelectorAll(`:scope ${selector}`));\n  } catch (err) {\n    const attr = `data-uniq-id`;\n    const scopedSelector = `[${attr}=\"${uniqId}\"] ${selector}`;\n    element.setAttribute(attr, uniqId);\n    list = Array.from(element.querySelectorAll(scopedSelector));\n    element.removeAttribute(attr);\n  }\n\n  return list;\n}\n\n/**\n * Get all refs of a component.\n *\n * @param  {Base}        instance The component's instance.\n * @param  {HTMLElement} element  The component's root element.\n * @return {Object}               Return an object containing all the component's refs.\n */\nexport function getRefs(instance, element) {\n  const definedRefs = getConfig(instance).refs || [];\n  /** @type {Array<HTMLElement>} */\n  const allRefs = Array.from(element.querySelectorAll(`[data-ref]`));\n  const childrenRefs = scopeSelectorPonyfill(element, '[data-component] [data-ref]', instance.$id);\n  const elements = allRefs.filter((ref) => !childrenRefs.includes(ref));\n\n  const refs = elements.reduce(\n    /**\n     * @param {Object} $refs\n     * @param {HTMLElement & {__base__?: Base}} $ref\n     */\n    ($refs, $ref) => {\n      let refName = $ref.dataset.ref;\n\n      if (!definedRefs.includes(refName)) {\n        warn(\n          instance,\n          `The \"${refName}\" ref is not defined in the class configuration.`,\n          'Did you forgot to define it?'\n        );\n      }\n\n      const $realRef = $ref.__base__ ? $ref.__base__ : $ref;\n\n      if (refName.endsWith('[]')) {\n        refName = refName.replace(/\\[\\]$/, '');\n\n        if (!$refs[refName]) {\n          $refs[refName] = [];\n        }\n      }\n\n      if ($refs[refName]) {\n        if (Array.isArray($refs[refName])) {\n          $refs[refName].push($realRef);\n        } else {\n          $refs[refName] = [$refs[refName], $realRef];\n          warn(\n            instance,\n            `The \"${refName}\" ref has been found multiple times.`,\n            'Did you forgot to add the `[]` suffix to its name?'\n          );\n        }\n      } else {\n        $refs[refName] = $realRef;\n      }\n\n      return $refs;\n    },\n    {}\n  );\n\n  instance.$emit('get:refs', refs);\n  return refs;\n}\n\nexport default {\n  getRefs,\n};\n"],"file":"refs.js"}